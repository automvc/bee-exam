[WARN] Auto table: parameter  ${month} in Orders${month} still has not value, will be ignore it!
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS Orders
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE Orders (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
userid  varchar(255) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
total  DECIMAL(19,6) DEFAULT NULL,  
createtime  varchar(255) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL,  
sequence  varchar(255) DEFAULT NULL,  
abc  varchar(255) DEFAULT NULL,  
updatetime  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS Orders_202007
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE Orders_202007 (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
userid  varchar(255) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
total  DECIMAL(19,6) DEFAULT NULL,  
createtime  varchar(255) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL,  
sequence  varchar(255) DEFAULT NULL,  
abc  varchar(255) DEFAULT NULL,  
updatetime  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS test_user
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE test_user (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
email  varchar(255) DEFAULT NULL,  
last_name  varchar(255) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
password  varchar(255) DEFAULT NULL,  
username  varchar(255) DEFAULT NULL,  
createtime  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS leaf_alloc
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE leaf_alloc (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
biz_tag  varchar(255) DEFAULT NULL,  
max_id  bigint(20) DEFAULT NULL,  
step  int(11) DEFAULT NULL,  
description  varchar(255) DEFAULT NULL,  
update_time  varchar(255) DEFAULT NULL,  
version  int(11) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS leaf_alloc2
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE leaf_alloc2 (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
biz_tag  varchar(255) DEFAULT NULL,  
max_id  bigint(20) DEFAULT NULL,  
step  int(11) DEFAULT NULL,  
description  varchar(255) DEFAULT NULL,  
update_time  varchar(255) DEFAULT NULL,  
version  int(11) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS scores
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE scores (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
classno  varchar(255) DEFAULT NULL,  
term  varchar(255) DEFAULT NULL,  
examno  varchar(255) DEFAULT NULL,  
subjectno  varchar(255) DEFAULT NULL,  
subject  varchar(255) DEFAULT NULL,  
stuno  varchar(255) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
teacherno  varchar(255) DEFAULT NULL,  
teachername  varchar(255) DEFAULT NULL,  
score  Double DEFAULT NULL,  
creater  varchar(255) DEFAULT NULL,  
createtime  timestamp DEFAULT CURRENT_TIMESTAMP,  
updater  varchar(255) DEFAULT NULL,  
updatetime  timestamp DEFAULT CURRENT_TIMESTAMP,  
remark  varchar(255) DEFAULT NULL,  
ext1  varchar(255) DEFAULT NULL,  
status  varchar(255) DEFAULT NULL,  
schoolno  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS assignexam
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE assignexam (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
classno  varchar(255) DEFAULT NULL,  
term  varchar(255) DEFAULT NULL,  
examno  varchar(255) DEFAULT NULL,  
subjectno  varchar(255) DEFAULT NULL,  
subject  varchar(255) DEFAULT NULL,  
creater  varchar(255) DEFAULT NULL,  
createtime  timestamp DEFAULT CURRENT_TIMESTAMP,  
updater  varchar(255) DEFAULT NULL,  
updatetime  timestamp DEFAULT CURRENT_TIMESTAMP,  
remark  varchar(255) DEFAULT NULL,  
ext1  varchar(255) DEFAULT NULL,  
status  varchar(255) DEFAULT NULL,  
schoolno  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS assigncourse
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE assigncourse (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
classno  varchar(255) DEFAULT NULL,  
term  varchar(255) DEFAULT NULL,  
teacherno  varchar(255) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
subjectno  varchar(255) DEFAULT NULL,  
subject  varchar(255) DEFAULT NULL,  
creater  varchar(255) DEFAULT NULL,  
createtime  timestamp DEFAULT CURRENT_TIMESTAMP,  
updater  varchar(255) DEFAULT NULL,  
updatetime  timestamp DEFAULT CURRENT_TIMESTAMP,  
remark  varchar(255) DEFAULT NULL,  
status  varchar(255) DEFAULT NULL,  
schoolno  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS clazz
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE clazz (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
classname  varchar(255) DEFAULT NULL,  
place  varchar(255) DEFAULT NULL,  
teachername  varchar(255) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS student
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE student (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
sid  int(11) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
age  int(11) DEFAULT NULL,  
sex  BIT DEFAULT NULL,  
majorid  varchar(255) DEFAULT NULL,  
flag  BIT DEFAULT NULL,  
classno  int(11) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS student_hobby
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE student_hobby (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
stu_id  varchar(255) DEFAULT NULL,  
hobby  varchar(255) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO orders VALUES ('100001', 'Bee', 'Bee(ORM Framework)', '95.01', '2020-03-02 11:29:28', 'test', '12345601', 'test1', null);
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO orders VALUES ('100002', 'bee', 'Bee', '96.01', '2020-03-02 11:29:28', 'test%a', '12345602', 'test2', '2020-03-02 16:34:19');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO orders VALUES ('100003', 'bee', 'Bee', '97.01', '2020-03-02 11:29:28', 'testx%', '12345603', 'test3', '2020-03-02 16:34:19');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO orders_202007 VALUES ('100001', 'Bee', 'Bee(ORM Framework)', '95.01', '2020-03-02 11:29:28', 'test', '12345601', 'test1', null);
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO orders_202007 VALUES ('100002', 'bee', 'Bee', '96.01', '2020-03-02 11:29:28', 'test%a', '12345602', 'test2', '2020-03-02 16:34:19');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO orders_202007 VALUES ('100003', 'bee', 'Bee', '97.01', '2020-03-02 11:29:28', 'testx%', '12345603', 'test3', '2020-03-02 16:34:19');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO test_user VALUES ('800001', 'beeUser@163.com', null, 'Bee', 'bee', 'bee', null);
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO test_user VALUES ('800002', 'honey@163.com', 'cn', 'Honey', 'honey', 'honey', null);
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc VALUES ('456537470402562', 'test', '100', '100', 'test segment', '2020-07-04 22:42:09', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc VALUES ('456537470402563', 'order', '100', '100', 'order segment', '2020-07-04 22:42:10', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc VALUES ('456537470402564', 'bee', '100', '100', 'order segment', '2020-09-19 19:05:10', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc2 VALUES ('456537470402562', 'test', '100', '100', 'test segment', '2020-07-04 22:42:09', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc2 VALUES ('456537470402563', 'order', '100', '100', 'order segment', '2020-07-04 22:42:10', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc2 VALUES ('456537470402564', 'bee', '100', '100', 'order segment', '2020-09-19 19:05:10', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [bee-exam] ====================CacheTest.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee0
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001,Bee(ORM Framework)
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] update SQL: update orders set name=? , remark=? where id=?   [values]: Bee(ORM Framework),other,100001
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=? and remark=?   [values]: 100001,Bee(ORM Framework),other
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=?   [values]: bee2,Bee--ORM Framework
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee3
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee4
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee5
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee6
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee6
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee3
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee7
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee8
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee9
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee10
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee3
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee8
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee11
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee11
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee8
[INFO] [Bee]  | <--  select rows: 0
[INFO] [bee-exam] ====================CacheTest.test======end.

[INFO] [bee-exam] ====================CacheTestDel.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee0
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001,Bee(ORM Framework)
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] update SQL: update orders set name=? , remark=? where id=?   [values]: Bee(ORM Framework),other,100001
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=? and remark=?   [values]: 100001,Bee(ORM Framework),other
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=?   [values]: bee2,Bee--ORM Framework
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee3
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee4
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee5
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee6
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee7
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee8
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee3
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee7
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee8
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee9
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee10
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee3
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee8
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee11
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee11
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee8
[INFO] [Bee]  | <--  select rows: 0
[INFO] [bee-exam] ====================CacheTestDel.test======end.

[INFO] [bee-exam] ====================CacheTestInsertArray.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee0
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001,Bee--ORM Framework
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee0
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] update SQL: update orders set name=? , remark=? where id=?   [values]: Bee--ORM Framework,other,100001
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 683632838574456,bee4,null,12.3,2022-03-02 11:15:58,null,null,null,null
[INFO] [Bee] --> index:1 ,  [values]: 683632838574457,bee5,null,12.3,2022-03-02 11:15:58,null,null,null,null
[INFO] [Bee] --> index:2 ,  [values]: 683632838574458,bee6,null,12.3,2022-03-02 11:15:58,null,null,null,null
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 3
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=? and remark=?   [values]: 100001,Bee--ORM Framework,other
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=?   [values]: bee2,Bee--ORM Framework
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee3
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and total=? and createtime=?   [values]: bee4,12.3,2022-03-02 11:15:58
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and total=? and createtime=?   [values]: bee5,12.3,2022-03-02 11:15:58
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and total=? and createtime=?   [values]: bee6,12.3,2022-03-02 11:15:58
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee3
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee7
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee8
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee9
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee10
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee3
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee8
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee11
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee11
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee8
[INFO] [Bee]  | <--  select rows: 0
[INFO] [bee-exam] ====================CacheTestInsertArray.test======end.

[INFO] [bee-exam] ====================CacheTestJson.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee0
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001,Bee--ORM Framework
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=?   [values]: bee2,Bee--ORM Framework
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee3
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee4
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee5
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee6
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] selectJson SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee6
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee3
[INFO] [Bee]  | <--  select rows: 0
[INFO] [bee-exam] ====================CacheTestJson.test======end.

[INFO] 2022-03-02 11:16:46  test cache Finished!
[INFO] [bee-exam] ====================RwDsExam.test======start:
[INFO] [Bee] ========= reset the dbName in HoneyConfig is :MySQL
[INFO] [Bee] Parse DataSourceMap: dataSource name to database name , result: {ds1=MySQL, ds2=MySQL, ds3=MySQL}
[INFO] [Bee] update SQL(updateFields) :update leaf_alloc set max_id=max_id+step where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] ---------------------------------update num is :0
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=100,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=100,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] [Bee] select(entity,start,size) SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] JdbcTransaction begin. 
[INFO] [Bee] update SQL(condition) :update leaf_alloc set max_id=max_id+step where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=100,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] [Bee] select(entity,start,size) SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] JdbcTransaction commit. 
[INFO] [Bee] ========= reset the dbName in HoneyConfig is :MySQL
[INFO] [bee-exam] ====================RwDsExam.test======end.

[INFO] [bee-exam] ====================DiffDdExam.test======start:
[INFO] [Bee] update SQL(updateFields) :update leaf_alloc set max_id=max_id+step where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] ---------------------------------update num is :1
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=200,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=200,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] -------------1--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select(entity,start,size) SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------2--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------3--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------4--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL(entity,size): select id,userid,name,total,createtime,remark,sequence,abc,updatetime from Orders_202007 limit ?,?   [values]: 0,10
[INFO] [Bee]  | <--  select rows: 3
[WARN] Auto table: parameter  ${month} in Orders${month} still has not value, will be ignore it!
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from Orders
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 6
[INFO] Orders[id=100001,userid=Bee,name=Bee--ORM Framework,total=95.010000,createtime=2020-03-02 11:29:28,remark=other,sequence=12345601,abc=test1,updatetime=null]
[INFO] Orders[id=100002,userid=bee,name=Bee,total=96.010000,createtime=2020-03-02 11:29:28,remark=test%a,sequence=12345602,abc=test2,updatetime=2020-03-02 16:34:19]
[INFO] Orders[id=100003,userid=bee,name=Bee,total=97.010000,createtime=2020-03-02 11:29:28,remark=testx%,sequence=12345603,abc=test3,updatetime=2020-03-02 16:34:19]
[INFO] Orders[id=683632838574456,userid=bee4,name=null,total=12.300000,createtime=2022-03-02 11:15:58,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=683632838574457,userid=bee5,name=null,total=12.300000,createtime=2022-03-02 11:15:58,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=683632838574458,userid=bee6,name=null,total=12.300000,createtime=2022-03-02 11:15:58,remark=null,sequence=null,abc=null,updatetime=null]
[WARN] Auto table: parameter  ${month} in Orders${month} still has not value, will be ignore it!
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select(entity,start,size) SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from Orders limit ?,?   [values]: 0,10
[INFO] [Bee]  | <--  select rows: 6
[INFO] getCustomSql:  select * from orders where userid=?
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] PreparedSql select SQL: select * from orders where userid=? limit ?,?   [values]: bee,1,3
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] PreparedSql select SQL: select * from orders where userid=?   [values]: bee
[INFO] [Bee]  | <--  select rows: 2
[INFO] 100002   bee   Bee   96.010000   2020-03-02 11:29:28   test%a   12345602   test2   2020-03-02 16:34:19   
[INFO] 100003   bee   Bee   97.010000   2020-03-02 11:29:28   testx%   12345603   test3   2020-03-02 16:34:19   
[INFO] [Bee] PreparedSql select SQL: select * from orders
[INFO] [Bee]  | <--  select rows: 6
[INFO] 100001   Bee   Bee--ORM Framework   95.010000   2020-03-02 11:29:28   other   12345601   test1   null   
[INFO] 100002   bee   Bee   96.010000   2020-03-02 11:29:28   test%a   12345602   test2   2020-03-02 16:34:19   
[INFO] 100003   bee   Bee   97.010000   2020-03-02 11:29:28   testx%   12345603   test3   2020-03-02 16:34:19   
[INFO] 683632838574456   bee4   null   12.300000   2022-03-02 11:15:58   null   null   null   null   
[INFO] 683632838574457   bee5   null   12.300000   2022-03-02 11:15:58   null   null   null   null   
[INFO] 683632838574458   bee6   null   12.300000   2022-03-02 11:15:58   null   null   null   null   
[WARN] Auto table: parameter  ${month} in Orders${month} still has not value, will be ignore it!
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] PreparedSql selectSomeField SQL: select * from orders where userid=? limit ?,?   [values]: bee,2,3
[INFO] [Bee]  | <--  select rows: 0
[WARN] Auto table: parameter  ${month} in orders${month} still has not value, will be ignore it!
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL: select orders.id,orders.userid,orders.name,orders.total,orders.createtime,orders.remark,orders.sequence,orders.abc,orders.updatetime,test_user.id,test_user.email,test_user.last_name,test_user.name,test_user.password,test_user.username,test_user.createtime from orders,test_user where orders.userid=test_user.username and orders.name=test_user.name and orders.userid=? and orders.name=? and test_user.name=? limit ?,?   [values]: bee,Bee,Bee,0,10
[INFO] [Bee]  | <--  select rows: 2
[INFO] size of records:2
[INFO] Orders[id=100002,userid=bee,name=Bee,total=96.010000,createtime=2020-03-02 11:29:28,remark=test%a,sequence=12345602,abc=test2,updatetime=2020-03-02 16:34:19,TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=null]]
[INFO] Orders[id=100003,userid=bee,name=Bee,total=97.010000,createtime=2020-03-02 11:29:28,remark=testx%,sequence=12345603,abc=test3,updatetime=2020-03-02 16:34:19,TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=null]]
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL: select orders_202007.id,orders_202007.userid,orders_202007.name,orders_202007.total,orders_202007.createtime,orders_202007.remark,orders_202007.sequence,orders_202007.abc,orders_202007.updatetime,test_user.id,test_user.email,test_user.last_name,test_user.name,test_user.password,test_user.username,test_user.createtime from orders_202007,test_user where orders_202007.userid=test_user.username and orders_202007.name=test_user.name and orders_202007.userid=? and orders_202007.name=? and test_user.name=? limit ?,?   [values]: bee,Bee,Bee,0,10
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 2
[INFO] Orders[id=100002,userid=bee,name=Bee,total=96.010000,createtime=2020-03-02 11:29:28,remark=test%a,sequence=12345602,abc=test2,updatetime=2020-03-02 16:34:19,TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=null]]
[INFO] Orders[id=100003,userid=bee,name=Bee,total=97.010000,createtime=2020-03-02 11:29:28,remark=testx%,sequence=12345603,abc=test3,updatetime=2020-03-02 16:34:19,TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=null]]
[INFO] [Bee] JdbcTransaction begin. 
[INFO] [Bee] update SQL(condition) :update leaf_alloc set max_id=max_id+step where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=300,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select(entity,start,size) SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] JdbcTransaction commit. 
[INFO] [bee-exam] ====================DiffDdExam.test======end.

[INFO] [bee-exam] ====================DiffDdExam0.test======start:
[INFO] [Bee] Parse DataSourceMap: dataSource name to database name , result: {ds1=MySQL, ds2=Oracle, ds3=MySQL}
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=300,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] [Bee] update SQL(updateFields) :update leaf_alloc set max_id=max_id+step where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] ---------------------------------update num is :1
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=400,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=400,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] -------------1--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select(entity,start,size) SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------2--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------3--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------4--dbName: MySQL
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=400,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] 
[INFO] +++++++++++++++++++++++====================================================+++++++++++++++++++++++
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=400,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] [Bee] update SQL(updateFields) :update leaf_alloc set max_id=max_id+step where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] ---------------------------------update num is :1
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=500,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=500,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] -------------1--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select(entity,start,size) SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------2--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------3--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------4--dbName: MySQL
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=500,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] 
[INFO] +++++++++++++++++++++++====================================================+++++++++++++++++++++++
[INFO] [bee-exam] ====================DiffDdExam0.test======end.

[INFO] [bee-exam] ====================DiffDdExam00.test======start:
[INFO] [Bee] Parse DataSourceMap: dataSource name to database name , result: {ds1=MySQL, ds2=Oracle, ds3=MySQL}
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=500,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] [Bee] update SQL(updateFields) :update leaf_alloc set max_id=max_id+step where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] ---------------------------------update num is :1
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=600,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=600,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] -------------1--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select(entity,start,size) SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------2--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------3--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------4--dbName: MySQL
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=600,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] 
[INFO] +++++++++++++++++++++++====================================================+++++++++++++++++++++++
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=300,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] [Bee] update SQL(updateFields) :update leaf_alloc set max_id=max_id+step where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] ---------------------------------update num is :1
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=400,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=400,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] -------------1--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :Oracle
[INFO] [Bee] select(entity,start,size) SQL: select * from ( select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? ) where rownum <= ?   [values]: bee,10
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------2--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :Oracle
[INFO] [Bee] select SQL(entity,size): select * from ( select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? ) where rownum <= ?   [values]: bee,10
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------3--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :Oracle
[INFO] [Bee] select SQL(entity,size): select * from ( select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? ) where rownum <= ?   [values]: bee,10
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------4--dbName: MySQL
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=400,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] 
[INFO] +++++++++++++++++++++++====================================================+++++++++++++++++++++++
[INFO] [bee-exam] ====================DiffDdExam00.test======end.

[INFO] [bee-exam] ====================DiffDdExam000.test======start:
[INFO] [Bee] Parse DataSourceMap: dataSource name to database name , result: {ds1=MySQL, ds2=Oracle, ds3=MySQL}
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=600,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] [Bee] update SQL(updateFields) :update leaf_alloc set max_id=max_id+step where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] ---------------------------------update num is :1
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=700,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=700,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] -------------1--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select(entity,start,size) SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------2--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------3--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------4--dbName: MySQL
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=700,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] 
[INFO] +++++++++++++++++++++++====================================================+++++++++++++++++++++++
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=400,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] [Bee] update SQL(updateFields) :update leaf_alloc set max_id=max_id+step where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] ---------------------------------update num is :1
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=500,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=500,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] -------------1--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :Oracle
[INFO] [Bee] select(entity,start,size) SQL: select * from ( select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? ) where rownum <= ?   [values]: bee,10
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------2--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :Oracle
[INFO] [Bee] select SQL(entity,size): select * from ( select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? ) where rownum <= ?   [values]: bee,10
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------3--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :Oracle
[INFO] [Bee] select SQL(entity,size): select * from ( select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? ) where rownum <= ?   [values]: bee,10
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------4--dbName: MySQL
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=500,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] 
[INFO] +++++++++++++++++++++++====================================================+++++++++++++++++++++++
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=700,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] [Bee] update SQL(updateFields) :update leaf_alloc set max_id=max_id+step where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] ---------------------------------update num is :1
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=800,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=800,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] -------------1--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select(entity,start,size) SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------2--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------3--dbName: MySQL
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ?,?   [values]: bee,0,10
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] -------------4--dbName: MySQL
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=800,step=100,description=order segment,updateTime=2020-09-19 19:05:10.0,version=1]
[INFO] 
[INFO] +++++++++++++++++++++++====================================================+++++++++++++++++++++++
[INFO] [bee-exam] ====================DiffDdExam000.test======end.

[INFO] [bee-exam] ====================DiffDdExam00bug.test======start:
[INFO] [Bee] Parse DataSourceMap: dataSource name to database name , result: {ds1=MySQL, ds2=Oracle, ds3=MySQL}
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc limit ?,?   [values]: 0,10
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] ========= get the dbName in real time is :Oracle
[INFO] [Bee] select(entity,start,size) SQL: select * from ( select table_.*, rownum rn_ from ( select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc ) table_ where rownum < ?) where rn_ >= ?   [values]: 12,2
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 2
[INFO] [bee-exam] ====================DiffDdExam00bug.test======end.

[INFO] [bee-exam] ====================DiffDdExamCustomerSql.test======start:
[INFO] [Bee] Parse DataSourceMap: dataSource name to database name , result: {ds1=MySQL, ds2=Oracle, ds3=MySQL}
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc limit ?,?   [values]: 0,10
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] ========= get the dbName in real time is :Oracle
[INFO] [Bee] select SQL(entity,size): select * from ( select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc ) where rownum <= ?   [values]: 10
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] ========= get the dbName in real time is :Oracle
[INFO] [Bee] PreparedSql select SQL: select * from ( select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc ) where rownum <= ?   [values]: 2
[INFO] [Bee]  | <--  select rows: 2
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] PreparedSql select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc limit ?,?   [values]: 0,2
[INFO] [Bee]  | <--  select rows: 2
[INFO] [bee-exam] ====================DiffDdExamCustomerSql.test======end.

[INFO] [bee-exam] ====================SuidWhichOne.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 6
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee]  | <--  select rows: 6
[INFO] [bee-exam] ====================SuidWhichOne.test======end.

[INFO] The Honey gen the JavaBean: org.teasoft.exam.bee.osql.entity2.ColumnTest
[INFO] Generate Success!
[INFO] Please check folder: D:\JavaWeb\workspaceGit19\bee-exam\src\main\java\org\teasoft\exam\bee\osql\entity2
[INFO] Create file: D:\JavaWeb\workspaceGit19\bee-exam\src\main\java\org\teasoft\exam\bee\osql\autogen\OrderhistoryRest.java
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100001
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100001
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100001
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[WARN] Do not get the new Connection in the SameConnection.Maybe all the results get from cache! 
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100002
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100002
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[WARN] Calling the endSameConnection(), but miss the beginSameConnection()
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100003
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100003
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100003
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and id=? limit ?,? for update    [values]: 100003,100003,0,300
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100003,userid=bee,name=Bee,total=97.010000,createtime=2020-03-02 11:29:28,remark=testx%,sequence=12345603,abc=test3,updatetime=2020-03-02 16:34:19]
[INFO] [Bee] update SQL: update orders set userid=? , name=? , total=? , createtime=? , remark=? , sequence=? , abc=? , updatetime=? where id=?   [values]: bee,Bee,97.010000,2020-03-02 11:29:28,testx%,12345603,test3,2020-03-02 16:34:19,100003
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100008
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100004
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100004
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100004
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and id=? limit ?,? for update    [values]: 100004,100003,0,300
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100004
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100004
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100002
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] update SQL: update orders set name=? where id=?   [values]: Bee(ORM Framework),100002
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100002,Bee(ORM Framework)
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] ------------------------getId : null
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,createtime,remark) values (?,?,?,?,?)   [values]: Bee,Bee(ORM Framework),80.80,2022-03-02 11:16:47,InsertAndReturnId
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 683632838574459
[INFO] ------------------------getId : null
[INFO] [Bee] selectById SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 683632838574459
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=683632838574459,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=2022-03-02 11:16:47,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,createtime,remark) values (?,?,?,?,?)   [values]: Bee,Bee(ORM Framework),80.80,2022-03-02 11:16:47,InsertAndReturnId
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 683632838574460
[INFO] ------------------------getId : null
[INFO] ------------------------getId : null
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,createtime,remark) values (?,?,?,?,?)   [values]: Bee,Bee(ORM Framework),80.80,2022-03-02 11:16:47,InsertAndReturnId
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 683632838574461
[INFO] ------------------------getId : null
[INFO] [Bee] selectById SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 683632838574461
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=683632838574461,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=2022-03-02 11:16:47,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,createtime,remark) values (?,?,?,?,?)   [values]: Bee,Bee(ORM Framework),80.80,2022-03-02 11:16:47,InsertAndReturnId
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 683632838574462
[INFO] ------------------------getId : null
[INFO] ------------------------getId : null
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime,remark) values (?,?,?,?,?,?)   [values]: 683632838574459,Bee,Bee(ORM Framework),80.80,2022-03-02 11:16:47,InsertAndReturnId
[WARN] Duplicate entry '683632838574459' for key 'PRIMARY'
[INFO] InsertAndReturnId  : 0
[INFO] ------------------------getId : null
[INFO] [Bee] selectById SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 0
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime,remark) values (?,?,?,?,?,?)   [values]: 683632838574460,Bee,Bee(ORM Framework),80.80,2022-03-02 11:16:47,InsertAndReturnId
[WARN] Duplicate entry '683632838574460' for key 'PRIMARY'
[INFO] InsertAndReturnId  : 0
[INFO] ------------------------getId : null
[INFO] -----------------------------
[INFO] auto increment id in MySQL, start....
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,createtime,remark) values (?,?,?,?,?)   [values]: Bee,Bee(ORM Framework),80.80,2022-03-02 11:16:47,InsertAndReturnId
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 683632838574463
[INFO] [Bee] selectById SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 683632838574463
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=683632838574463,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=2022-03-02 11:16:47,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,createtime,remark) values (?,?,?,?,?)   [values]: Bee,Bee(ORM Framework),80.80,2022-03-02 11:16:47,InsertAndReturnId
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 683632838574464
[INFO] auto increment id in MySQL, end....
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001,Bee(ORM Framework)
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001,Bee(ORM Framework)
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] update SQL: update orders set name=? where id=?   [values]: Bee(ORM Framework),100001
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] update record:1
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime) values (?,?,?,?,?)   [values]: 683632838574461,bee,Bee,91.99,2022-03-02 11:16:51
[WARN] Duplicate entry '683632838574461' for key 'PRIMARY'
[INFO] insert record:0
[INFO] [Bee] delete SQL: delete from orders where userid=? and name=? and total=? and createtime=?   [values]: bee,Bee,91.99,2022-03-02 11:16:51
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] delete record:0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001,Bee(ORM Framework)
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.010000,createtime=2020-03-02 11:29:28,remark=other,sequence=12345601,abc=test1,updatetime=null]
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001,Bee(ORM Framework)
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.010000,createtime=2020-03-02 11:29:28,remark=other,sequence=12345601,abc=test1,updatetime=null]
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001,Bee(ORM Framework)
[INFO] [Bee] ==========get from Level 2 Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] update SQL: update orders set name=? where id=?   [values]: Bee(ORM Framework),100001
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] update record:1
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime) values (?,?,?,?,?)   [values]: 683632838574462,bee,Bee,91.99,2022-03-02 11:16:57
[WARN] Duplicate entry '683632838574462' for key 'PRIMARY'
[INFO] insert record:0
[INFO] [Bee] delete SQL: delete from orders where userid=? and name=? and total=? and createtime=?   [values]: bee,Bee,91.99,2022-03-02 11:16:57
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] delete record:0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001,Bee(ORM Framework)
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.010000,createtime=2020-03-02 11:29:28,remark=other,sequence=12345601,abc=test1,updatetime=null]
[INFO] [Bee] Callable SQL,getCallableStatement: {call updateOrders(?)}
[INFO] 1
[INFO] [Bee] Callable SQL: {call updateOrders(?)}  values: 100004
[INFO] 0
[INFO] [Bee] Callable SQL: {call updateOrders(?)}  values: 10000588888
[INFO] 0
[INFO] [Bee] Callable SQL: {call selectOrders(?)}  values: change via CallableSql
[INFO] Orders[id=100003,userid=bee,name=Bee,total=97.010000,createtime=2020-03-02 11:29:28,remark=change via CallableSql,sequence=12345603,abc=test3,updatetime=2022-03-02 11:16:57]
[INFO] [Bee] Callable SQL: {call selectOrders(?)}  values: change via CallableSql
[INFO] 100003   bee   Bee   97.010000   2020-03-02 11:29:28   change via CallableSql   12345603   test3   2022-03-02 11:16:57   
[INFO] [Bee] Callable SQL: {call selectOrders(?)}  values: change via CallableSql
[INFO] [{"id":"100003","userid":"bee","name":"Bee","total":97.010000,"createtime":"2020-03-02 11:29:28","remark":"change via CallableSql","sequence":"12345603","abc":"test3","updatetime":"2022-03-02 11:16:57"}]
[INFO] [Bee] Callable SQL: {call selectOrders(?)}  values: change via CallableSql--no
[INFO] []
[INFO] D:\JavaWeb\workspaceGit19\bee-exam\src\main\resources\log\bee-exam(v1.11)2022-03-02 11.14.45.538-cache(MySQL).txt
[INFO]  join 
[INFO] Table
[INFO] IsNamingTransfer
[INFO] MySQL
[INFO] [Bee] select SQL: select table_id,table_name from tables where table_id=?   [values]: 1
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select table_id,column_id,column_name from columns where table_id=?   [values]: 1
[INFO] [Bee]  | <--  select rows: 2
[INFO] [Bee] select SQL: select tables.table_id,tables.table_name,columns.table_id,columns.column_id,columns.column_name from tables,columns where tables.table_id=columns.table_id and tables.table_id=?   [values]: 1
[INFO] [Bee]  | <--  ( select raw record rows: 2 )
[INFO] [Bee]  | <--  select rows: 1
[WARN] [Bee] ========= reset the bee.properties with filePath:D:\temp\
[INFO] [Bee] ========= get the dbName from the Connection is :MySQL
[INFO] [Bee] insert SQL: insert into noid(uuid,name) values (?,?)   [values]: aaaaaa-no-id,test no id
[WARN] Duplicate entry 'aaaaaa-no-id' for key 'PRIMARY'
[INFO] [Bee] select SQL: select uuid,name,num,remark from noid where uuid=? and name=?   [values]: aaaaaa-no-id,test no id
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] update SQL(whereFields) :update noid set name=? where uuid=?   [values]: new name3,aaaaaa-no-id
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL: select uuid,name,num,remark from noid where uuid=? and name=?   [values]: aaaaaa-no-id,new name3
[INFO] [Bee]  | <--  select rows: 1
[INFO] Noid[uuid=aaaaaa-no-id,name=new name3,num=null,remark=test]
[WARN] [Bee] ========= reset the bee.properties with filePath:D:\temp
[INFO] [Bee] ========= get the dbName from the Connection is :MySQL
[INFO] [Bee] insert SQL: insert into noid(uuid,name) values (?,?)   [values]: aaaaaa-no-id,test no id
[WARN] Duplicate entry 'aaaaaa-no-id' for key 'PRIMARY'
[INFO] [Bee] select SQL: select uuid,name,num,remark from noid where uuid=? and name=?   [values]: aaaaaa-no-id,test no id
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] update SQL(whereFields) :update noid set name=? where uuid=?   [values]: new name3,aaaaaa-no-id
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL: select uuid,name,num,remark from noid where uuid=? and name=?   [values]: aaaaaa-no-id,new name3
[INFO] [Bee]  | <--  select rows: 1
[INFO] Noid[uuid=aaaaaa-no-id,name=new name3,num=null,remark=test]
[INFO] [Bee] In MapSuid, insertAndReturnId SQL: insert into test_primary_key (name,myid) values (?,?)   [values]: test_pk,683633878761473
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] 683633878761473
[INFO] [Bee] In MapSuid, insertAndReturnId SQL: insert into test_primary_key (name,myid) values (?,?)   [values]: test_pk,683633878761474
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] 683633878761474
[INFO] [Bee] In MapSuid, insertAndReturnId SQL: insert into test_primary_key (name,remark2,myid) values (?,?,?)   [values]: test_pk,,683633878761475
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] 683633878761475
[INFO] [Bee] In MapSuid, insertAndReturnId SQL: insert into test_primary_key (name,remark,remark2,myid) values (?,?,?,?)   [values]: test_pk,null,,683633878761476
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] 683633878761476
[WARN] The id(uuid) field's class java.lang.String is not Long, can not generate the Long id automatically!
[INFO] [Bee] insert SQL: insert into Noid(uuid,name) values (?,?)   [values]: aaaadd-no-id,test no id
[WARN] Duplicate entry 'aaaadd-no-id' for key 'PRIMARY'
[INFO] [Bee] select SQL: select uuid,name,num,remark from Noid where uuid=? and name=?   [values]: aaaadd-no-id,test no id
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] update SQL: update Noid set name=? where uuid=?   [values]: new name--new,aaaadd-no-id
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] update SQL: update Noid set name=? , num =null , remark =null where uuid=?   [values]: new name--new,aaaadd-no-id
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL: select uuid,name,num,remark from Noid where uuid=? and name=?   [values]: aaaadd-no-id,new name--new
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] CustomId[uuid=aaaadd-no-id,name=new name--new,num=null,remark=null]
[INFO] [Bee] selectById SQL: select uuid,name,num,remark from Noid where uuid=?   [values]: aaaacc-no-id
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] deleteById SQL: delete from Noid where uuid=?   [values]: aaaacc-no-id
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] 0
[INFO] [Bee] select SQL: select id,email,last_name,name name2,password,username,createtime,last_name || name full_name from test_user
[INFO] [Bee]  | <--  select rows: 2
[INFO] TestUser[id=800001,email=beeUser@163.com,lastName=null,name=null,password=bee,username=bee,createtime=null]
[INFO] TestUser[id=800002,email=honey@163.com,lastName=cn,name=null,password=honey,username=honey,createtime=null]
[INFO] [Bee] select SQL: select id,email,last_name,name name2,password,username,createtime,last_name || name full_name from test_user
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 2
[INFO] [Bee] select SQL: select uuid,name,num,remark,ch from noid where num=? and ch=?   [values]: 2,a
[INFO] [Bee]  | <--  select rows: 1
[INFO] Noid[uuid=aaaaaa,name=test no id,num=2,remark=null,ch=a]
[INFO] [Bee] PreparedSql select SQL: select uuid,name,num,remark,ch from noid
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 4
[INFO] Noid[uuid=aaaaaa,name=test no id,num=2,remark=null,ch=a]
[INFO] Noid[uuid=aaaaaa-no-id,name=new name3,num=0,remark=test,ch= ]
[INFO] Noid[uuid=aaaabb-no-id,name=test no id,num=0,remark=null,ch=1]
[INFO] Noid[uuid=aaaadd-no-id,name=new name--new,num=0,remark=null,ch= ]
[INFO] [Bee] PreparedSql selectJson SQL: select uuid,name,num,remark,ch from noid
[INFO] [Bee] selectJson SQL: select uuid,name,num,remark,ch from noid where num=? and ch=?   [values]: 2,a
[INFO] [Bee] PreparedSql select MoreTable SQL: select uuid,name,num,remark,ch from noid
[INFO] [Bee]  | <--  select rows: 4
[INFO] Noid[uuid=aaaaaa,name=test no id,num=2,remark=null,ch=a]
[INFO] Noid[uuid=aaaaaa-no-id,name=new name3,num=0,remark=test,ch= ]
[INFO] Noid[uuid=aaaabb-no-id,name=test no id,num=0,remark=null,ch=1]
[INFO] Noid[uuid=aaaadd-no-id,name=new name--new,num=0,remark=null,ch= ]
[INFO] [Bee] select SQL: select noid.uuid,noid.name,noid.num,noid.remark,noid.ch,aanoid2.uuid,aanoid2.name,aanoid2.num,aanoid2.remark,aanoid2.ch from noid left join noid aanoid2 on noid.uuid=aanoid2.uuid where noid.num=? and noid.ch=?   [values]: 2,a
[INFO] [Bee]  | <--  select rows: 1
[INFO] Noid[uuid=aaaaaa,name=test no id,num=2,remark=null,ch=a]
[INFO] [Bee] select SQL: select uuid,name,num,remark,ch from noid where num=? and ch=?   [values]: 2,a
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] Noid[uuid=aaaaaa,name=test no id,num=2,remark=null,ch=a]
[INFO] [Bee] PreparedSql select SQL: select uuid,name,num,remark,ch from noid
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 4
[INFO] Noid[uuid=aaaaaa,name=test no id,num=2,remark=null,ch=a]
[INFO] Noid[uuid=aaaaaa-no-id,name=new name3,num=0,remark=test,ch= ]
[INFO] Noid[uuid=aaaabb-no-id,name=test no id,num=0,remark=null,ch=1]
[INFO] Noid[uuid=aaaadd-no-id,name=new name--new,num=0,remark=null,ch= ]
[INFO] [Bee] PreparedSql selectJson SQL: select uuid,name,num,remark,ch from noid
[INFO] [Bee] selectJson SQL: select uuid,name,num,remark,ch from noid where num=? and ch=?   [values]: 2,a
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee] PreparedSql select MoreTable SQL: select uuid,name,num,remark,ch from noid
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 4
[INFO] Noid[uuid=aaaaaa,name=test no id,num=2,remark=null,ch=a]
[INFO] Noid[uuid=aaaaaa-no-id,name=new name3,num=0,remark=test,ch= ]
[INFO] Noid[uuid=aaaabb-no-id,name=test no id,num=0,remark=null,ch=1]
[INFO] Noid[uuid=aaaadd-no-id,name=new name--new,num=0,remark=null,ch= ]
[INFO] [Bee] select SQL: select noid.uuid,noid.name,noid.num,noid.remark,noid.ch,aanoid2.uuid,aanoid2.name,aanoid2.num,aanoid2.remark,aanoid2.ch from noid left join noid aanoid2 on noid.uuid=aanoid2.uuid where noid.num=? and noid.ch=?   [values]: 2,a
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] Noid[uuid=aaaaaa,name=test no id,num=2,remark=null,ch=a]
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 12
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001,Bee(ORM Framework)
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001,Bee(ORM Framework)
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.010000,createtime=2020-03-02 11:29:28,remark=other,sequence=12345601,abc=test1,updatetime=null]
[INFO] [Bee] update SQL: update orders set name=? where id=?   [values]: Bee(ORM Framework),100001
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] update record:1
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime) values (?,?,?,?,?)   [values]: 683632838574463,bee,Bee-ORM Framework,91.99,2022-03-02 11:16:58
[WARN] Duplicate entry '683632838574463' for key 'PRIMARY'
[INFO] insert record:0
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime) values (?,?,?,?,?)   [values]: 683632838574464,bee,Bee-ORM Framework,91.99,2022-03-02 11:16:58
[WARN] Duplicate entry '683632838574464' for key 'PRIMARY'
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime) values (?,?,?,?,?)   [values]: 683632838574465,bee,Bee-ORM Framework,91.99,2022-03-02 11:16:58
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=? and createtime=?   [values]: bee,Bee-ORM Framework,91.99,2022-03-02 11:16:58
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=? and createtime=?   [values]: bee,Bee-ORM Framework,91.99,2022-03-02 11:16:58
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=683632838574465,userid=bee,name=Bee-ORM Framework,total=91.990000,createtime=2022-03-02 11:16:58,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] delete SQL: delete from orders where userid=? and name=? and total=? and createtime=?   [values]: bee,Bee-ORM Framework,91.99,2022-03-02 11:16:58
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] delete record:1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee]  | <--  select rows: 12
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.010000,createtime=2020-03-02 11:29:28,remark=other,sequence=12345601,abc=test1,updatetime=null]
[INFO] Orders[id=100002,userid=bee,name=Bee(ORM Framework),total=96.010000,createtime=2020-03-02 11:29:28,remark=test%a,sequence=12345602,abc=test2,updatetime=2020-03-02 16:34:19]
[INFO] Orders[id=100003,userid=bee,name=Bee,total=97.010000,createtime=2020-03-02 11:29:28,remark=change via CallableSql,sequence=12345603,abc=test3,updatetime=2022-03-02 11:16:57]
[INFO] Orders[id=683632838574456,userid=bee4,name=null,total=12.300000,createtime=2022-03-02 11:15:58,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=683632838574457,userid=bee5,name=null,total=12.300000,createtime=2022-03-02 11:15:58,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=683632838574458,userid=bee6,name=null,total=12.300000,createtime=2022-03-02 11:15:58,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=683632838574459,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=2022-03-02 11:16:47,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=683632838574460,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=2022-03-02 11:16:47,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=683632838574461,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=2022-03-02 11:16:47,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=683632838574462,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=2022-03-02 11:16:47,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=683632838574463,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=2022-03-02 11:16:47,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=683632838574464,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=2022-03-02 11:16:47,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=? and createtime=?   [values]: bee,Bee-ORM Framework,91.99,2022-03-02 11:16:58
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=? and createtime=?   [values]: bee,Bee-ORM Framework,91.99,2022-03-02 11:16:58
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=? and createtime=?   [values]: bee,Bee-ORM Framework,91.99,2022-03-02 11:16:58
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 12
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 12
[WARN] Do not get the new Connection in the SameConnection.Maybe all the results get from cache! 
[INFO] ==============orders.getId(): null
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime,remark) values (?,?,?,?,?,?)   [values]: 683632838574466,client,client,93.99,2022-03-02 11:16:58,testOneTime
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] insert record:1
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime,remark,abc,updatetime) values (?,?,?,?,?,?,?,?)   [values]: 683632838574467,client,client,93.99,2022-03-02 11:16:58,testOneTime,null,null
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] insert record:1
[INFO] ==============orders.getId(): null
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime,remark,sequence) values (?,?,?,?,?,?,?)   [values]: 683632838574468,client,client,93.99,2022-03-02 11:16:58,testOneTime,
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] insert record:1
[INFO] ==============orders.getId(): null
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?)   [values]: 683632838574469,client,client,93.99,2022-03-02 11:16:58,testOneTime,,null,null
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] insert record:1
[INFO] [Bee] update SQL(updateFields) :update orders set name=?, remark=? where userid=? and total=? and createtime=?   [values]: client,testOneTime,client,93.99,2022-03-02 11:16:58
[INFO] [Bee]  | <--  Affected rows: 4
[INFO] updateNum1:  4
[INFO] [Bee] update SQL(updateFields) :update orders set name=? where userid=? and total=? and createtime=? and remark=?   [values]: client,client,93.99,2022-03-02 11:16:58,testOneTime
[INFO] [Bee]  | <--  Affected rows: 4
[INFO] updateNum2:  4
[INFO] [Bee] update SQL(updateFields) :update orders set name=? where userid=? and total=? and createtime=? and remark=? and sequence=?   [values]: client,client,93.99,2022-03-02 11:16:58,testOneTime,
[INFO] [Bee]  | <--  Affected rows: 2
[INFO] updateNum4:  2
[INFO] [Bee] update SQL(updateFields) :update orders set name=? where userid=? and total=? and createtime=? and remark=? and abc is null and updatetime is null   [values]: client,client,93.99,2022-03-02 11:16:58,testOneTime
[INFO] [Bee]  | <--  Affected rows: 4
[INFO] updateNum5:  4
[INFO] [Bee] update SQL(updateFields) :update orders set name=? where userid=? and total=? and createtime=? and remark=? and sequence=? and abc is null and updatetime is null   [values]: client,client,93.99,2022-03-02 11:16:58,testOneTime,
[INFO] [Bee]  | <--  Affected rows: 2
[INFO] updateNum6:  2
[INFO] [Bee] update SQL(updateFields) :update orders set name=?, total=? where userid=? and createtime=? and remark=? and sequence=?   [values]: client,93.99,client,2022-03-02 11:16:58,testOneTime,
[INFO] [Bee]  | <--  Affected rows: 2
[INFO] updateNum4_2:  2
[INFO] [Bee] update SQL(updateFields) :update orders set name=?, total=? where userid=? and createtime=? and remark=? and abc is null and updatetime is null   [values]: client,93.99,client,2022-03-02 11:16:58,testOneTime
[INFO] [Bee]  | <--  Affected rows: 4
[INFO] updateNum5_2:  4
[INFO] [Bee] update SQL(updateFields) :update orders set name=?, total=? where userid=? and createtime=? and remark=? and sequence=? and abc is null and updatetime is null   [values]: client,93.99,client,2022-03-02 11:16:58,testOneTime,
[INFO] [Bee]  | <--  Affected rows: 2
[INFO] updateNum6_2:  2
[INFO] [Bee] select fun SQL : select count(total) from orders where userid=? and name=? and total=? and createtime=? and remark=?   [values]: client,client,93.99,2022-03-02 11:16:58,testOneTime
[INFO] [Bee] select fun SQL : select max(total) from orders where userid=? and name=? and total=? and createtime=? and remark=?   [values]: client,client,93.99,2022-03-02 11:16:58,testOneTime
[INFO] [Bee] select fun SQL : select min(total) from orders where userid=? and name=? and total=? and createtime=? and remark=?   [values]: client,client,93.99,2022-03-02 11:16:58,testOneTime
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee] select fun SQL : select avg(total) from orders where userid=? and name=? and total=? and createtime=? and remark=?   [values]: client,client,93.99,2022-03-02 11:16:58,testOneTime
[INFO] [Bee] select fun SQL : select sum(total) from orders where userid=? and name=? and total=? and createtime=? and remark=?   [values]: client,client,93.99,2022-03-02 11:16:58,testOneTime
[INFO] funCount:4
[INFO] funMax:93.990000
[INFO] funMin:93.990000
[INFO] funAvg:93.9900000000
[INFO] funSum:375.960000
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime,remark,abc,updatetime) values (?,?,?,?,?,?,?,?)   [values]: 100,client00,client01,93.99,2022-03-02 11:16:59,testOneTime,null,null
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] insert record:1
[INFO] [Bee] update SQL: update orders set userid=? , name=? , total=? , createtime=? , remark=? , sequence=? where id=?   [values]: client00,client01,93.99,2022-03-02 11:16:59,testOneTime,,100
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] updateNum8:  1
[INFO] [Bee] update SQL: update orders set userid=? , name=? , total=? , createtime=? , remark=? , abc =null , updatetime =null where id=?   [values]: client00,client01,93.99,2022-03-02 11:16:59,testOneTime,100
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] updateNum9:  1
[INFO] [Bee] update SQL: update orders set userid=? , name=? , total=? , createtime=? , remark=? , sequence=? , abc =null , updatetime =null where id=?   [values]: client00,client01,93.99,2022-03-02 11:16:59,testOneTime,,100
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] updateNum10:  1
[INFO] [Bee] delete SQL: delete from orders where id=? and userid=? and name=? and total=? and createtime=? and remark=?   [values]: 100,client00,client01,93.99,2022-03-02 11:16:59,testOneTime
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] deleteNum: 1
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 1004,client01,null,91,2022-03-02 11:16:59,testOneTime,null,null,null
[INFO] [Bee] --> index:1 ,  [values]: 1005,client02,null,20,2022-03-02 11:16:59,testOneTime,null,null,null
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 2
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:2 ,  [values]: 1006,client03,null,23,2022-03-02 11:16:59,testOneTime,null,null,null
[INFO] [Bee]  | <-- [Batch:1] Affected rows: 1
[INFO] 3
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 1007,client01,null,91,2022-03-02 11:16:59,testOneTime,null,null,null
[INFO] [Bee] --> index:1 ,  [values]: 1008,client02,null,20,2022-03-02 11:16:59,testOneTime,null,null,null
[INFO] [Bee] --> index:2 ,  [values]: 1009,client03,null,23,2022-03-02 11:16:59,testOneTime,null,null,null
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 3
[INFO] 3
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 10010,client01,null,91,2022-03-02 11:16:59,testOneTime,null,null,null
[INFO] [Bee] --> index:1 ,  [values]: 10011,client02,null,20,2022-03-02 11:16:59,testOneTime,null,null,null
[INFO] [Bee] --> index:2 ,  [values]: 10012,client03,null,23,2022-03-02 11:16:59,testOneTime,null,null,null
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 3
[INFO] 3
[INFO] [Bee] select SQL(selectFields) : select name, total from orders where userid=?   [values]: bee
[INFO] [Bee]  | <--  select rows: 2
[INFO] 2
[INFO] [Bee] List<String[]> select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: client01
[INFO] [Bee]  | <--  select rows: 3
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee] select SQL(selectFields) : select id, userid, total, createtime from orders where userid=?   [values]: client01
[INFO] [Bee]  | <--  select rows: 3
[INFO] 1004  , 
[INFO] client01  , 
[INFO] 91.000000  , 
[INFO] 2022-03-02 11:16:59  , 
[INFO] 
[INFO] 1007  , 
[INFO] client01  , 
[INFO] 91.000000  , 
[INFO] 2022-03-02 11:16:59  , 
[INFO] 
[INFO] 10010  , 
[INFO] client01  , 
[INFO] 91.000000  , 
[INFO] 2022-03-02 11:16:59  , 
[INFO] 
[INFO] test paging
[INFO] MySQL
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=?   [values]: testOneTime
[INFO] [Bee]  | <--  select rows: 13
[INFO] [Bee] select SQL(entity,size): select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? limit ?,?   [values]: testOneTime,0,3
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select(entity,start,size) SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? limit ?,?   [values]: testOneTime,0,3
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 3
[INFO] Orders[id=1004,userid=client01,name=null,total=91.000000,createtime=2022-03-02 11:16:59,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1005,userid=client02,name=null,total=20.000000,createtime=2022-03-02 11:16:59,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1006,userid=client03,name=null,total=23.000000,createtime=2022-03-02 11:16:59,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] select(entity,start,size) SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? limit ?,?   [values]: testOneTime,2,6
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 6
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 100018,client18,null,18.18,2022-03-02 11:16:59,test insert and delete,null,null,null
[INFO] [Bee] --> index:1 ,  [values]: 100019,client19,null,19.19,2022-03-02 11:16:59,test insert and delete,null,null,null
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 2
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:2 ,  [values]: 100020,client20,null,20.20,2022-03-02 11:16:59,test insert and delete,null,null,null
[INFO] [Bee]  | <-- [Batch:1] Affected rows: 1
[INFO] [Bee] delete SQL: delete from orders where remark=?   [values]: test insert and delete
[INFO] [Bee]  | <--  Affected rows: 3
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 100018,client18,null,18.18,2022-03-02 11:16:59,test insert and delete,null,null,null
[INFO] [Bee] --> index:1 ,  [values]: 100019,client19,null,19.19,2022-03-02 11:16:59,test insert and delete,null,null,null
[INFO] [Bee] --> index:2 ,  [values]: 100020,client20,null,20.20,2022-03-02 11:16:59,test insert and delete,null,null,null
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 3
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 100021,client18,null,18.18,2022-03-02 11:16:59,null,null,null
[INFO] [Bee] --> index:1 ,  [values]: 100022,client19,null,19.19,2022-03-02 11:16:59,null,null,null
[INFO] [Bee] --> index:2 ,  [values]: 100023,client20,null,20.20,2022-03-02 11:16:59,null,null,null
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 3
[INFO] [Bee] select fun SQL : select count(*) from orders where remark=?   [values]: test insert and delete
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=?   [values]: test insert and delete
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] selectJson SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=?   [values]: test insert and delete
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? and id>=?   [values]: test insert and delete,100018
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] selectJson SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? and id>=?   [values]: test insert and delete,100018
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? and id>=?   [values]: test insert and delete,100018
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] selectJson SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? and id>=?   [values]: test insert and delete,100018
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee] select fun SQL : select count(*) from orders where remark=? and id>=?   [values]: test insert and delete,100018
[INFO] [Bee] selectOrderBy SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? order by id asc   [values]: test insert and delete
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] selectOrderBy SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? order by id asc,name desc   [values]: test insert and delete
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and remark=?   [values]: 100021,test insert and delete
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and remark=? and id>=?   [values]: 100021,test insert and delete,100018
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select(entity,selectFields,start,size) SQL: select id, Remark, userid from orders where id=? and remark=? limit ?,?   [values]: 100021,test insert and delete,0,10
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select fun SQL : select max(total) from orders where id=? and remark=? and id>=?   [values]: 100021,test insert and delete,100018
[INFO] [Bee] update SQL(whereFields) :update orders set remark=? where id=? and id>=?   [values]: test insert and delete,100021,100018
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] update SQL(condition) :update orders set remark=? where id=? and remark=? and id=?   [values]: test update,100021,test insert and delete,100023
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] delete SQL: delete from orders where id=? and remark=?   [values]: 100021,test insert and delete
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] delete SQL: delete from orders where id=? and remark=? and id>=?   [values]: 100021,test insert and delete,100018
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] deleteById SQL: delete from orders where id=?   [values]: 100021
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] deleteById SQL: delete from orders where id=?   [values]: 100022
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] deleteById SQL: delete from orders where id=?   [values]: 100023
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select(entity,selectFields,start,size) SQL: select id, Remark, userid from orders where id=? and remark=? limit ?,?   [values]: 100021,test insert and delete,5,10
[INFO] [Bee]  | <--  select rows: 0
[INFO] =====================================
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and id=? limit ?,? for update    [values]: bee,100003,0,300
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100003,userid=bee,name=Bee,total=97.010000,createtime=2020-03-02 11:29:28,remark=change via CallableSql,sequence=12345603,abc=test3,updatetime=2022-03-02 11:16:57]
[INFO] [Bee] update SQL: update orders set remark=? where id=?   [values]: test,100003
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL: select distinct(userid) from orders
[INFO] [Bee]  | <--  select rows: 12
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee] select SQL: select distinct(userid) as uniqueUserid from orders where name is not null
[INFO] [Bee]  | <--  select rows: 3
[INFO] Bee   
[INFO] bee   
[INFO] client   
[INFO] [Bee] select fun SQL : select count(*) from orders where id=?   [values]: 1005
[INFO] [Bee] insert SQL: insert into orders(id,name,createtime,remark) values (?,?,?,?)   [values]: 683632838574488,update(T oldEntity,T newEntity),2022-03-02 11:17:00,update(T oldEntity,T newEntity)
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] update(T oldEntity, T newEntity) with MapSuid, 
[INFO] [Bee] In MapSuid, update SQL: update orders set remark=? where name=? and createtime=? and remark=?   [values]: by update with : update(T oldEntity,T newEntity),update(T oldEntity,T newEntity),2022-03-02 11:17:00,update(T oldEntity,T newEntity)
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] delete SQL: delete from orders where remark=?   [values]: by update with : update(T oldEntity,T newEntity)
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL(selectFields) : select name, total from orders where userid=?   [values]: bee
[INFO] [Bee]  | <--  select rows: 2
[WARN] in method selectById,id is null! 
[INFO] [Bee] insert SQL: insert into orders(id,userid,createtime) values (?,?,?)   [values]: 683632838574489,bee,2022-03-02 11:17:00
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where name=? and total=? and userid like ? and total between ? and ? and name is not null order by userid asc limit ?,?   [values]: Bee(ORM Framework),100,bee%,90,100,0,10
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select userid, total, createtime from orders where name=? and total=? and userid like ? and total between ? and ? and name is not null order by userid asc limit ?,?   [values]: Bee(ORM Framework),100,bee%,90,100,0,10
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] insert SQL: insert into orders(id,userid,total,createtime,remark) values (?,?,?,?,?)   [values]: 683632838574490,test condition,0.01,2022-03-02 11:17:00,test condition delete
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] insert SQL: insert into orders(id,userid,total,createtime,remark) values (?,?,?,?,?)   [values]: 683632838574491,test condition,0.01,2022-03-02 11:17:00,test condition delete
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] delete SQL: delete from orders where userid=? and remark like ? and Total<=?   [values]: test condition,test condition %,0.01
[INFO] [Bee]  | <--  Affected rows: 2
[INFO] delete(T entity,Condition condition), delete record num:2
[INFO] [Bee] update SQL(whereFields) :update orders set id=? , abc=? where Total>=? and remark like ?   [values]: 1,test for update,97,test%
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] updateBy_NumByCondition: 1
[INFO] [Bee] update SQL(updateFields) :update orders set total=total+?,remark=? where id=? and remark=? and abc=? and Total>=? and remark like ?   [values]: 1,remark set in condition,1,will be ignored!,test for update,97,test%
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] updateNumCondition: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and id=? for update    [values]: bee,100003
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select userid from orders group by userid having count(userid)>=?   [values]: 1
[INFO] [Bee]  | <--  select rows: 12
[INFO] [Bee] update SQL(condition) :update orders set name=userid where name is null
[INFO] [Bee]  | <--  Affected rows: 16
[INFO] updateNum use SetWithField: 16
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where name=userid
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 20
[INFO] record num by select use opWithField: 20
[WARN] The name is '*' , does not conform to naming conventions!
null
[WARN] The name is 'distinct(userid)' , does not conform to naming conventions!
null
[INFO] [Bee] select SQL: select userid from orders group by userid having count(*)>=? and count(distinct(userid))>=?   [values]: 2,1
[INFO] [Bee]  | <--  select rows: 6
[INFO] 6
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where name is null and userid is not null
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where name like ?   [values]: Bee%
[INFO] [Bee]  | <--  select rows: 9
[INFO] Orders[id=1,userid=bee,name=Bee,total=97.010000,createtime=2020-03-02 11:29:28,remark=test,sequence=12345603,abc=test for update,updatetime=2022-03-02 11:16:57]
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.010000,createtime=2020-03-02 11:29:28,remark=other,sequence=12345601,abc=test1,updatetime=null]
[INFO] Orders[id=100002,userid=bee,name=Bee(ORM Framework),total=96.010000,createtime=2020-03-02 11:29:28,remark=test%a,sequence=12345602,abc=test2,updatetime=2020-03-02 16:34:19]
[INFO] Orders[id=683632838574459,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=2022-03-02 11:16:47,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=683632838574460,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=2022-03-02 11:16:47,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=683632838574461,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=2022-03-02 11:16:47,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=683632838574462,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=2022-03-02 11:16:47,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=683632838574463,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=2022-03-02 11:16:47,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=683632838574464,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=2022-03-02 11:16:47,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] select SQL: select id,email,last_name,name,password,username,createtime from test_user where email is null
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime,remark) values (?,?,?,?,?,?)   [values]: 683632838574492,client,client,93.99,2022-03-02 11:17:01,testOneTime
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] 1
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime,remark) values (?,?,?,?,?,?)   [values]: 683632838574493,client,client,93.99,2022-03-02 11:17:01,testOneTime
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] 1
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 683632838574494,client,client,93.99,2022-03-02 11:17:01,testOneTime,null,null,null
[INFO] [Bee] --> index:1 ,  [values]: 683632838574495,client,client,94.99,2022-03-02 11:17:04,testOneTime,,null,null
[INFO] [Bee] --> index:2 ,  [values]: 683632838574496,client,Bee,95.99,2022-03-02 11:17:04,testOneTime,null,null,null
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 3
[INFO] 3
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 683632838574497,client,client,93.99,2022-03-02 11:17:01,testOneTime,null,null,null
[INFO] [Bee] --> index:1 ,  [values]: 683632838574498,client,client,94.99,2022-03-02 11:17:04,testOneTime,,null,null
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 2
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:2 ,  [values]: 683632838574499,client,Bee,95.99,2022-03-02 11:17:04,testOneTime,null,null,null
[INFO] [Bee]  | <-- [Batch:1] Affected rows: 1
[INFO] 3
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=? and createtime=? and remark=?   [values]: client,client,94.99,2022-03-02 11:17:04,testOneTime
[INFO] [Bee]  | <--  select rows: 2
[INFO] Orders[id=683632838574495,userid=client,name=client,total=94.990000,createtime=2022-03-02 11:17:04,remark=testOneTime,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=683632838574498,userid=client,name=client,total=94.990000,createtime=2022-03-02 11:17:04,remark=testOneTime,sequence=,abc=null,updatetime=null]
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 683632838574500,client,client,93.99,2022-03-02 11:17:01,testOneTime,null,null,null
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 1
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 683632838574501,client,client,93.99,2022-03-02 11:17:01,testOneTime,null,null,null
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 1
[INFO] [Bee] --> index:1 ,  [values]: 683632838574502,client,client,94.99,2022-03-02 11:17:04,testOneTime,,null,null
[INFO] [Bee]  | <-- [Batch:1] Affected rows: 1
[INFO] [Bee] --> index:2 ,  [values]: 683632838574503,client,Bee,95.99,2022-03-02 11:17:04,testOneTime,null,null,null
[INFO] [Bee]  | <-- [Batch:2] Affected rows: 1
[INFO] insertArray3's size : 3
[INFO] -------------------------------
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 683632838574504,client,client,93.99,2022-03-02 11:17:01,testOneTime,null,null,null
[INFO] [Bee] --> index:1 ,  [values]: 683632838574505,client,client,94.99,2022-03-02 11:17:04,testOneTime,,null,null
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 2
[INFO] [Bee] --> index:2 ,  [values]: 683632838574506,client,Bee,95.99,2022-03-02 11:17:04,testOneTime,null,null,null
[INFO] [Bee] --> index:3 ,  [values]: 683632838574507,orders3,null,null,2022-03-02 11:17:04,null,null,null,null
[INFO] [Bee]  | <-- [Batch:1] Affected rows: 2
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:4 ,  [values]: 683632838574508,orders4,null,null,2022-03-02 11:17:04,null,null,null,null
[INFO] [Bee]  | <-- [Batch:2] Affected rows: 1
[INFO] insertArray5's size : 5
[INFO] [Bee] selectByIds SQL: select id,email,last_name,name,password,username,createtime from test_user where id=? or id=?   [values]: 800001,800002
[INFO] [Bee]  | <--  select rows: 2
[INFO] TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=null]
[INFO] =============================================
[INFO] TestUser[id=800002,email=honey@163.com,lastName=cn,name=Honey,password=honey,username=honey,createtime=null]
[INFO] =============================================
[INFO] [Bee] selectById SQL: select id,email,last_name,name,password,username,createtime from test_user where id=?   [values]: 800001
[INFO] [Bee]  | <--  select rows: 1
[INFO] TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=null]
[INFO] [Bee] selectById SQL: select id,email,last_name,name,password,username,createtime from test_user where id=?   [values]: 800001
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] selectById SQL: select id,email,last_name,name,password,username,createtime from test_user where id=?   [values]: 800001
[INFO] [Bee]  | <--  select rows: 1
[INFO] TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=null]
[INFO] [Bee] deleteById SQL: delete from test_user where id=?   [values]: 800001
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] deleteNum3: 1
[INFO] [Bee] insert SQL: insert into test_user(id,email,name,password,username) values (?,?,?,?,?)   [values]: 800001,beeUser@163.com,Bee,bee,bee
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] selectJson SQL: select id,email,last_name,name,password,username,createtime from test_user
[INFO] selectJson(new User()):
[INFO] [{"id":"800001","email":"beeUser@163.com","name":"Bee","password":"bee","username":"bee"},{"id":"800002","email":"honey@163.com","lastName":"cn","name":"Honey","password":"honey","username":"honey"}]
[INFO] [Bee] selectById SQL: select id,email,last_name,name,password,username,createtime from test_user where id=?   [values]: 800001
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL(selectFields) : select password, name from test_user where username=?   [values]: bee
[INFO] [Bee]  | <--  select rows: 1
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee] select SQL: select id,email,last_name,name,password,username,createtime from test_user where username=?   [values]: bee
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] update SQL(whereFields) :update orders set total=? , remark=? where userid=?   [values]: 100,new2,bee
[INFO] [Bee]  | <--  Affected rows: 3
[INFO] update number:  3
[INFO] IncludeType.INCLUDE_BOTH
[INFO] [Bee] update SQL(whereFields) :update orders set total=? , createtime =null , remark=? , sequence=? , abc =null , updatetime =null where userid=? and name is null   [values]: 100,new2,,bee
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] update number:  0
[INFO] IncludeType.INCLUDE_NULL
[INFO] [Bee] update SQL(whereFields) :update orders set name =null , total=? , createtime =null , remark=? , abc =null , updatetime =null where userid=?   [values]: 100,new2,bee
[INFO] [Bee]  | <--  Affected rows: 3
[INFO] IncludeType.INCLUDE_EMPTY
[INFO] [Bee] update SQL(whereFields) :update orders set total=? , remark=? , sequence=? where userid=?   [values]: 100,new2,,bee
[INFO] [Bee]  | <--  Affected rows: 3
[INFO] [Bee] update SQL(whereFields) :update leaf_alloc set max_id=max_id+step where biz_tag in (?,?)   [values]: 1,2
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] test setAdd , update num: 0
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: test
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] update SQL(condition) :update leaf_alloc set max_id=max_id+step,version=version+? where id=? and biz_tag=? and max_id=? and version=?   [values]: 1,456537470402562,test,100,1
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] test setMultiply , update num: 1
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: test
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] update SQL(condition) :update leaf_alloc set max_id=?,version=version+? where id=? and biz_tag=? and max_id=? and version=?   [values]: 10003,1,456537470402562,test,200,2
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] test setMultiply , update num: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from Orders_202007
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc2
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc2 limit ?,?   [values]: 0,5
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc2 limit ?,?   [values]: 0,5
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 3
[WARN] Auto table: parameter  ${version} in LeafAlloc${version} still has not value, will be ignore it!
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc limit ?,?   [values]: 0,5
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc2
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 3
[WARN] Auto table: parameter  ${version} in LeafAlloc${version} still has not value, will be ignore it!
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc limit ?,?   [values]: 0,5
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 3
[INFO] 3
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from Orders_202007
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc2
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc2 limit ?,?   [values]: 0,5
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc2 limit ?,?   [values]: 0,5
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 3
[WARN] Auto table: parameter  ${version} in LeafAlloc${version} still has not value, will be ignore it!
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc limit ?,?   [values]: 0,5
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc2
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 3
[WARN] Auto table: parameter  ${version} in LeafAlloc${version} still has not value, will be ignore it!
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc limit ?,?   [values]: 0,5
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 3
[INFO] 3
[INFO] ------------------------getId : null
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,createtime,remark) values (?,?,?,?,?)   [values]: Bee,Bee(ORM Framework),80.80,2022-03-02 11:17:05,InsertAndReturnId
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 683632838574509
[INFO] ------------------------getId : null
[INFO] [Bee] selectById SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 683632838574509
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=683632838574509,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=2022-03-02 11:17:05,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,createtime,remark) values (?,?,?,?,?)   [values]: Bee,Bee(ORM Framework),80.80,2022-03-02 11:17:05,InsertAndReturnId
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 683632838574510
[INFO] ------------------------getId : null
[INFO] ------------------------getId : null
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,createtime,remark) values (?,?,?,?,?)   [values]: Bee,Bee(ORM Framework),80.80,2022-03-02 11:17:05,InsertAndReturnId
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 683632838574511
[INFO] ------------------------getId : null
[INFO] [Bee] selectById SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 683632838574511
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=683632838574511,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=2022-03-02 11:17:05,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,createtime,remark) values (?,?,?,?,?)   [values]: Bee,Bee(ORM Framework),80.80,2022-03-02 11:17:05,InsertAndReturnId
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 683632838574512
[INFO] ------------------------getId : null
[INFO] ------------------------getId : null
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime,remark) values (?,?,?,?,?,?)   [values]: 683632838574509,Bee,Bee(ORM Framework),80.80,2022-03-02 11:17:05,InsertAndReturnId
[WARN] Duplicate entry '683632838574509' for key 'PRIMARY'
[INFO] InsertAndReturnId  : 0
[INFO] ------------------------getId : null
[INFO] [Bee] selectById SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 0
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime,remark) values (?,?,?,?,?,?)   [values]: 683632838574510,Bee,Bee(ORM Framework),80.80,2022-03-02 11:17:05,InsertAndReturnId
[WARN] Duplicate entry '683632838574510' for key 'PRIMARY'
[INFO] InsertAndReturnId  : 0
[INFO] ------------------------getId : null
[INFO] -----------------------------
[INFO] auto increment id in MySQL, start....
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,createtime,remark) values (?,?,?,?,?)   [values]: Bee,Bee(ORM Framework),80.80,2022-03-02 11:17:05,InsertAndReturnId
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 683632838574513
[INFO] [Bee] selectById SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 683632838574513
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=683632838574513,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=2022-03-02 11:17:05,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,createtime,remark) values (?,?,?,?,?)   [values]: Bee,Bee(ORM Framework),80.80,2022-03-02 11:17:05,InsertAndReturnId
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 683632838574514
[INFO] auto increment id in MySQL, end....
[INFO] ------------------------getId : null
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,createtime,remark) values (?,?,?,?,?)   [values]: Bee,Bee(ORM Framework),80.80,2022-03-02 11:17:05,InsertAndReturnId
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 683632838574515
[INFO] ------------------------getId : null
[INFO] [Bee] selectById SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 683632838574515
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=683632838574515,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=2022-03-02 11:17:05,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,createtime,remark) values (?,?,?,?,?)   [values]: Bee,Bee(ORM Framework),80.80,2022-03-02 11:17:05,InsertAndReturnId
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 683632838574516
[INFO] ------------------------getId : null
[INFO] ------------------------getId : null
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,createtime,remark) values (?,?,?,?,?)   [values]: Bee,Bee(ORM Framework),80.80,2022-03-02 11:17:05,InsertAndReturnId
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 683632838574517
[INFO] ------------------------getId : null
[INFO] [Bee] selectById SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 683632838574517
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=683632838574517,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=2022-03-02 11:17:05,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,createtime,remark) values (?,?,?,?,?)   [values]: Bee,Bee(ORM Framework),80.80,2022-03-02 11:17:05,InsertAndReturnId
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 683632838574518
[INFO] ------------------------getId : null
[INFO] ------------------------getId : null
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime,remark) values (?,?,?,?,?,?)   [values]: 683632838574511,Bee,Bee(ORM Framework),80.80,2022-03-02 11:17:05,InsertAndReturnId
[WARN] Duplicate entry '683632838574511' for key 'PRIMARY'
[INFO] InsertAndReturnId  : 0
[INFO] ------------------------getId : null
[INFO] [Bee] selectById SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 0
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime,remark) values (?,?,?,?,?,?)   [values]: 683632838574512,Bee,Bee(ORM Framework),80.80,2022-03-02 11:17:05,InsertAndReturnId
[WARN] Duplicate entry '683632838574512' for key 'PRIMARY'
[INFO] InsertAndReturnId  : 0
[INFO] ------------------------getId : null
[INFO] -----------------------------
[INFO] auto increment id in MySQL, start....
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,createtime,remark) values (?,?,?,?,?)   [values]: Bee,Bee(ORM Framework),80.80,2022-03-02 11:17:06,InsertAndReturnId
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 683632838574519
[INFO] [Bee] selectById SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 683632838574519
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=683632838574519,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=2022-03-02 11:17:06,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,createtime,remark) values (?,?,?,?,?)   [values]: Bee,Bee(ORM Framework),80.80,2022-03-02 11:17:06,InsertAndReturnId
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 683632838574520
[INFO] auto increment id in MySQL, end....
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee]  | <--  select rows: 58
[INFO] [Bee] select(entity,start,size) SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders limit ?,?   [values]: 0,10
[INFO] [Bee]  | <--  select rows: 10
[INFO] [Bee] select SQL(selectFields) : select id, name from orders
[INFO] [Bee] selectJson(T entity, String selectField) SQL: select id, name from orders
[INFO] [Bee] select(entity,selectFields,start,size) SQL: select id, name from orders limit ?,?   [values]: 0,10
[INFO] [Bee] selectJson(T entity, String selectField, int start, int size) SQL: select id, name from orders limit ?,?   [values]: 0,10
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee] selectById SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 1001
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] insert SQL: insert into orders(id,createtime,remark) values (?,?,?)   [values]: 1001,2022-03-02 11:17:06,test for save
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc limit ?,?   [values]: 0,10
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc limit ?,?   [values]: 0,10
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] ========= get the dbName in real time is :Oracle
[INFO] [Bee] PreparedSql select SQL: select * from ( select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc ) where rownum <= ?   [values]: 2
[INFO] [Bee]  | <--  select rows: 2
[INFO] [Bee] ========= get the dbName in real time is :MySQL
[INFO] [Bee] PreparedSql select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc limit ?,?   [values]: 0,2
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 2
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee]  | <--  select rows: 59
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 59
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001,Bee(ORM Framework)
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.010000,createtime=2020-03-02 11:29:28,remark=other,sequence=12345601,abc=test1,updatetime=null]
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001,Bee(ORM Framework)
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] insert SQL: insert into orders(id,name,createtime) values (?,?,?)   [values]: 100002,Bee(ORM Framework),2022-03-02 11:17:06.219
[WARN] Duplicate entry '100002' for key 'PRIMARY'
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=? and createtime=?   [values]: 100002,Bee(ORM Framework),2022-03-02 11:17:06.219
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=? and createtime=?   [values]: 100002,Bee(ORM Framework),2022-03-02 11:17:06.219
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] update SQL: update orders set name=? , createtime=? , updatetime=? where id=?   [values]: Bee(ORM Framework),2022-03-02 11:17:06.219,2022-03-02,100002
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] update record:1
[INFO] ObjSQLException-test
[INFO] BeeSQLException-test
[INFO] ObjSQLIllegalSQLStringException-test
[INFO] 700041126211485697
[INFO] 700041126211490696
[INFO] 100110110111000010111011001000000000000000000000000000000001
[INFO] 100110110111000010111011001000000000000000000001001110001000
[INFO] The generated id are continuous!
[INFO] 700041126219874305
[INFO] 700041126219879304
[INFO] 100110110111000010111011001000000000100000000000000000000001
[INFO] 100110110111000010111011001000000000100000000001001110001000
[INFO] The generated id are continuous!
[INFO] 
[INFO] 700041126211485697
[INFO] 700041126211490696
[INFO] 100110110111000010111011001000000000000000000000000000000001
[INFO] 100110110111000010111011001000000000000000000001001110001000
[INFO] The generated id are continuous!
[INFO] 700041126219874305
[INFO] 700041126219879304
[INFO] 100110110111000010111011001000000000100000000000000000000001
[INFO] 100110110111000010111011001000000000100000000001001110001000
[INFO] The generated id are continuous!
[INFO] ================UpperKeyTest==============
[INFO] SELECTCOUNTDISTINCTFROM
[INFO] WHEREANDBETWEENGROUP BYORDER BYASCFOR UPDATE
[INFO] IS NOT NULLIS NULLINEXISTSNOT EXISTS
[INFO] INNER JOINJOINLEFT JOINRIGHT JOIN
[INFO] LIMITTOP 
[INFO] INSERTINTOVALUES
[INFO] REPLACE
[INFO] DELETEFROM
[INFO] UPDATESET
[INFO] NULLOROFFSETONNOT BETWEENNOT INHAVINGAS
[INFO] true
[INFO] true
[INFO] true
[INFO] false
[INFO] true
[INFO] false
[INFO] create("1", short.class)  :  java.lang.Short
[INFO] create("1", byte.class)  :  java.lang.Byte
[INFO] create("1", long.class)  :  java.lang.Long
[INFO] create("1", short.class)  :  java.lang.Short
[INFO] create("1", byte.class)  :  java.lang.Byte
[INFO] create("1", long.class)  :  java.lang.Long
[INFO] [{"name":"id","type":"Long","ynnull":false,"ynkey":true,"label":"","tablename":"orders","tablecomment":""},{"name":"userid","type":"String","ynnull":true,"ynkey":false,"label":"","tablename":"orders","tablecomment":""},{"name":"name","type":"String","ynnull":true,"ynkey":false,"label":"","tablename":"orders","tablecomment":""},{"name":"total","type":"BigDecimal","ynnull":true,"ynkey":false,"label":"","tablename":"orders","tablecomment":""},{"name":"createtime","type":"String","ynnull":true,"ynkey":false,"label":"","tablename":"orders","tablecomment":""},{"name":"remark","type":"String","ynnull":true,"ynkey":false,"label":"","tablename":"orders","tablecomment":""},{"name":"sequence","type":"String","ynnull":true,"ynkey":false,"label":"","tablename":"orders","tablecomment":""},{"name":"abc","type":"String","ynnull":true,"ynkey":false,"label":"","tablename":"orders","tablecomment":""},{"name":"updatetime","type":"String","ynnull":true,"ynkey":false,"label":"","tablename":"orders","tablecomment":""}]
[INFO] 一千一百
[INFO] 一千零一
[INFO] 二万零三十
[INFO] 五十万零五
[INFO] 五十万零三百零五
[INFO] 壹仟壹佰
[INFO] 壹仟零壹
[INFO] 贰万零叁拾
[INFO] 伍拾万零伍
[INFO] 伍拾万零叁佰零伍
[INFO] ======================
[INFO] 伍拾万零叁佰零伍圆零角
[INFO] 伍拾万零叁佰零伍圆贰角叁分
[INFO] 伍拾万零叁佰零伍圆壹角贰分叁厘
[INFO] 五十万零三百零五点二三
[INFO] 五百万零三千零五十点二三四
[INFO] ======================
[INFO] 一千零四
[INFO] 二千零四十六
[INFO] 二千九百三十二
[INFO] 九千零四十
[INFO] 一千零一
[INFO] 三百二十七
[INFO] 八千零五十二
[INFO] 一千五百零三
[INFO] 一千一百
[INFO] 二千五百
[INFO] 九百七十
[INFO] 一千九百
