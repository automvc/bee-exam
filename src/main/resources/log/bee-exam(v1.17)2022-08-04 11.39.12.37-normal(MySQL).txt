[INFO] [Bee] PreparedSql modify SQL: DROP TABLE IF EXISTS `test_primary_key`;    [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
DROP TABLE IF EXISTS `test_primary_key`; 
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  CREATE TABLE `test_primary_key` (  `myid` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(100) COLLATE utf8_bin DEFAULT NULL,  `remark` varchar(100) COLLATE utf8_bin DEFAULT NULL,  `remark2` varchar(100) COLLATE utf8_bin DEFAULT NULL,  PRIMARY KEY (`myid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 CREATE TABLE `test_primary_key` (  `myid` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(100) COLLATE utf8_bin DEFAULT NULL,  `remark` varchar(100) COLLATE utf8_bin DEFAULT NULL,  `remark2` varchar(100) COLLATE utf8_bin DEFAULT NULL,  PRIMARY KEY (`myid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
[INFO] [Bee]  | <--  Affected rows: 0
[WARN] Auto table: parameter  ${month} in Orders${month} still has not value, will be ignore it!
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS Orders   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS Orders
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE Orders (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
userid  varchar(255) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
total  DECIMAL(19,6) DEFAULT NULL,  
createtime  varchar(255) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL,  
sequence  varchar(255) DEFAULT NULL,  
abc  varchar(255) DEFAULT NULL,  
updatetime  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS Orders_202007   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS Orders_202007
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE Orders_202007 (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
userid  varchar(255) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
total  DECIMAL(19,6) DEFAULT NULL,  
createtime  varchar(255) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL,  
sequence  varchar(255) DEFAULT NULL,  
abc  varchar(255) DEFAULT NULL,  
updatetime  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS test_user   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS test_user
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE test_user (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
email  varchar(255) DEFAULT NULL,  
last_name  varchar(255) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
password  varchar(255) DEFAULT NULL,  
username  varchar(255) DEFAULT NULL,  
createtime  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS leaf_alloc   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS leaf_alloc
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE leaf_alloc (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
biz_tag  varchar(255) DEFAULT NULL,  
max_id  bigint(20) DEFAULT NULL,  
step  int(11) DEFAULT NULL,  
description  varchar(255) DEFAULT NULL,  
update_time  timestamp DEFAULT CURRENT_TIMESTAMP,  
version  int(11) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS leaf_alloc2   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS leaf_alloc2
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE leaf_alloc2 (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
biz_tag  varchar(255) DEFAULT NULL,  
max_id  bigint(20) DEFAULT NULL,  
step  int(11) DEFAULT NULL,  
description  varchar(255) DEFAULT NULL,  
update_time  varchar(255) DEFAULT NULL,  
version  int(11) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS leaf_alloc3   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS leaf_alloc3
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE leaf_alloc3 (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
biz_tag  varchar(255) DEFAULT NULL,  
max_id  bigint(20) DEFAULT NULL,  
step  int(11) DEFAULT NULL,  
description  varchar(255) DEFAULT NULL,  
update_time  varchar(255) DEFAULT NULL,  
version  int(11) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS scores   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS scores
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE scores (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
classno  varchar(255) DEFAULT NULL,  
term  varchar(255) DEFAULT NULL,  
examno  varchar(255) DEFAULT NULL,  
subjectno  varchar(255) DEFAULT NULL,  
subject  varchar(255) DEFAULT NULL,  
stuno  varchar(255) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
teacherno  varchar(255) DEFAULT NULL,  
teachername  varchar(255) DEFAULT NULL,  
score  Double DEFAULT NULL,  
creater  varchar(255) DEFAULT NULL,  
createtime  timestamp DEFAULT CURRENT_TIMESTAMP,  
updater  varchar(255) DEFAULT NULL,  
updatetime  timestamp DEFAULT CURRENT_TIMESTAMP,  
remark  varchar(255) DEFAULT NULL,  
ext1  varchar(255) DEFAULT NULL,  
status  varchar(255) DEFAULT NULL,  
schoolno  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS assignexam   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS assignexam
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE assignexam (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
classno  varchar(255) DEFAULT NULL,  
term  varchar(255) DEFAULT NULL,  
examno  varchar(255) DEFAULT NULL,  
subjectno  varchar(255) DEFAULT NULL,  
subject  varchar(255) DEFAULT NULL,  
creater  varchar(255) DEFAULT NULL,  
createtime  timestamp DEFAULT CURRENT_TIMESTAMP,  
updater  varchar(255) DEFAULT NULL,  
updatetime  timestamp DEFAULT CURRENT_TIMESTAMP,  
remark  varchar(255) DEFAULT NULL,  
ext1  varchar(255) DEFAULT NULL,  
status  varchar(255) DEFAULT NULL,  
schoolno  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS assigncourse   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS assigncourse
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE assigncourse (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
classno  varchar(255) DEFAULT NULL,  
term  varchar(255) DEFAULT NULL,  
teacherno  varchar(255) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
subjectno  varchar(255) DEFAULT NULL,  
subject  varchar(255) DEFAULT NULL,  
creater  varchar(255) DEFAULT NULL,  
createtime  timestamp DEFAULT CURRENT_TIMESTAMP,  
updater  varchar(255) DEFAULT NULL,  
updatetime  timestamp DEFAULT CURRENT_TIMESTAMP,  
remark  varchar(255) DEFAULT NULL,  
status  varchar(255) DEFAULT NULL,  
schoolno  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS clazz   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS clazz
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE clazz (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
classname  varchar(255) DEFAULT NULL,  
place  varchar(255) DEFAULT NULL,  
teachername  varchar(255) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS student   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS student
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE student (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
sid  int(11) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
age  int(11) DEFAULT NULL,  
sex  BIT DEFAULT NULL,  
majorid  varchar(255) DEFAULT NULL,  
flag  BIT DEFAULT NULL,  
classno  int(11) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS student_hobby   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS student_hobby
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE student_hobby (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
stu_id  varchar(255) DEFAULT NULL,  
hobby  varchar(255) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS Noid   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS Noid
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE Noid (
uuid  varchar(255) PRIMARY KEY NOT NULL,  
name  varchar(255) DEFAULT NULL,  
num  int(11) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS noid   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS noid
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE noid (
uuid  varchar(255) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
num  int(11) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL,  
ch  char(1) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS noid2   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS noid2
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE noid2 (
uu_id  varchar(255) PRIMARY KEY NOT NULL,  
name  varchar(255) DEFAULT NULL,  
num  int(11) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS orders3   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS orders3
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE orders3 (
id  varchar(255) PRIMARY KEY NOT NULL,  
userid  varchar(255) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
total  DECIMAL(19,6) DEFAULT NULL,  
createtime  varchar(255) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL,  
sequence  varchar(255) DEFAULT NULL,  
abc  varchar(255) DEFAULT NULL,  
updatetime  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS orders_id_string   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS orders_id_string
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE orders_id_string (
id  varchar(255) PRIMARY KEY NOT NULL,  
userid  varchar(255) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
total  DECIMAL(19,6) DEFAULT NULL,  
createtime  varchar(255) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL,  
sequence  varchar(255) DEFAULT NULL,  
abc  varchar(255) DEFAULT NULL,  
updatetime  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS date_type   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS date_type
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE date_type (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
date1  datetime DEFAULT CURRENT_TIMESTAMP,  
date3  datetime DEFAULT CURRENT_TIMESTAMP,  
date2  datetime DEFAULT CURRENT_TIMESTAMP,  
remark  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS test_primary_key   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS test_primary_key
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE test_primary_key (
myid  bigint(20) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL,  
remark2  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO orders VALUES ('100001', 'Bee', 'Bee(ORM Framework)', '95.01', '2020-03-02 11:29:28', 'test', '12345601', 'test1', null);
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO orders VALUES ('100002', 'bee', 'Bee', '96.01', '2020-03-02 11:29:28', 'test%a', '12345602', 'test2', '2020-03-02 16:34:19');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO orders VALUES ('100003', 'bee', 'Bee', '97.01', '2020-03-02 11:29:28', 'testx%', '12345603', 'test3', '2020-03-02 16:34:19');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO orders_202007 VALUES ('100001', 'Bee', 'Bee(ORM Framework)', '95.01', '2020-03-02 11:29:28', 'test', '12345601', 'test1', null);
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO orders_202007 VALUES ('100002', 'bee', 'Bee', '96.01', '2020-03-02 11:29:28', 'test%a', '12345602', 'test2', '2020-03-02 16:34:19');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO orders_202007 VALUES ('100003', 'bee', 'Bee', '97.01', '2020-03-02 11:29:28', 'testx%', '12345603', 'test3', '2020-03-02 16:34:19');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO test_user VALUES ('800001', 'beeUser@163.com', null, 'Bee', 'bee', 'bee', null);   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
INSERT INTO test_user VALUES ('800001', 'beeUser@163.com', null, 'Bee', 'bee', 'bee', null);
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO test_user VALUES ('800002', 'honey@163.com', 'cn', 'Honey', 'honey', 'honey', null);   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
INSERT INTO test_user VALUES ('800002', 'honey@163.com', 'cn', 'Honey', 'honey', 'honey', null);
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc3 VALUES ('456537470402562', 'test', '100', '100', 'test segment', '2020-07-04 22:42:09', '1');   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
INSERT INTO leaf_alloc3 VALUES ('456537470402562', 'test', '100', '100', 'test segment', '2020-07-04 22:42:09', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc3 VALUES ('456537470402563', 'order', '100', '100', 'order segment', '2020-07-04 22:42:10', '1');   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
INSERT INTO leaf_alloc3 VALUES ('456537470402563', 'order', '100', '100', 'order segment', '2020-07-04 22:42:10', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc3 VALUES ('456537470402564', 'bee', '100', '100', 'order segment', '2020-09-19 19:05:10', '1');   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
INSERT INTO leaf_alloc3 VALUES ('456537470402564', 'bee', '100', '100', 'order segment', '2020-09-19 19:05:10', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc2 VALUES ('456537470402562', 'test', '100', '100', 'test segment', '2020-07-04 22:42:09', '1');   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
INSERT INTO leaf_alloc2 VALUES ('456537470402562', 'test', '100', '100', 'test segment', '2020-07-04 22:42:09', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc2 VALUES ('456537470402563', 'order', '100', '100', 'order segment', '2020-07-04 22:42:10', '1');   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
INSERT INTO leaf_alloc2 VALUES ('456537470402563', 'order', '100', '100', 'order segment', '2020-07-04 22:42:10', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc2 VALUES ('456537470402564', 'bee', '100', '100', 'order segment', '2020-09-19 19:05:10', '1');   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
INSERT INTO leaf_alloc2 VALUES ('456537470402564', 'bee', '100', '100', 'order segment', '2020-09-19 19:05:10', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc(id,biz_tag,max_id,step,description,version) VALUES ('456537470402562', 'test', '100', '100', 'test segment', '1');   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
INSERT INTO leaf_alloc(id,biz_tag,max_id,step,description,version) VALUES ('456537470402562', 'test', '100', '100', 'test segment', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc(id,biz_tag,max_id,step,description,version) VALUES ('456537470402563', 'order', '100', '100', 'test segment', '1');   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
INSERT INTO leaf_alloc(id,biz_tag,max_id,step,description,version) VALUES ('456537470402563', 'order', '100', '100', 'test segment', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc(id,biz_tag,max_id,step,description,version) VALUES ('456537470402564', 'bee', '100', '100', 'test segment', '1');   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
INSERT INTO leaf_alloc(id,biz_tag,max_id,step,description,version) VALUES ('456537470402564', 'bee', '100', '100', 'test segment', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [bee-exam] ====================SuidExam.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001(Long),Bee(ORM Framework)(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 and name='Bee(ORM Framework)' ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001(Long),Bee(ORM Framework)(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 and name='Bee(ORM Framework)' ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.010000,createtime=2020-03-02 11:29:28,remark=test,sequence=12345601,abc=test1,updatetime=null]
[INFO] [Bee] update SQL: update orders set name=? where id=?   [values]: Bee(ORM Framework)(String),100001(Long)
[INFO] [Bee] update SQL:  ( ExecutableSql )
update orders set name='Bee(ORM Framework)' where id=100001 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] update record:1
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total) values (?,?,?,?)   [values]: 78088901755206(Long),bee(String),Bee-ORM Framework(String),91.99(java.math.BigDecimal)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,userid,name,total) values (78088901755206,'bee','Bee-ORM Framework',91.99) ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] insert record:1
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total) values (?,?,?,?)   [values]: 78088901755207(Long),bee(String),Bee-ORM Framework(String),91.99(java.math.BigDecimal)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,userid,name,total) values (78088901755207,'bee','Bee-ORM Framework',91.99) ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total) values (?,?,?,?)   [values]: 78088901755208(Long),bee(String),Bee-ORM Framework(String),91.99(java.math.BigDecimal)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,userid,name,total) values (78088901755208,'bee','Bee-ORM Framework',91.99) ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=?   [values]: bee(String),Bee-ORM Framework(String),91.99(java.math.BigDecimal)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee' and name='Bee-ORM Framework' and total=91.99 ;
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=?   [values]: bee(String),Bee-ORM Framework(String),91.99(java.math.BigDecimal)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee' and name='Bee-ORM Framework' and total=91.99 ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 3
[INFO] Orders[id=78088901755206,userid=bee,name=Bee-ORM Framework,total=91.990000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=78088901755207,userid=bee,name=Bee-ORM Framework,total=91.990000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=78088901755208,userid=bee,name=Bee-ORM Framework,total=91.990000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] delete SQL: delete from orders where userid=? and name=? and total=?   [values]: bee(String),Bee-ORM Framework(String),91.99(java.math.BigDecimal)
[INFO] [Bee] delete SQL:  ( ExecutableSql )
delete from orders where userid='bee' and name='Bee-ORM Framework' and total=91.99 ;
[INFO] [Bee]  | <--  Affected rows: 3
[INFO] delete record:3
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 3
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.010000,createtime=2020-03-02 11:29:28,remark=test,sequence=12345601,abc=test1,updatetime=null]
[INFO] Orders[id=100002,userid=bee,name=Bee,total=96.010000,createtime=2020-03-02 11:29:28,remark=test%a,sequence=12345602,abc=test2,updatetime=2020-03-02 16:34:19]
[INFO] Orders[id=100003,userid=bee,name=Bee,total=97.010000,createtime=2020-03-02 11:29:28,remark=testx%,sequence=12345603,abc=test3,updatetime=2020-03-02 16:34:19]
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=?   [values]: bee(String),Bee-ORM Framework(String),91.99(java.math.BigDecimal)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee' and name='Bee-ORM Framework' and total=91.99 ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=?   [values]: bee(String),Bee-ORM Framework(String),91.99(java.math.BigDecimal)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee' and name='Bee-ORM Framework' and total=91.99 ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=?   [values]: bee(String),Bee-ORM Framework(String),91.99(java.math.BigDecimal)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee' and name='Bee-ORM Framework' and total=91.99 ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 3
[INFO] [bee-exam] ====================SuidExam.test======end.

[INFO] [bee-exam] ====================SuidExamEN.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001(Long),Bee(ORM Framework)(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 and name='Bee(ORM Framework)' ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.010000,createtime=2020-03-02 11:29:28,remark=test,sequence=12345601,abc=test1,updatetime=null]
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001(Long),Bee(ORM Framework)(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 and name='Bee(ORM Framework)' ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] update SQL: update orders set name=? where id=?   [values]: Bee(ORM Framework)(String),100001(Long)
[INFO] [Bee] update SQL:  ( ExecutableSql )
update orders set name='Bee(ORM Framework)' where id=100001 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] update record:1
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total) values (?,?,?,?)   [values]: 78088901755209(Long),bee(String),Bee(String),91.99(java.math.BigDecimal)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,userid,name,total) values (78088901755209,'bee','Bee',91.99) ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] insert record:1
[INFO] [Bee] delete SQL: delete from orders where userid=? and name=? and total=?   [values]: bee(String),Bee(String),91.99(java.math.BigDecimal)
[INFO] [Bee] delete SQL:  ( ExecutableSql )
delete from orders where userid='bee' and name='Bee' and total=91.99 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] delete record:1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001(Long),Bee(ORM Framework)(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 and name='Bee(ORM Framework)' ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.010000,createtime=2020-03-02 11:29:28,remark=test,sequence=12345601,abc=test1,updatetime=null]
[INFO] [bee-exam] ====================SuidExamEN.test======end.

[INFO] [bee-exam] ====================SuidRichExam.test======start:
[INFO] ==============orders.getId(): null
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,remark) values (?,?,?,?,?)   [values]: 78088901755210(Long),client(String),client(String),93.99(java.math.BigDecimal),testOneTime(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,userid,name,total,remark) values (78088901755210,'client','client',93.99,'testOneTime') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] insert record:1
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime,remark,abc,updatetime) values (?,?,?,?,?,?,?,?)   [values]: 78088901755211(Long),client(String),client(String),93.99(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,userid,name,total,createtime,remark,abc,updatetime) values (78088901755211,'client','client',93.99,null,'testOneTime',null,null) ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] insert record:1
[INFO] ==============orders.getId(): null
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,remark,sequence) values (?,?,?,?,?,?)   [values]: 78088901755212(Long),client(String),client(String),93.99(java.math.BigDecimal),testOneTime(String),(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,userid,name,total,remark,sequence) values (78088901755212,'client','client',93.99,'testOneTime','') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] insert record:1
[INFO] ==============orders.getId(): null
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?)   [values]: 78088901755213(Long),client(String),client(String),93.99(java.math.BigDecimal),null(String),testOneTime(String),(String),null(String),null(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (78088901755213,'client','client',93.99,null,'testOneTime','',null,null) ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] insert record:1
[INFO] [Bee] update SQL(updateFields) :update orders set name=?, remark=? where userid=? and total=?   [values]: client(String),testOneTime(String),client(String),93.99(java.math.BigDecimal)
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update orders set name='client', remark='testOneTime' where userid='client' and total=93.99 ;
[INFO] [Bee]  | <--  Affected rows: 4
[INFO] updateNum1:  4
[INFO] [Bee] update SQL(updateFields) :update orders set name=? where userid=? and total=? and remark=?   [values]: client(String),client(String),93.99(java.math.BigDecimal),testOneTime(String)
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update orders set name='client' where userid='client' and total=93.99 and remark='testOneTime' ;
[INFO] [Bee]  | <--  Affected rows: 4
[INFO] updateNum2:  4
[INFO] [Bee] update SQL(updateFields) :update orders set name=? where userid=? and total=? and remark=? and sequence=?   [values]: client(String),client(String),93.99(java.math.BigDecimal),testOneTime(String),(String)
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update orders set name='client' where userid='client' and total=93.99 and remark='testOneTime' and sequence='' ;
[INFO] [Bee]  | <--  Affected rows: 2
[INFO] updateNum4:  2
[INFO] [Bee] update SQL(updateFields) :update orders set name=? where userid=? and total=? and createtime is null and remark=? and abc is null and updatetime is null   [values]: client(String),client(String),93.99(java.math.BigDecimal),testOneTime(String)
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update orders set name='client' where userid='client' and total=93.99 and createtime is null and remark='testOneTime' and abc is null and updatetime is null ;
[INFO] [Bee]  | <--  Affected rows: 4
[INFO] updateNum5:  4
[INFO] [Bee] update SQL(updateFields) :update orders set name=? where userid=? and total=? and createtime is null and remark=? and sequence=? and abc is null and updatetime is null   [values]: client(String),client(String),93.99(java.math.BigDecimal),testOneTime(String),(String)
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update orders set name='client' where userid='client' and total=93.99 and createtime is null and remark='testOneTime' and sequence='' and abc is null and updatetime is null ;
[INFO] [Bee]  | <--  Affected rows: 2
[INFO] updateNum6:  2
[INFO] [Bee] update SQL(updateFields) :update orders set name=?, total=? where userid=? and remark=? and sequence=?   [values]: client(String),93.99(java.math.BigDecimal),client(String),testOneTime(String),(String)
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update orders set name='client', total=93.99 where userid='client' and remark='testOneTime' and sequence='' ;
[INFO] [Bee]  | <--  Affected rows: 2
[INFO] updateNum4_2:  2
[INFO] [Bee] update SQL(updateFields) :update orders set name=?, total=? where userid=? and createtime is null and remark=? and abc is null and updatetime is null   [values]: client(String),93.99(java.math.BigDecimal),client(String),testOneTime(String)
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update orders set name='client', total=93.99 where userid='client' and createtime is null and remark='testOneTime' and abc is null and updatetime is null ;
[INFO] [Bee]  | <--  Affected rows: 4
[INFO] updateNum5_2:  4
[INFO] [Bee] update SQL(updateFields) :update orders set name=?, total=? where userid=? and createtime is null and remark=? and sequence=? and abc is null and updatetime is null   [values]: client(String),93.99(java.math.BigDecimal),client(String),testOneTime(String),(String)
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update orders set name='client', total=93.99 where userid='client' and createtime is null and remark='testOneTime' and sequence='' and abc is null and updatetime is null ;
[INFO] [Bee]  | <--  Affected rows: 2
[INFO] updateNum6_2:  2
[INFO] [Bee] select fun SQL : select count(total) from orders where userid=? and name=? and total=? and remark=?   [values]: client(String),client(String),93.99(java.math.BigDecimal),testOneTime(String)
[INFO] [Bee] select fun SQL :  ( ExecutableSql )
select count(total) from orders where userid='client' and name='client' and total=93.99 and remark='testOneTime' ;
[INFO] [Bee] select fun SQL : select max(total) from orders where userid=? and name=? and total=? and remark=?   [values]: client(String),client(String),93.99(java.math.BigDecimal),testOneTime(String)
[INFO] [Bee] select fun SQL :  ( ExecutableSql )
select max(total) from orders where userid='client' and name='client' and total=93.99 and remark='testOneTime' ;
[INFO] [Bee] select fun SQL : select min(total) from orders where userid=? and name=? and total=? and remark=?   [values]: client(String),client(String),93.99(java.math.BigDecimal),testOneTime(String)
[INFO] [Bee] select fun SQL :  ( ExecutableSql )
select min(total) from orders where userid='client' and name='client' and total=93.99 and remark='testOneTime' ;
[INFO] [Bee] select fun SQL : select avg(total) from orders where userid=? and name=? and total=? and remark=?   [values]: client(String),client(String),93.99(java.math.BigDecimal),testOneTime(String)
[INFO] [Bee] select fun SQL :  ( ExecutableSql )
select avg(total) from orders where userid='client' and name='client' and total=93.99 and remark='testOneTime' ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee] select fun SQL : select sum(total) from orders where userid=? and name=? and total=? and remark=?   [values]: client(String),client(String),93.99(java.math.BigDecimal),testOneTime(String)
[INFO] [Bee] select fun SQL :  ( ExecutableSql )
select sum(total) from orders where userid='client' and name='client' and total=93.99 and remark='testOneTime' ;
[INFO] funCount:4
[INFO] funMax:93.990000
[INFO] funMin:93.990000
[INFO] funAvg:93.9900000000
[INFO] funSum:375.960000
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime,remark,abc,updatetime) values (?,?,?,?,?,?,?,?)   [values]: 100(Long),client00(String),client01(String),93.99(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,userid,name,total,createtime,remark,abc,updatetime) values (100,'client00','client01',93.99,null,'testOneTime',null,null) ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] insert record:1
[INFO] [Bee] update SQL: update orders set userid=? , name=? , total=? , remark=? , sequence=? where id=?   [values]: client00(String),client01(String),93.99(java.math.BigDecimal),testOneTime(String),(String),100(Long)
[INFO] [Bee] update SQL:  ( ExecutableSql )
update orders set userid='client00' , name='client01' , total=93.99 , remark='testOneTime' , sequence='' where id=100 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] updateNum8:  1
[INFO] [Bee] update SQL: update orders set userid=? , name=? , total=? , createtime =null , remark=? , abc =null , updatetime =null where id=?   [values]: client00(String),client01(String),93.99(java.math.BigDecimal),testOneTime(String),100(Long)
[INFO] [Bee] update SQL:  ( ExecutableSql )
update orders set userid='client00' , name='client01' , total=93.99 , createtime =null , remark='testOneTime' , abc =null , updatetime =null where id=100 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] updateNum9:  1
[INFO] [Bee] update SQL: update orders set userid=? , name=? , total=? , createtime =null , remark=? , sequence=? , abc =null , updatetime =null where id=?   [values]: client00(String),client01(String),93.99(java.math.BigDecimal),testOneTime(String),(String),100(Long)
[INFO] [Bee] update SQL:  ( ExecutableSql )
update orders set userid='client00' , name='client01' , total=93.99 , createtime =null , remark='testOneTime' , sequence='' , abc =null , updatetime =null where id=100 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] updateNum10:  1
[INFO] [Bee] delete SQL: delete from orders where id=? and userid=? and name=? and total=? and remark=?   [values]: 100(Long),client00(String),client01(String),93.99(java.math.BigDecimal),testOneTime(String)
[INFO] [Bee] delete SQL:  ( ExecutableSql )
delete from orders where id=100 and userid='client00' and name='client01' and total=93.99 and remark='testOneTime' ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] deleteNum: 1
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 1004(Long),client01(String),null(String),91(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index0] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (1004,'client01',null,91,null,'testOneTime',null,null,null) ; ;
[INFO] [Bee] --> index:1 ,  [values]: 1005(Long),client02(String),null(String),20(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index1] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (1005,'client02',null,20,null,'testOneTime',null,null,null) ; ;
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 2
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:2 ,  [values]: 1006(Long),client03(String),null(String),23(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index2] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (1006,'client03',null,23,null,'testOneTime',null,null,null) ; ;
[INFO] [Bee]  | <-- [Batch:1] Affected rows: 1
[INFO] 3
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 1007(Long),client01(String),null(String),91(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index0] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (1007,'client01',null,91,null,'testOneTime',null,null,null) ; ;
[INFO] [Bee] --> index:1 ,  [values]: 1008(Long),client02(String),null(String),20(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index1] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (1008,'client02',null,20,null,'testOneTime',null,null,null) ; ;
[INFO] [Bee] --> index:2 ,  [values]: 1009(Long),client03(String),null(String),23(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index2] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (1009,'client03',null,23,null,'testOneTime',null,null,null) ; ;
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 3
[INFO] 3
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 10010(Long),client01(String),null(String),91(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index0] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (10010,'client01',null,91,null,'testOneTime',null,null,null) ; ;
[INFO] [Bee] --> index:1 ,  [values]: 10011(Long),client02(String),null(String),20(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index1] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (10011,'client02',null,20,null,'testOneTime',null,null,null) ; ;
[INFO] [Bee] --> index:2 ,  [values]: 10012(Long),client03(String),null(String),23(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index2] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (10012,'client03',null,23,null,'testOneTime',null,null,null) ; ;
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 3
[INFO] 3
[INFO] [Bee] select SQL(selectFields) : select name, total from orders where userid=?   [values]: bee(String)
[INFO] [Bee] select SQL(selectFields) :  ( ExecutableSql )
select name, total from orders where userid='bee' ;
[INFO] [Bee]  | <--  select rows: 2
[INFO] 2
[INFO] [Bee] List<String[]> select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: client01(String)
[INFO] [Bee] List<String[]> select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='client01' ;
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL(selectFields) : select id, userid, total, createtime from orders where userid=?   [values]: client01(String)
[INFO] [Bee] select SQL(selectFields) :  ( ExecutableSql )
select id, userid, total, createtime from orders where userid='client01' ;
[INFO] [Bee]  | <--  select rows: 3
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] 1004  , 
[INFO] client01  , 
[INFO] 91.000000  , 
[INFO] null  , 
[INFO] 
[INFO] 1007  , 
[INFO] client01  , 
[INFO] 91.000000  , 
[INFO] null  , 
[INFO] 
[INFO] 10010  , 
[INFO] client01  , 
[INFO] 91.000000  , 
[INFO] null  , 
[INFO] 
[INFO] test paging
[INFO] MySQL
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=?   [values]: testOneTime(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark='testOneTime' ;
[INFO] [Bee]  | <--  select rows: 13
[INFO] [Bee] select SQL(entity,size): select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? limit ?,?   [values]: testOneTime(String),0(Integer),3(Integer)
[INFO] [Bee] select SQL(entity,size):  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark='testOneTime' limit 0,3 ;
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select(entity,start,size) SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? limit ?,?   [values]: testOneTime(String),0(Integer),3(Integer)
[INFO] [Bee] select(entity,start,size) SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark='testOneTime' limit 0,3 ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 3
[INFO] Orders[id=1004,userid=client01,name=null,total=91.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1005,userid=client02,name=null,total=20.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1006,userid=client03,name=null,total=23.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] select(entity,start,size) SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? limit ?,?   [values]: testOneTime(String),2(Integer),6(Integer)
[INFO] [Bee] select(entity,start,size) SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark='testOneTime' limit 2,6 ;
[INFO] [Bee]  | <--  select rows: 6
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 100018(Long),client18(String),null(String),18.18(java.math.BigDecimal),null(String),test insert and delete(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index0] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (100018,'client18',null,18.18,null,'test insert and delete',null,null,null) ; ;
[INFO] [Bee] --> index:1 ,  [values]: 100019(Long),client19(String),null(String),19.19(java.math.BigDecimal),null(String),test insert and delete(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index1] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (100019,'client19',null,19.19,null,'test insert and delete',null,null,null) ; ;
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 2
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:2 ,  [values]: 100020(Long),client20(String),null(String),20.20(java.math.BigDecimal),null(String),test insert and delete(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index2] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (100020,'client20',null,20.20,null,'test insert and delete',null,null,null) ; ;
[INFO] [Bee]  | <-- [Batch:1] Affected rows: 1
[INFO] [Bee] delete SQL: delete from orders where remark=?   [values]: test insert and delete(String)
[INFO] [Bee] delete SQL:  ( ExecutableSql )
delete from orders where remark='test insert and delete' ;
[INFO] [Bee]  | <--  Affected rows: 3
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 100018(Long),client18(String),null(String),18.18(java.math.BigDecimal),null(String),test insert and delete(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index0] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (100018,'client18',null,18.18,null,'test insert and delete',null,null,null) ; ;
[INFO] [Bee] --> index:1 ,  [values]: 100019(Long),client19(String),null(String),19.19(java.math.BigDecimal),null(String),test insert and delete(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index1] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (100019,'client19',null,19.19,null,'test insert and delete',null,null,null) ; ;
[INFO] [Bee] --> index:2 ,  [values]: 100020(Long),client20(String),null(String),20.20(java.math.BigDecimal),null(String),test insert and delete(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index2] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (100020,'client20',null,20.20,null,'test insert and delete',null,null,null) ; ;
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 3
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 100021(Long),client18(String),null(String),18.18(java.math.BigDecimal),null(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index0] )
insert into orders(id,userid,name,total,createtime,sequence,abc,updatetime) values (100021,'client18',null,18.18,null,null,null,null) ; ;
[INFO] [Bee] --> index:1 ,  [values]: 100022(Long),client19(String),null(String),19.19(java.math.BigDecimal),null(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index1] )
insert into orders(id,userid,name,total,createtime,sequence,abc,updatetime) values (100022,'client19',null,19.19,null,null,null,null) ; ;
[INFO] [Bee] --> index:2 ,  [values]: 100023(Long),client20(String),null(String),20.20(java.math.BigDecimal),null(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index2] )
insert into orders(id,userid,name,total,createtime,sequence,abc,updatetime) values (100023,'client20',null,20.20,null,null,null,null) ; ;
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 3
[INFO] [Bee] select fun SQL : select count(*) from orders where remark=?   [values]: test insert and delete(String)
[INFO] [Bee] select fun SQL :  ( ExecutableSql )
select count(*) from orders where remark='test insert and delete' ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=?   [values]: test insert and delete(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark='test insert and delete' ;
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] selectJson SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=?   [values]: test insert and delete(String)
[INFO] [Bee] selectJson SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark='test insert and delete' ;
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? and id>=?   [values]: test insert and delete(String),100018(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark='test insert and delete' and id>=100018 ;
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] selectJson SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? and id>=?   [values]: test insert and delete(String),100018(Integer)
[INFO] [Bee] selectJson SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark='test insert and delete' and id>=100018 ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? and id>=?   [values]: test insert and delete(String),100018(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark='test insert and delete' and id>=100018 ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] selectJson SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? and id>=?   [values]: test insert and delete(String),100018(Integer)
[INFO] [Bee] selectJson SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark='test insert and delete' and id>=100018 ;
[INFO] [Bee] select fun SQL : select count(*) from orders where remark=? and id>=?   [values]: test insert and delete(String),100018(Integer)
[INFO] [Bee] select fun SQL :  ( ExecutableSql )
select count(*) from orders where remark='test insert and delete' and id>=100018 ;
[INFO] [Bee] selectOrderBy SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? order by id asc   [values]: test insert and delete(String)
[INFO] [Bee] selectOrderBy SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark='test insert and delete' order by id asc ;
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] selectOrderBy SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? order by id asc,name desc   [values]: test insert and delete(String)
[INFO] [Bee] selectOrderBy SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark='test insert and delete' order by id asc,name desc ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 3
[INFO] =====随机取一条数据==========================
[INFO] [Bee] selectOrderBy SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? order by rand() asc   [values]: test insert and delete(String)
[INFO] [Bee] selectOrderBy SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark='test insert and delete' order by rand() asc ;
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders order by rand() limit ?,?   [values]: 0(Integer),1(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders order by rand() limit 0,1 ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and remark=?   [values]: 100021(Long),test insert and delete(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100021 and remark='test insert and delete' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and remark=? and id>=?   [values]: 100021(Long),test insert and delete(String),100018(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100021 and remark='test insert and delete' and id>=100018 ;
[INFO] [Bee]  | <--  select rows: 0
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee] select(entity,selectFields,start,size) SQL: select id, Remark, userid from orders where id=? and remark=? limit ?,?   [values]: 100021(Long),test insert and delete(String),0(Integer),10(Integer)
[INFO] [Bee] select(entity,selectFields,start,size) SQL:  ( ExecutableSql )
select id, Remark, userid from orders where id=100021 and remark='test insert and delete' limit 0,10 ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select fun SQL : select max(total) from orders where id=? and remark=? and id>=?   [values]: 100021(Long),test insert and delete(String),100018(Integer)
[INFO] [Bee] select fun SQL :  ( ExecutableSql )
select max(total) from orders where id=100021 and remark='test insert and delete' and id>=100018 ;
[INFO] [Bee] update SQL(whereFields) :update orders set remark=? where id=? and id>=?   [values]: test insert and delete(String),100021(Long),100018(Integer)
[INFO] [Bee] update SQL(whereFields) : ( ExecutableSql )
update orders set remark='test insert and delete' where id=100021 and id>=100018 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] update SQL(condition) :update orders set remark=? where id=? and remark=? and id=?   [values]: test update(String),100021(Long),test insert and delete(String),100023(Integer)
[INFO] [Bee] update SQL(condition) : ( ExecutableSql )
update orders set remark='test update' where id=100021 and remark='test insert and delete' and id=100023 ;
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] delete SQL: delete from orders where id=? and remark=?   [values]: 100021(Long),test insert and delete(String)
[INFO] [Bee] delete SQL:  ( ExecutableSql )
delete from orders where id=100021 and remark='test insert and delete' ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] delete SQL: delete from orders where id=? and remark=? and id>=?   [values]: 100021(Long),test insert and delete(String),100018(Integer)
[INFO] [Bee] delete SQL:  ( ExecutableSql )
delete from orders where id=100021 and remark='test insert and delete' and id>=100018 ;
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] deleteById SQL: delete from orders where id=?   [values]: 100021(Integer)
[INFO] [Bee] deleteById SQL:  ( ExecutableSql )
delete from orders where id=100021 ;
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] deleteById SQL: delete from orders where id=?   [values]: 100022(Long)
[INFO] [Bee] deleteById SQL:  ( ExecutableSql )
delete from orders where id=100022 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] deleteById SQL: delete from orders where id=?   [values]: 100023(Long)
[INFO] [Bee] deleteById SQL:  ( ExecutableSql )
delete from orders where id=100023 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select(entity,selectFields,start,size) SQL: select id, Remark, userid from orders where id=? and remark=? limit ?,?   [values]: 100021(Long),test insert and delete(String),5(Integer),10(Integer)
[INFO] [Bee] select(entity,selectFields,start,size) SQL:  ( ExecutableSql )
select id, Remark, userid from orders where id=100021 and remark='test insert and delete' limit 5,10 ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] =====================================
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and id=? limit ?,? for update    [values]: bee(String),100003(Integer),0(Integer),300(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee' and id=100003 limit 0,300 for update  ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100003,userid=bee,name=Bee,total=97.010000,createtime=2020-03-02 11:29:28,remark=testx%,sequence=12345603,abc=test3,updatetime=2020-03-02 16:34:19]
[INFO] [Bee] update SQL: update orders set remark=? where id=?   [values]: test(String),100003(Long)
[INFO] [Bee] update SQL:  ( ExecutableSql )
update orders set remark='test' where id=100003 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL: select distinct(userid) from orders   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select distinct(userid) from orders
[INFO] [Bee]  | <--  select rows: 9
[INFO] [Bee] select SQL: select distinct(userid) as uniqueUserid from orders where name is not null   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select distinct(userid) as uniqueUserid from orders where name is not null
[INFO] [Bee]  | <--  select rows: 3
[INFO] Bee   
[INFO] bee   
[INFO] client   
[INFO] [Bee] select fun SQL : select count(*) from orders where id=?   [values]: 1005(Long)
[INFO] [Bee] select fun SQL :  ( ExecutableSql )
select count(*) from orders where id=1005 ;
[INFO] [Bee] insert SQL: insert into orders(id,name,remark) values (?,?,?)   [values]: 78088901755232(Long),update(T oldEntity,T newEntity)(String),update(T oldEntity,T newEntity)(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,name,remark) values (78088901755232,'update(T oldEntity,T newEntity)','update(T oldEntity,T newEntity)') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] update(T oldEntity, T newEntity) with MapSuid, 
[INFO] [Bee] In MapSuid, update SQL: update orders set remark=? where name=? and remark=?   [values]: by update with : update(T oldEntity,T newEntity)(String),update(T oldEntity,T newEntity)(String),update(T oldEntity,T newEntity)(String)
[INFO] [Bee] In MapSuid, update SQL:  ( ExecutableSql )
update orders set remark='by update with : update(T oldEntity,T newEntity)' where name='update(T oldEntity,T newEntity)' and remark='update(T oldEntity,T newEntity)' ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] delete SQL: delete from orders where remark=?   [values]: by update with : update(T oldEntity,T newEntity)(String)
[INFO] [Bee] delete SQL:  ( ExecutableSql )
delete from orders where remark='by update with : update(T oldEntity,T newEntity)' ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL(selectFields) : select name, total from orders where userid=?   [values]: bee(String)
[INFO] [Bee] select SQL(selectFields) :  ( ExecutableSql )
select name, total from orders where userid='bee' ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 2
[WARN] in method selectById,id is null! 
[INFO] [Bee] insert SQL: insert into orders(id,userid) values (?,?)   [values]: 78088901755233(Long),bee(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,userid) values (78088901755233,'bee') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [bee-exam] ====================SuidRichExam.test======end.

[INFO] [bee-exam] ====================UpdateByExam.test======start:
[INFO] [Bee] update SQL(whereFields) :update orders set total=? , remark=? where userid=?   [values]: 100(java.math.BigDecimal),new2(String),bee(String)
[INFO] [Bee] update SQL(whereFields) : ( ExecutableSql )
update orders set total=100 , remark='new2' where userid='bee' ;
[INFO] [Bee]  | <--  Affected rows: 3
[INFO] update number:  3
[INFO] IncludeType.INCLUDE_BOTH
[INFO] [Bee] update SQL(whereFields) :update orders set total=? , createtime =null , remark=? , sequence=? , abc =null , updatetime =null where userid=? and name is null   [values]: 100(java.math.BigDecimal),new2(String),(String),bee(String)
[INFO] [Bee] update SQL(whereFields) : ( ExecutableSql )
update orders set total=100 , createtime =null , remark='new2' , sequence='' , abc =null , updatetime =null where userid='bee' and name is null ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] update number:  1
[INFO] IncludeType.INCLUDE_NULL
[INFO] [Bee] update SQL(whereFields) :update orders set name =null , total=? , createtime =null , remark=? , abc =null , updatetime =null where userid=?   [values]: 100(java.math.BigDecimal),new2(String),bee(String)
[INFO] [Bee] update SQL(whereFields) : ( ExecutableSql )
update orders set name =null , total=100 , createtime =null , remark='new2' , abc =null , updatetime =null where userid='bee' ;
[INFO] [Bee]  | <--  Affected rows: 3
[INFO] IncludeType.INCLUDE_EMPTY
[INFO] [Bee] update SQL(whereFields) :update orders set total=? , remark=? , sequence=? where userid=?   [values]: 100(java.math.BigDecimal),new2(String),(String),bee(String)
[INFO] [Bee] update SQL(whereFields) : ( ExecutableSql )
update orders set total=100 , remark='new2' , sequence='' where userid='bee' ;
[INFO] [Bee]  | <--  Affected rows: 3
[INFO] [bee-exam] ====================UpdateByExam.test======end.

[INFO] [bee-exam] ====================PreparedSqlExam.test======start:
[INFO] getCustomSql:  select * from orders where userid=?
[INFO] [Bee] PreparedSql select SQL: select * from orders where userid=? limit ?,?   [values]: bee(String),1(Integer),3(Integer)
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select * from orders where userid='bee' limit 1,3 ;
[INFO] [Bee]  | <--  select rows: 2
[INFO] [Bee] PreparedSql select SQL: select * from orders where userid=? limit ?,?   [values]: bee(String),1(Integer),3(Integer)
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select * from orders where userid='bee' limit 1,3 ;
[INFO] [Bee]  | <--  select rows: 2
[INFO] [Bee] PreparedSql select SQL: select * from orders where userid=? limit ?,?   [values]: bee(String),1(Integer),3(Integer)
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select * from orders where userid='bee' limit 1,3 ;
[INFO] [Bee]  | <--  select rows: 2
[INFO] [Bee] PreparedSql selectSomeField SQL: select * from orders where userid=? limit ?,?   [values]: bee(String),2(Integer),3(Integer)
[INFO] [Bee] PreparedSql selectSomeField SQL:  ( ExecutableSql )
select * from orders where userid='bee' limit 2,3 ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=78088901755233,userid=bee,name=null,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] [Bee] PreparedSql selectJson SQL: select * from orders where userid=? limit ?,?   [values]: bee(String),1(Integer),3(Integer)
[INFO] [Bee] PreparedSql selectJson SQL:  ( ExecutableSql )
select * from orders where userid='bee' limit 1,3 ;
[INFO] [{"id":"100003","userid":"bee","name":null,"total":100.000000,"createtime":null,"remark":"new2","sequence":"","abc":null,"updatetime":null},{"id":"78088901755233","userid":"bee","name":null,"total":100.000000,"createtime":null,"remark":"new2","sequence":"","abc":null,"updatetime":null}]
[INFO] getCustomSql:  select * from orders where userid=#{userid}
[INFO] [Bee] PreparedSql selectSomeField SQL: select * from orders where userid=? limit ?,?   [values]: bee(String),1(Integer),3(Integer)
[INFO] [Bee] PreparedSql selectSomeField SQL:  ( ExecutableSql )
select * from orders where userid='bee' limit 1,3 ;
[INFO] [Bee]  | <--  select rows: 2
[INFO] [Bee] PreparedSql selectSomeField SQL: select * from orders where userid=? limit ?,?   [values]: bee(String),1(Integer),3(Integer)
[INFO] [Bee] PreparedSql selectSomeField SQL:  ( ExecutableSql )
select * from orders where userid='bee' limit 1,3 ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 2
[INFO] Orders[id=100003,userid=bee,name=null,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=78088901755233,userid=bee,name=null,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] [Bee] PreparedSql selectJson SQL: select * from orders where userid=? limit ?,?   [values]: bee(String),1(Integer),3(Integer)
[INFO] [Bee] PreparedSql selectJson SQL:  ( ExecutableSql )
select * from orders where userid='bee' limit 1,3 ;
[INFO] [{"id":"100003","userid":"bee","name":null,"total":100.000000,"createtime":null,"remark":"new2","sequence":"","abc":null,"updatetime":null},{"id":"78088901755233","userid":"bee","name":null,"total":100.000000,"createtime":null,"remark":"new2","sequence":"","abc":null,"updatetime":null}]
[INFO] getCustomSql:  select * from orders where name like #{name%}
[INFO] [Bee] PreparedSql select SQL: select * from orders where name like ? limit ?,?   [values]: Bee%(String),1(Integer),3(Integer)
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select * from orders where name like 'Bee%' limit 1,3 ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] PreparedSql select SQL: select * from orders where name like ? limit ?,?   [values]: %Bee(String),1(Integer),3(Integer)
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select * from orders where name like '%Bee' limit 1,3 ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] PreparedSql select SQL: select * from orders where name like ? limit ?,?   [values]: %Bee%(String),1(Integer),3(Integer)
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select * from orders where name like '%Bee%' limit 1,3 ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] getCustomSql:  select * from orders
[INFO] [Bee] PreparedSql select SQL: select * from orders limit ?,?   [values]: 1(Integer),3(Integer)
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select * from orders limit 1,3 ;
[INFO] [Bee]  | <--  select rows: 3
[INFO] Orders[id=1005,userid=client02,name=null,total=20.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1006,userid=client03,name=null,total=23.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1007,userid=client01,name=null,total=91.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] PreparedSql select SQL: select * from orders   [values]: 
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select * from orders
[INFO] [Bee]  | <--  select rows: 20
[INFO] [Bee] PreparedSql select SQL: select * from orders limit ?,?   [values]: 1(Integer),3(Integer)
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select * from orders limit 1,3 ;
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] PreparedSql select SQL: select orders.userid,test_user.name,orders.total,orders.createtime from orders,test_user where orders.userid=test_user.username and orders.sequence=?   [values]: 123456(String)
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select orders.userid,test_user.name,orders.total,orders.createtime from orders,test_user where orders.userid=test_user.username and orders.sequence='123456' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] PreparedSql modify SQL: delete from orders where id=121 or id=122 or id=123   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
delete from orders where id=121 or id=122 or id=123
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee]  insert[] SQL : INSERT INTO orders(id,name,userid) VALUES (?,?,?), (?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 121(Long),bee(String),1001(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index0] )
INSERT INTO orders(id,name,userid) VALUES (121,'bee','1001') ; ;
[INFO] [Bee] --> index:1 ,  [values]: 122(Long),bee(String),1001(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index1] )
INSERT INTO orders(id,name,userid) VALUES (122,'bee','1001') ; ;
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 2
[INFO] [Bee]  insert[] SQL : INSERT INTO orders(id,name,userid) VALUES (?,?,?)
[INFO] [Bee] --> index:2 ,  [values]: 123(Long),bee(String),1001(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index2] )
INSERT INTO orders(id,name,userid) VALUES (123,'bee','1001') ; ;
[INFO] [Bee]  | <-- [Batch:1] Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: delete from orders where id=121 or id=122 or id=123   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
delete from orders where id=121 or id=122 or id=123
[INFO] [Bee]  | <--  Affected rows: 3
[INFO] [Bee]  insert[] SQL : INSERT INTO orders(id,name,userid) VALUES (?,?,?), (?,?,?), (?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 121(Long),bee(String),1001(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index0] )
INSERT INTO orders(id,name,userid) VALUES (121,'bee','1001') ; ;
[INFO] [Bee] --> index:1 ,  [values]: 122(Long),bee(String),1001(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index1] )
INSERT INTO orders(id,name,userid) VALUES (122,'bee','1001') ; ;
[INFO] [Bee] --> index:2 ,  [values]: 123(Long),bee(String),1001(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index2] )
INSERT INTO orders(id,name,userid) VALUES (123,'bee','1001') ; ;
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 3
[INFO] [bee-exam] ====================PreparedSqlExam.test======end.

[INFO] [bee-exam] ====================TransactionExam.test======start:
[INFO] [Bee] JdbcTransaction begin. 
[INFO] [Bee] insert SQL: insert into test_user(id,password,username) values (?,?,?)   [values]: 78088914337800(Long),bee-user(String),testuser(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into test_user(id,password,username) values (78088914337800,'bee-user','testuser') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,remark) values (?,?,?,?,?)   [values]: 78088901755234(Long),bee(String),Bee(ORM Framework)(String),91.99(java.math.BigDecimal),test transaction(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,userid,name,total,remark) values (78088901755234,'bee','Bee(ORM Framework)',91.99,'test transaction') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] JdbcTransaction commit. 
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=? and remark=?   [values]: bee(String),Bee(ORM Framework)(String),91.99(java.math.BigDecimal),test transaction(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee' and name='Bee(ORM Framework)' and total=91.99 and remark='test transaction' ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=78088901755234,userid=bee,name=Bee(ORM Framework),total=91.990000,createtime=null,remark=test transaction,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] JdbcTransaction begin. 
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and id=? for update    [values]: bee(String),100003(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee' and id=100003 for update  ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100003,userid=bee,name=null,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] ---------------locking the record!
[INFO] doing...
[INFO] [Bee] JdbcTransaction commit. 
[INFO] ---------------release the record!
[INFO] [Bee] select SQL(selectFields) : select name, total from orders where userid=?   [values]: bee(String)
[INFO] [Bee] select SQL(selectFields) :  ( ExecutableSql )
select name, total from orders where userid='bee' ;
[INFO] [Bee]  | <--  select rows: 4
[INFO] [bee-exam] ====================TransactionExam.test======end.

[INFO] [bee-exam] ====================ConditionExam.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like ? order by userid asc limit ?,?   [values]: bee%(String),0(Integer),100(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like 'bee%' order by userid asc limit 0,100 ;
[INFO] [Bee]  | <--  select rows: 4
[INFO] Orders[id=78088901755233,userid=bee,name=null,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=78088901755234,userid=bee,name=Bee(ORM Framework),total=91.990000,createtime=null,remark=test transaction,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=100002,userid=bee,name=null,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=100003,userid=bee,name=null,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] [Bee] select SQL: select userid, total, createtime from orders where userid like ? order by userid asc limit ?,?   [values]: bee%(String),0(Integer),100(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select userid, total, createtime from orders where userid like 'bee%' order by userid asc limit 0,100 ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 4
[INFO] Orders[id=null,userid=bee,name=null,total=100.000000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=null,userid=bee,name=null,total=91.990000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=null,userid=bee,name=null,total=100.000000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=null,userid=bee,name=null,total=100.000000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] [bee-exam] ====================ConditionExam.test======end.

[INFO] [bee-exam] ====================MoreTableExam.test======start:
[WARN] Auto table: parameter  ${month} in orders${month} still has not value, will be ignore it!
[INFO] [Bee] select SQL: select orders.id,orders.userid,orders.name,orders.total,orders.createtime,orders.remark,orders.sequence,orders.abc,orders.updatetime,test_user.id,test_user.email,test_user.last_name,test_user.name,test_user.password,test_user.username,test_user.createtime from orders,test_user where orders.userid=test_user.username and orders.name=test_user.name and orders.userid=? and orders.name=? and test_user.name=? limit ?,?   [values]: bee(String),Bee(String),Bee(String),2(Integer),10(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select orders.id,orders.userid,orders.name,orders.total,orders.createtime,orders.remark,orders.sequence,orders.abc,orders.updatetime,test_user.id,test_user.email,test_user.last_name,test_user.name,test_user.password,test_user.username,test_user.createtime from orders,test_user where orders.userid=test_user.username and orders.name=test_user.name and orders.userid='bee' and orders.name='Bee' and test_user.name='Bee' limit 2,10 ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] size of records:0
[WARN] Auto table: parameter  ${month} in orders${month} still has not value, will be ignore it!
[INFO] [Bee] select SQL: select orders.id,orders.userid,orders.name,orders.total,orders.createtime,orders.remark,orders.sequence,orders.abc,orders.updatetime,test_user.id,test_user.email,test_user.last_name,test_user.name,test_user.password,test_user.username,test_user.createtime from orders,test_user where orders.userid=test_user.username and orders.name=test_user.name and orders.userid=? and orders.name=? and test_user.name=? and orders.id>=? limit ?,?   [values]: bee(String),Bee(String),Bee(String),1001(Integer),0(Integer),5(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select orders.id,orders.userid,orders.name,orders.total,orders.createtime,orders.remark,orders.sequence,orders.abc,orders.updatetime,test_user.id,test_user.email,test_user.last_name,test_user.name,test_user.password,test_user.username,test_user.createtime from orders,test_user where orders.userid=test_user.username and orders.name=test_user.name and orders.userid='bee' and orders.name='Bee' and test_user.name='Bee' and orders.id>=1001 limit 0,5 ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] size of records:0
[WARN] Auto table: parameter  ${month} in orders${month} still has not value, will be ignore it!
[INFO] [Bee] update SQL(updateFields) :update orders set name=? where userid=? and name is null   [values]: Bee(String),bee(String)
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update orders set name='Bee' where userid='bee' and name is null ;
[INFO] [Bee]  | <--  Affected rows: 3
[WARN] Auto table: parameter  ${month} in orders${month} still has not value, will be ignore it!
[INFO] [Bee] select SQL: select orders.id, test_user.id,orders.userid,orders.total, orders.createtime from orders,test_user where orders.userid=test_user.username and orders.name=test_user.name and orders.userid=? and orders.name=? and test_user.name=? and orders.id>=? limit ?,?   [values]: bee(String),Bee(String),Bee(String),1001(Integer),0(Integer),5(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select orders.id, test_user.id,orders.userid,orders.total, orders.createtime from orders,test_user where orders.userid=test_user.username and orders.name=test_user.name and orders.userid='bee' and orders.name='Bee' and test_user.name='Bee' and orders.id>=1001 limit 0,5 ;
[INFO] [Bee]  | <--  select rows: 3
[INFO] size of records:3
[INFO] Orders[id=100002,userid=bee,name=null,total=100.000000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null,TestUser[id=800001,email=null,lastName=null,name=null,password=null,username=null,createtime=null]]
[INFO] Orders[id=100003,userid=bee,name=null,total=100.000000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null,TestUser[id=800001,email=null,lastName=null,name=null,password=null,username=null,createtime=null]]
[INFO] Orders[id=78088901755233,userid=bee,name=null,total=100.000000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null,TestUser[id=800001,email=null,lastName=null,name=null,password=null,username=null,createtime=null]]
[INFO] [Bee] select SQL: select assignexam.id,assignexam.classno,assignexam.term,assignexam.examno,assignexam.subjectno,assignexam.subject,assignexam.creater,assignexam.createtime,assignexam.updater,assignexam.updatetime,assignexam.remark,assignexam.ext1,assignexam.status,assignexam.schoolno,assigncourse.id,assigncourse.classno,assigncourse.term,assigncourse.teacherno,assigncourse.name,assigncourse.subjectno,assigncourse.subject,assigncourse.creater,assigncourse.createtime,assigncourse.updater,assigncourse.updatetime,assigncourse.remark,assigncourse.status,assigncourse.schoolno from assignexam,assigncourse where assignexam.classno=assigncourse.classno and assignexam.term=assigncourse.term and assignexam.subjectno=assigncourse.subjectno and assignexam.status=? and assigncourse.status=?   [values]: 1(String),1(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select assignexam.id,assignexam.classno,assignexam.term,assignexam.examno,assignexam.subjectno,assignexam.subject,assignexam.creater,assignexam.createtime,assignexam.updater,assignexam.updatetime,assignexam.remark,assignexam.ext1,assignexam.status,assignexam.schoolno,assigncourse.id,assigncourse.classno,assigncourse.term,assigncourse.teacherno,assigncourse.name,assigncourse.subjectno,assigncourse.subject,assigncourse.creater,assigncourse.createtime,assigncourse.updater,assigncourse.updatetime,assigncourse.remark,assigncourse.status,assigncourse.schoolno from assignexam,assigncourse where assignexam.classno=assigncourse.classno and assignexam.term=assigncourse.term and assignexam.subjectno=assigncourse.subjectno and assignexam.status='1' and assigncourse.status='1' ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] delete SQL: delete from assigncourse where id=?   [values]: 344343344343(Long)
[INFO] [Bee] delete SQL:  ( ExecutableSql )
delete from assigncourse where id=344343344343 ;
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] select SQL: select assignexam.id,assignexam.classno,assignexam.term,assignexam.examno,assignexam.subjectno,assignexam.subject,assignexam.creater,assignexam.createtime,assignexam.updater,assignexam.updatetime,assignexam.remark,assignexam.ext1,assignexam.status,assignexam.schoolno,assigncourse.id,assigncourse.classno,assigncourse.term,assigncourse.teacherno,assigncourse.name,assigncourse.subjectno,assigncourse.subject,assigncourse.creater,assigncourse.createtime,assigncourse.updater,assigncourse.updatetime,assigncourse.remark,assigncourse.status,assigncourse.schoolno from assignexam,assigncourse where assignexam.classno=assigncourse.classno and assignexam.term=assigncourse.term and assignexam.subjectno=assigncourse.subjectno and assignexam.classno=? and assignexam.status=? and assigncourse.status=?   [values]: aaa(String),1(String),1(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select assignexam.id,assignexam.classno,assignexam.term,assignexam.examno,assignexam.subjectno,assignexam.subject,assignexam.creater,assignexam.createtime,assignexam.updater,assignexam.updatetime,assignexam.remark,assignexam.ext1,assignexam.status,assignexam.schoolno,assigncourse.id,assigncourse.classno,assigncourse.term,assigncourse.teacherno,assigncourse.name,assigncourse.subjectno,assigncourse.subject,assigncourse.creater,assigncourse.createtime,assigncourse.updater,assigncourse.updatetime,assigncourse.remark,assigncourse.status,assigncourse.schoolno from assignexam,assigncourse where assignexam.classno=assigncourse.classno and assignexam.term=assigncourse.term and assignexam.subjectno=assigncourse.subjectno and assignexam.classno='aaa' and assignexam.status='1' and assigncourse.status='1' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select orders_202007.id,orders_202007.userid,orders_202007.name,orders_202007.total,orders_202007.createtime,orders_202007.remark,orders_202007.sequence,orders_202007.abc,orders_202007.updatetime,test_user.id,test_user.email,test_user.last_name,test_user.name,test_user.password,test_user.username,test_user.createtime from orders_202007,test_user where orders_202007.userid=test_user.username and orders_202007.name=test_user.name and orders_202007.userid=? and orders_202007.name=? and test_user.name=? limit ?,?   [values]: bee(String),Bee(String),Bee(String),0(Integer),10(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select orders_202007.id,orders_202007.userid,orders_202007.name,orders_202007.total,orders_202007.createtime,orders_202007.remark,orders_202007.sequence,orders_202007.abc,orders_202007.updatetime,test_user.id,test_user.email,test_user.last_name,test_user.name,test_user.password,test_user.username,test_user.createtime from orders_202007,test_user where orders_202007.userid=test_user.username and orders_202007.name=test_user.name and orders_202007.userid='bee' and orders_202007.name='Bee' and test_user.name='Bee' limit 0,10 ;
[INFO] [Bee]  | <--  select rows: 2
[INFO] Orders[id=100002,userid=bee,name=Bee,total=96.010000,createtime=2020-03-02 11:29:28,remark=test%a,sequence=12345602,abc=test2,updatetime=2020-03-02 16:34:19,TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=null]]
[INFO] Orders[id=100003,userid=bee,name=Bee,total=97.010000,createtime=2020-03-02 11:29:28,remark=testx%,sequence=12345603,abc=test3,updatetime=2020-03-02 16:34:19,TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=null]]
[WARN] Auto table: parameter  ${month} in orders${month} still has not value, will be ignore it!
[INFO] [Bee] select SQL: select orders.id,orders.userid,orders.name,orders.total,orders.createtime,orders.remark,orders.sequence,orders.abc,orders.updatetime,test_user.id,test_user.email,test_user.last_name,test_user.name,test_user.password,test_user.username,test_user.createtime from orders,test_user where orders.userid=test_user.username and orders.name=test_user.name and orders.userid=? and orders.name=? and test_user.name=? limit ?,?   [values]: bee(String),Bee(String),Bee(String),0(Integer),10(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select orders.id,orders.userid,orders.name,orders.total,orders.createtime,orders.remark,orders.sequence,orders.abc,orders.updatetime,test_user.id,test_user.email,test_user.last_name,test_user.name,test_user.password,test_user.username,test_user.createtime from orders,test_user where orders.userid=test_user.username and orders.name=test_user.name and orders.userid='bee' and orders.name='Bee' and test_user.name='Bee' limit 0,10 ;
[INFO] [Bee]  | <--  select rows: 3
[INFO] Orders[id=100002,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null,TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=null]]
[INFO] Orders[id=100003,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null,TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=null]]
[INFO] Orders[id=78088901755233,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null,TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=null]]
[INFO] [Bee] select SQL: select distinct(assignexam.id) from assignexam,assigncourse where assignexam.classno=assigncourse.classno and assignexam.term=assigncourse.term and assignexam.subjectno=assigncourse.subjectno   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select distinct(assignexam.id) from assignexam,assigncourse where assignexam.classno=assigncourse.classno and assignexam.term=assigncourse.term and assignexam.subjectno=assigncourse.subjectno
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select max(assignexam.id) from assignexam,assigncourse where assignexam.classno=assigncourse.classno and assignexam.term=assigncourse.term and assignexam.subjectno=assigncourse.subjectno   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select max(assignexam.id) from assignexam,assigncourse where assignexam.classno=assigncourse.classno and assignexam.term=assigncourse.term and assignexam.subjectno=assigncourse.subjectno
[INFO] [Bee]  | <--  select rows: 1
[INFO] [bee-exam] ====================MoreTableExam.test======end.

[INFO] [bee-exam] ====================UseJson.test======start:
[INFO] [Bee] selectJson SQL: select id,email,last_name,name,password,username,createtime from test_user   [values]: 
[INFO] [Bee] selectJson SQL:  ( ExecutableSql )
select id,email,last_name,name,password,username,createtime from test_user
[INFO] selectJson(new TestUser()):
[INFO] [{"id":"800001","email":"beeUser@163.com","lastName":null,"name":"Bee","password":"bee","username":"bee","createtime":null},{"id":"800002","email":"honey@163.com","lastName":"cn","name":"Honey","password":"honey","username":"honey","createtime":null},{"id":"78088914337800","email":null,"lastName":null,"name":null,"password":"bee-user","username":"testuser","createtime":null}]
[INFO] 将直接查询的json转成对象:
[INFO] TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=null]
[INFO] TestUser[id=800002,email=honey@163.com,lastName=cn,name=Honey,password=honey,username=honey,createtime=null]
[INFO] TestUser[id=78088914337800,email=null,lastName=null,name=null,password=bee-user,username=testuser,createtime=null]
[INFO] [Bee] select SQL: select id,email,last_name,name,password,username,createtime from test_user   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,email,last_name,name,password,username,createtime from test_user
[INFO] [Bee]  | <--  select rows: 3
[INFO] TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=null]
[INFO] TestUser[id=800002,email=honey@163.com,lastName=cn,name=Honey,password=honey,username=honey,createtime=null]
[INFO] TestUser[id=78088914337800,email=null,lastName=null,name=null,password=bee-user,username=testuser,createtime=null]
[INFO] [Bee] selectJson SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders   [values]: 
[INFO] [Bee] selectJson SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] selectJson(new Orders()):
[INFO] [{"id":"121","userid":"1001","name":"bee","total":null,"createtime":null,"remark":null,"sequence":null,"abc":null,"updatetime":null},{"id":"122","userid":"1001","name":"bee","total":null,"createtime":null,"remark":null,"sequence":null,"abc":null,"updatetime":null},{"id":"123","userid":"1001","name":"bee","total":null,"createtime":null,"remark":null,"sequence":null,"abc":null,"updatetime":null},{"id":"1004","userid":"client01","name":null,"total":91.000000,"createtime":null,"remark":"testOneTime","sequence":null,"abc":null,"updatetime":null},{"id":"1005","userid":"client02","name":null,"total":20.000000,"createtime":null,"remark":"testOneTime","sequence":null,"abc":null,"updatetime":null},{"id":"1006","userid":"client03","name":null,"total":23.000000,"createtime":null,"remark":"testOneTime","sequence":null,"abc":null,"updatetime":null},{"id":"1007","userid":"client01","name":null,"total":91.000000,"createtime":null,"remark":"testOneTime","sequence":null,"abc":null,"updatetime":null},{"id":"1008","userid":"client02","name":null,"total":20.000000,"createtime":null,"remark":"testOneTime","sequence":null,"abc":null,"updatetime":null},{"id":"1009","userid":"client03","name":null,"total":23.000000,"createtime":null,"remark":"testOneTime","sequence":null,"abc":null,"updatetime":null},{"id":"10010","userid":"client01","name":null,"total":91.000000,"createtime":null,"remark":"testOneTime","sequence":null,"abc":null,"updatetime":null},{"id":"10011","userid":"client02","name":null,"total":20.000000,"createtime":null,"remark":"testOneTime","sequence":null,"abc":null,"updatetime":null},{"id":"10012","userid":"client03","name":null,"total":23.000000,"createtime":null,"remark":"testOneTime","sequence":null,"abc":null,"updatetime":null},{"id":"100001","userid":"Bee","name":"Bee(ORM Framework)","total":95.010000,"createtime":"2020-03-02 11:29:28","remark":"test","sequence":"12345601","abc":"test1","updatetime":null},{"id":"100002","userid":"bee","name":"Bee","total":100.000000,"createtime":null,"remark":"new2","sequence":"","abc":null,"updatetime":null},{"id":"100003","userid":"bee","name":"Bee","total":100.000000,"createtime":null,"remark":"new2","sequence":"","abc":null,"updatetime":null},{"id":"100018","userid":"client18","name":null,"total":18.180000,"createtime":null,"remark":"test insert and delete","sequence":null,"abc":null,"updatetime":null},{"id":"100019","userid":"client19","name":null,"total":19.190000,"createtime":null,"remark":"test insert and delete","sequence":null,"abc":null,"updatetime":null},{"id":"100020","userid":"client20","name":null,"total":20.200000,"createtime":null,"remark":"test insert and delete","sequence":null,"abc":null,"updatetime":null},{"id":"78088901755210","userid":"client","name":"client","total":93.990000,"createtime":null,"remark":"testOneTime","sequence":null,"abc":null,"updatetime":null},{"id":"78088901755211","userid":"client","name":"client","total":93.990000,"createtime":null,"remark":"testOneTime","sequence":null,"abc":null,"updatetime":null},{"id":"78088901755212","userid":"client","name":"client","total":93.990000,"createtime":null,"remark":"testOneTime","sequence":"","abc":null,"updatetime":null},{"id":"78088901755213","userid":"client","name":"client","total":93.990000,"createtime":null,"remark":"testOneTime","sequence":"","abc":null,"updatetime":null},{"id":"78088901755233","userid":"bee","name":"Bee","total":100.000000,"createtime":null,"remark":"new2","sequence":"","abc":null,"updatetime":null},{"id":"78088901755234","userid":"bee","name":"Bee(ORM Framework)","total":91.990000,"createtime":null,"remark":"test transaction","sequence":null,"abc":null,"updatetime":null}]
[INFO] 将直接查询的json转成对象:
[INFO] Orders[id=121,userid=1001,name=bee,total=null,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=122,userid=1001,name=bee,total=null,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=123,userid=1001,name=bee,total=null,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1004,userid=client01,name=null,total=91.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1005,userid=client02,name=null,total=20.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1006,userid=client03,name=null,total=23.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1007,userid=client01,name=null,total=91.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1008,userid=client02,name=null,total=20.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1009,userid=client03,name=null,total=23.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=10010,userid=client01,name=null,total=91.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=10011,userid=client02,name=null,total=20.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=10012,userid=client03,name=null,total=23.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.010000,createtime=2020-03-02 11:29:28,remark=test,sequence=12345601,abc=test1,updatetime=null]
[INFO] Orders[id=100002,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=100003,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=100018,userid=client18,name=null,total=18.180000,createtime=null,remark=test insert and delete,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=100019,userid=client19,name=null,total=19.190000,createtime=null,remark=test insert and delete,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=100020,userid=client20,name=null,total=20.200000,createtime=null,remark=test insert and delete,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=78088901755210,userid=client,name=client,total=93.990000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=78088901755211,userid=client,name=client,total=93.990000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=78088901755212,userid=client,name=client,total=93.990000,createtime=null,remark=testOneTime,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=78088901755213,userid=client,name=client,total=93.990000,createtime=null,remark=testOneTime,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=78088901755233,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=78088901755234,userid=bee,name=Bee(ORM Framework),total=91.990000,createtime=null,remark=test transaction,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee]  | <--  select rows: 24
[INFO] Orders[id=121,userid=1001,name=bee,total=null,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=122,userid=1001,name=bee,total=null,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=123,userid=1001,name=bee,total=null,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1004,userid=client01,name=null,total=91.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1005,userid=client02,name=null,total=20.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1006,userid=client03,name=null,total=23.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1007,userid=client01,name=null,total=91.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1008,userid=client02,name=null,total=20.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1009,userid=client03,name=null,total=23.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=10010,userid=client01,name=null,total=91.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=10011,userid=client02,name=null,total=20.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=10012,userid=client03,name=null,total=23.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.010000,createtime=2020-03-02 11:29:28,remark=test,sequence=12345601,abc=test1,updatetime=null]
[INFO] Orders[id=100002,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=100003,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=100018,userid=client18,name=null,total=18.180000,createtime=null,remark=test insert and delete,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=100019,userid=client19,name=null,total=19.190000,createtime=null,remark=test insert and delete,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=100020,userid=client20,name=null,total=20.200000,createtime=null,remark=test insert and delete,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=78088901755210,userid=client,name=client,total=93.990000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=78088901755211,userid=client,name=client,total=93.990000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=78088901755212,userid=client,name=client,total=93.990000,createtime=null,remark=testOneTime,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=78088901755213,userid=client,name=client,total=93.990000,createtime=null,remark=testOneTime,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=78088901755233,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=78088901755234,userid=bee,name=Bee(ORM Framework),total=91.990000,createtime=null,remark=test transaction,sequence=null,abc=null,updatetime=null]
[INFO] [bee-exam] ====================UseJson.test======end.

[INFO] [bee-exam] ====================BugTest.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 24
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 24
[INFO] [Bee] selectJson SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders   [values]: 
[INFO] [Bee] selectJson SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 10010(Long),client01(String),null(String),91(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index0] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (10010,'client01',null,91,null,'testOneTime',null,null,null) ; ;
[INFO] [Bee] --> index:1 ,  [values]: 10011(Long),client02(String),null(String),20(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index1] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (10011,'client02',null,20,null,'testOneTime',null,null,null) ; ;
[WARN] Duplicate entry '10010' for key 'PRIMARY'
[INFO] 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 24
[INFO] [Bee] PreparedSql select SQL: select * from orders   [values]: 
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select * from orders
[INFO] [Bee]  | <--  select rows: 24
[INFO] [Bee] PreparedSql select SQL: select * from orders
[INFO] [Bee]  | <--  select rows: 24
[WARN] Use Condition's set method(s) in SELECT type, but it just effect in UPDATE type! Involved field(s): [test]
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark like ?   [values]: test\%%(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark like 'test\%%' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] deleteById SQL: delete from orders where id=?   [values]: 100021(Integer)
[INFO] [Bee] deleteById SQL:  ( ExecutableSql )
delete from orders where id=100021 ;
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] deleteById SQL: delete from orders where id=?   [values]: 100022(Long)
[INFO] [Bee] deleteById SQL:  ( ExecutableSql )
delete from orders where id=100022 ;
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] deleteById SQL: delete from orders where id=?   [values]: 100023(Long)
[INFO] [Bee] deleteById SQL:  ( ExecutableSql )
delete from orders where id=100023 ;
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] selectOrderBy SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? order by id asc,name desc   [values]: testOneTime(String)
[INFO] [Bee] selectOrderBy SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark='testOneTime' order by id asc,name desc ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 13
[INFO] Orders[id=1004,userid=client01,name=null,total=91.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1005,userid=client02,name=null,total=20.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1006,userid=client03,name=null,total=23.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1007,userid=client01,name=null,total=91.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1008,userid=client02,name=null,total=20.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1009,userid=client03,name=null,total=23.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=10010,userid=client01,name=null,total=91.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=10011,userid=client02,name=null,total=20.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=10012,userid=client03,name=null,total=23.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=78088901755210,userid=client,name=client,total=93.990000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=78088901755211,userid=client,name=client,total=93.990000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=78088901755212,userid=client,name=client,total=93.990000,createtime=null,remark=testOneTime,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=78088901755213,userid=client,name=client,total=93.990000,createtime=null,remark=testOneTime,sequence=,abc=null,updatetime=null]
[INFO] [Bee] selectById SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 1012(Integer)
[INFO] [Bee] selectById SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=1012 ;
[INFO] [Bee]  | <--  select rows: 0
[WARN] in method selectById,id is null! 
[INFO] [Bee] update SQL(condition) :update orders set remark=null where id=? and Total>=?   [values]: 1004(Long),90(Integer)
[INFO] [Bee] update SQL(condition) : ( ExecutableSql )
update orders set remark=null where id=1004 and Total>=90 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] update SQL(condition) :update orders set remark=null where id=? and remark=? and Total>=?   [values]: 1004(Long),change Remark(String),90(Integer)
[INFO] [Bee] update SQL(condition) : ( ExecutableSql )
update orders set remark=null where id=1004 and remark='change Remark' and Total>=90 ;
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] update SQL(updateFields) :update orders set remark=null where id=? and remark=? and Total>=?   [values]: 1004(Long),change Remark(String),90(Integer)
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update orders set remark=null where id=1004 and remark='change Remark' and Total>=90 ;
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] update SQL(updateFields) :update orders set remark=null where id=? and Total>=?   [values]: 1004(Long),90(Integer)
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update orders set remark=null where id=1004 and Total>=90 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] update SQL(updateFields) :update orders set remark=null, total=null where id=? and remark=? and Total>=?   [values]: 1004(Long),new2 remark(String),90(Integer)
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update orders set remark=null, total=null where id=1004 and remark='new2 remark' and Total>=90 ;
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] update SQL(updateFields) :update orders set remark=null where id=?   [values]: 1004(Long)
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update orders set remark=null where id=1004 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] update SQL(whereFields) :update orders set remark=? where id=?   [values]: change Remark(String),1004(Long)
[INFO] [Bee] update SQL(whereFields) : ( ExecutableSql )
update orders set remark='change Remark' where id=1004 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] update SQL(whereFields) :update orders set remark=null where Total>=? and remark>=?   [values]: 90(Integer),old remark(String)
[INFO] [Bee] update SQL(whereFields) : ( ExecutableSql )
update orders set remark=null where Total>=90 and remark>='old remark' ;
[INFO] [Bee]  | <--  Affected rows: 8
[INFO] ------------------------------V1.11---------
[INFO] [bee-exam] ====================BugTest.test======end.

[INFO] [bee-exam] ====================UpdateSetExam.test======start:
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: test(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag='test' ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] update SQL(condition) :update leaf_alloc set max_id=max_id+step,version=version+? where id=? and biz_tag=? and max_id=? and version=?   [values]: 1(Integer),456537470402562(Long),test(String),100(Long),1(Integer)
[INFO] [Bee] update SQL(condition) : ( ExecutableSql )
update leaf_alloc set max_id=max_id+step,version=version+1 where id=456537470402562 and biz_tag='test' and max_id=100 and version=1 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] test setMultiply , update num: 1
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: test(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag='test' ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] update SQL(condition) :update leaf_alloc set max_id=?,version=version+? where id=? and biz_tag=? and max_id=? and version=?   [values]: 10003(Integer),1(Integer),456537470402562(Long),test(String),200(Long),2(Integer)
[INFO] [Bee] update SQL(condition) : ( ExecutableSql )
update leaf_alloc set max_id=10003,version=version+1 where id=456537470402562 and biz_tag='test' and max_id=200 and version=2 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] test setMultiply , update num: 1
[INFO] [bee-exam] ====================UpdateSetExam.test======end.

[INFO] [bee-exam] ====================InsertTest.test======start:
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,remark) values (?,?,?,?,?)   [values]: 78088901755238(Long),client(String),client(String),93.99(java.math.BigDecimal),testOneTime(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,userid,name,total,remark) values (78088901755238,'client','client',93.99,'testOneTime') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] 1
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,remark) values (?,?,?,?,?)   [values]: 78088901755239(Long),client(String),client(String),93.99(java.math.BigDecimal),testOneTime(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,userid,name,total,remark) values (78088901755239,'client','client',93.99,'testOneTime') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] 1
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 78088901755240(Long),client(String),client(String),93.99(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index0] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (78088901755240,'client','client',93.99,null,'testOneTime',null,null,null) ; ;
[INFO] [Bee] --> index:1 ,  [values]: 78088901755241(Long),client(String),client(String),94.99(java.math.BigDecimal),null(String),testOneTime(String),(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index1] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (78088901755241,'client','client',94.99,null,'testOneTime','',null,null) ; ;
[INFO] [Bee] --> index:2 ,  [values]: 78088901755242(Long),client(String),Bee(String),95.99(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index2] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (78088901755242,'client','Bee',95.99,null,'testOneTime',null,null,null) ; ;
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 3
[INFO] 3
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 78088901755243(Long),client(String),client(String),93.99(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index0] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (78088901755243,'client','client',93.99,null,'testOneTime',null,null,null) ; ;
[INFO] [Bee] --> index:1 ,  [values]: 78088901755244(Long),client(String),client(String),94.99(java.math.BigDecimal),null(String),testOneTime(String),(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index1] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (78088901755244,'client','client',94.99,null,'testOneTime','',null,null) ; ;
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 2
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:2 ,  [values]: 78088901755245(Long),client(String),Bee(String),95.99(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index2] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (78088901755245,'client','Bee',95.99,null,'testOneTime',null,null,null) ; ;
[INFO] [Bee]  | <-- [Batch:1] Affected rows: 1
[INFO] 3
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=? and remark=?   [values]: client(String),client(String),94.99(java.math.BigDecimal),testOneTime(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='client' and name='client' and total=94.99 and remark='testOneTime' ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 2
[INFO] Orders[id=78088901755241,userid=client,name=client,total=94.990000,createtime=null,remark=testOneTime,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=78088901755244,userid=client,name=client,total=94.990000,createtime=null,remark=testOneTime,sequence=,abc=null,updatetime=null]
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 78088901755246(Long),client(String),client(String),93.99(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index0] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (78088901755246,'client','client',93.99,null,'testOneTime',null,null,null) ; ;
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 1
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 78088901755247(Long),client(String),client(String),93.99(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index0] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (78088901755247,'client','client',93.99,null,'testOneTime',null,null,null) ; ;
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 1
[INFO] [Bee] --> index:1 ,  [values]: 78088901755248(Long),client(String),client(String),94.99(java.math.BigDecimal),null(String),testOneTime(String),(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index1] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (78088901755248,'client','client',94.99,null,'testOneTime','',null,null) ; ;
[INFO] [Bee]  | <-- [Batch:1] Affected rows: 1
[INFO] [Bee] --> index:2 ,  [values]: 78088901755249(Long),client(String),Bee(String),95.99(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index2] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (78088901755249,'client','Bee',95.99,null,'testOneTime',null,null,null) ; ;
[INFO] [Bee]  | <-- [Batch:2] Affected rows: 1
[INFO] insertArray3's size : 3
[INFO] -------------------------------
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 78088901755250(Long),client(String),client(String),93.99(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index0] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (78088901755250,'client','client',93.99,null,'testOneTime',null,null,null) ; ;
[INFO] [Bee] --> index:1 ,  [values]: 78088901755251(Long),client(String),client(String),94.99(java.math.BigDecimal),null(String),testOneTime(String),(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index1] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (78088901755251,'client','client',94.99,null,'testOneTime','',null,null) ; ;
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 2
[INFO] [Bee] --> index:2 ,  [values]: 78088901755252(Long),client(String),Bee(String),95.99(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index2] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (78088901755252,'client','Bee',95.99,null,'testOneTime',null,null,null) ; ;
[INFO] [Bee] --> index:3 ,  [values]: 78088901755253(Long),orders3(String),null(String),null(java.math.BigDecimal),null(String),null(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index3] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (78088901755253,'orders3',null,null,null,null,null,null,null) ; ;
[INFO] [Bee]  | <-- [Batch:1] Affected rows: 2
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:4 ,  [values]: 78088901755254(Long),orders4(String),null(String),null(java.math.BigDecimal),null(String),null(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index4] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (78088901755254,'orders4',null,null,null,null,null,null,null) ; ;
[INFO] [Bee]  | <-- [Batch:2] Affected rows: 1
[INFO] insertArray5's size : 5
[INFO] [bee-exam] ====================InsertTest.test======end.

[INFO] [bee-exam] ====================DynamicTableExam.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from Orders_202007   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from Orders_202007
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc2   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc2
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc2 limit ?,?   [values]: 0(Integer),5(Integer)
[INFO] [Bee] select SQL(entity,size):  ( ExecutableSql )
select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc2 limit 0,5 ;
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc2 limit ?,?   [values]: 0(Integer),5(Integer)
[INFO] [Bee] select SQL(entity,size):  ( ExecutableSql )
select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc2 limit 0,5 ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 3
[WARN] Auto table: parameter  ${version} in LeafAlloc${version} still has not value, will be ignore it!
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc limit ?,?   [values]: 0(Integer),5(Integer)
[INFO] [Bee] select SQL(entity,size):  ( ExecutableSql )
select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc limit 0,5 ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc2   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc2
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 3
[WARN] Auto table: parameter  ${version} in LeafAlloc${version} still has not value, will be ignore it!
[INFO] [Bee] select SQL(entity,size): select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc limit ?,?   [values]: 0(Integer),5(Integer)
[INFO] [Bee] select SQL(entity,size):  ( ExecutableSql )
select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc limit 0,5 ;
[INFO] [Bee]  | <--  select rows: 3
[INFO] 3
[INFO] [bee-exam] ====================DynamicTableExam.test======end.

[INFO] [bee-exam] ====================MoreSQLFunction.test======start:
[INFO] [Bee] selectJson SQL: select term, examno, subject,max(score) as maxScore,avg(score) as avgScore,min(score) as minScore from scores where status!=? group by term,examno,subjectno,subject order by term,examno,subjectno   [values]: FIN(String)
[INFO] [Bee] selectJson SQL:  ( ExecutableSql )
select term, examno, subject,max(score) as maxScore,avg(score) as avgScore,min(score) as minScore from scores where status!='FIN' group by term,examno,subjectno,subject order by term,examno,subjectno ;
[INFO] []
[INFO] [Bee] select SQL: select term, examno, subject,max(score) as maxScore,avg(score) as avgScore,min(score) as minScore from Scores where status!=? group by term,examno,subjectno,subject order by term,examno,subjectno   [values]: FIN(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select term, examno, subject,max(score) as maxScore,avg(score) as avgScore,min(score) as minScore from Scores where status!='FIN' group by term,examno,subjectno,subject order by term,examno,subjectno ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select term, examno, subject,max(score) as maxScore,avg(score) as avgScore,min(score) as minScore from scores where status!=? group by term,examno,subjectno,subject order by term,examno,subjectno   [values]: FIN(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select term, examno, subject,max(score) as maxScore,avg(score) as avgScore,min(score) as minScore from scores where status!='FIN' group by term,examno,subjectno,subject order by term,examno,subjectno ;
[INFO] [Bee]  | <--  select rows: 0
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [bee-exam] ====================MoreSQLFunction.test======end.

[INFO] [bee-exam] ====================SelectFun.test======start:
[INFO] [Bee] select fun SQL : select count(*) from scores where teacherno=?   [values]: 60001(String)
[INFO] [Bee] select fun SQL :  ( ExecutableSql )
select count(*) from scores where teacherno='60001' ;
[INFO] 0
[INFO] [Bee] select SQL: select id,classno,term,examno,subjectno,subject,stuno,name,teacherno,teachername,score,creater,createtime,updater,updatetime,remark,ext1,status,schoolno from scores where teacherno=? and status!=? and (classno=? or classno=?) limit ?,?   [values]: 60001(String),FIN(String),201(String),191(高中)(String),0(Integer),10(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,classno,term,examno,subjectno,subject,stuno,name,teacherno,teachername,score,creater,createtime,updater,updatetime,remark,ext1,status,schoolno from scores where teacherno='60001' and status!='FIN' and (classno='201' or classno='191(高中)') limit 0,10 ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [bee-exam] ====================SelectFun.test======end.

[INFO] [bee-exam] ====================MapSuidExam.test======start:
[INFO] [Bee] In MapSuid, selectJson SQL: select name,password from test_user where name=? and last_name is null order by name   [values]: Bee(String)
[INFO] [Bee] In MapSuid, selectJson SQL:  ( ExecutableSql )
select name,password from test_user where name='Bee' and last_name is null order by name ;
[INFO] [{"name":"Bee","password":"bee"}]
[INFO] [Bee] In MapSuid, select List<Map> SQL: select name,password from test_user where name=? and last_name is null order by name   [values]: Bee(String)
[INFO] [Bee] In MapSuid, select List<Map> SQL:  ( ExecutableSql )
select name,password from test_user where name='Bee' and last_name is null order by name ;
[INFO] [Bee]  | <--  select rows: 1
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee] In MapSuid, select List<Map> SQL: select name,password from test_user where name=? and last_name is null order by name   [values]: Bee(String)
[INFO] [Bee] In MapSuid, select List<Map> SQL:  ( ExecutableSql )
select name,password from test_user where name='Bee' and last_name is null order by name ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] In MapSuid, select List<Map> SQL: select name,password from test_user where name=? and last_name is null order by name limit 0,5   [values]: Bee(String)
[INFO] [Bee] In MapSuid, select List<Map> SQL:  ( ExecutableSql )
select name,password from test_user where name='Bee' and last_name is null order by name limit 0,5 ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] In MapSuid, select List<Map> SQL: select name,password from test_user where name=? and last_name is null order by name limit 2,5   [values]: Bee(String)
[INFO] [Bee] In MapSuid, select List<Map> SQL:  ( ExecutableSql )
select name,password from test_user where name='Bee' and last_name is null order by name limit 2,5 ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] In MapSuid, selectOne Map SQL: select name,password from test_user where name=? and last_name is null order by name limit 2,5   [values]: Bee(String)
[INFO] [Bee] In MapSuid, selectOne Map SQL:  ( ExecutableSql )
select name,password from test_user where name='Bee' and last_name is null order by name limit 2,5 ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] In MapSuid, selectOne Map SQL: select name,password from test_user where name=? and last_name is null order by name limit 2,5   [values]: Bee(String)
[INFO] [Bee] In MapSuid, selectOne Map SQL:  ( ExecutableSql )
select name,password from test_user where name='Bee' and last_name is null order by name limit 2,5 ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] In MapSuid, insert SQL: insert into test_user (email,password,last_name,id) values (?,?,?,?)   [values]: test@gmail.com(String),password@gmail.com(String),MapSuid(String),78088931115027(Long)
[INFO] [Bee] In MapSuid, insert SQL:  ( ExecutableSql )
insert into test_user (email,password,last_name,id) values ('test@gmail.com','password@gmail.com','MapSuid',78088931115027) ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] 1
[INFO] [Bee] In MapSuid, insert SQL: insert into test_user (email,password,last_name,name,id) values (?,?,?,?,?)   [values]: test@gmail.com(String),password@gmail.com(String),MapSuid(String),(String),78088931115028(Long)
[INFO] [Bee] In MapSuid, insert SQL:  ( ExecutableSql )
insert into test_user (email,password,last_name,name,id) values ('test@gmail.com','password@gmail.com','MapSuid','',78088931115028) ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] 1
[INFO] [Bee] In MapSuid, insert SQL: insert into test_user (email,password,last_name,name,username,id) values (?,?,?,?,?,?)   [values]: test@gmail.com(String),password@gmail.com(String),MapSuid(String),(String),null(Object),78088931115029(Long)
[INFO] [Bee] In MapSuid, insert SQL:  ( ExecutableSql )
insert into test_user (email,password,last_name,name,username,id) values ('test@gmail.com','password@gmail.com','MapSuid','',null,78088931115029) ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] 1
[INFO] [Bee] In MapSuid, selectOne Map SQL: select name,password from test_user where name=? and last_name is null order by name limit 2,5   [values]: Bee(String)
[INFO] [Bee] In MapSuid, selectOne Map SQL:  ( ExecutableSql )
select name,password from test_user where name='Bee' and last_name is null order by name limit 2,5 ;
[INFO] [Bee]  | <--  select rows: 0
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee] In MapSuid, update SQL: update test_user set password=? where id=? and password=?   [values]: bee-new(String),800001(Long),bee(String)
[INFO] [Bee] In MapSuid, update SQL:  ( ExecutableSql )
update test_user set password='bee-new' where id=800001 and password='bee' ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] In MapSuid, selectJson SQL: select name,password from test_user order by name,password desc   [values]: 
[INFO] [Bee] In MapSuid, selectJson SQL:  ( ExecutableSql )
select name,password from test_user order by name,password desc
[INFO] [{"name":null,"password":"password@gmail.com"},{"name":null,"password":"bee-user"},{"name":"","password":"password@gmail.com"},{"name":"","password":"password@gmail.com"},{"name":"Bee","password":"bee-new"},{"name":"Honey","password":"honey"}]
[INFO] [Bee] In MapSuid, selectJson SQL: select name,password from test_user order by name,password desc limit 2,5   [values]: 
[INFO] [Bee] In MapSuid, selectJson SQL:  ( ExecutableSql )
select name,password from test_user order by name,password desc limit 2,5
[INFO] [bee-exam] ====================MapSuidExam.test======end.

[INFO] [bee-exam] ====================LockWaitTimeout.test======start:
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 1004(Long),client01(String),null(String),91(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index0] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (1004,'client01',null,91,null,'testOneTime',null,null,null) ; ;
[INFO] [Bee] --> index:1 ,  [values]: 1005(Long),client02(String),null(String),20(java.math.BigDecimal),null(String),testOneTime(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index1] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (1005,'client02',null,20,null,'testOneTime',null,null,null) ; ;
[WARN] Duplicate entry '1004' for key 'PRIMARY'
[INFO] 0
[INFO] test paging
[INFO] [Bee] select SQL(entity,size): select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? limit ?,?   [values]: testOneTime(String),0(Integer),3(Integer)
[INFO] [Bee] select SQL(entity,size):  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark='testOneTime' limit 0,3 ;
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select(entity,start,size) SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? limit ?,?   [values]: testOneTime(String),0(Integer),3(Integer)
[INFO] [Bee] select(entity,start,size) SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark='testOneTime' limit 0,3 ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 3
[INFO] Orders[id=1005,userid=client02,name=null,total=20.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1006,userid=client03,name=null,total=23.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1008,userid=client02,name=null,total=20.000000,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] delete SQL: delete from orders where remark=?   [values]: testOneTime(String)
[INFO] [Bee] delete SQL:  ( ExecutableSql )
delete from orders where remark='testOneTime' ;
[INFO] [Bee]  | <--  Affected rows: 21
[INFO] deleteNum2: 21
[INFO] [bee-exam] ====================LockWaitTimeout.test======end.

[INFO] [bee-exam] ====================SuidExamEN_SQLite.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001(Long),Bee(ORM Framework)(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 and name='Bee(ORM Framework)' ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.010000,createtime=2020-03-02 11:29:28,remark=null,sequence=12345601,abc=test1,updatetime=null]
[INFO] [Bee] update SQL: update orders set name=? , updatetime=? where id=?   [values]: Bee(ORM Framework)(String),2022-08-04 11:39:34(String),100001(Long)
[INFO] [Bee] update SQL:  ( ExecutableSql )
update orders set name='Bee(ORM Framework)' , updatetime='2022-08-04 11:39:34' where id=100001 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] update record:1
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime) values (?,?,?,?,?)   [values]: 78088901755258(Long),bee(String),Bee(ORM Framework)(String),91.99(java.math.BigDecimal),2022-08-04 11:39:34(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,userid,name,total,createtime) values (78088901755258,'bee','Bee(ORM Framework)',91.99,'2022-08-04 11:39:34') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] insert record:1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee]  | <--  select rows: 21
[INFO] Orders[id=121,userid=1001,name=bee,total=null,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=122,userid=1001,name=bee,total=null,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=123,userid=1001,name=bee,total=null,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1004,userid=client01,name=null,total=91.000000,createtime=null,remark=change Remark,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1007,userid=client01,name=null,total=91.000000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=10010,userid=client01,name=null,total=91.000000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.010000,createtime=2020-03-02 11:29:28,remark=null,sequence=12345601,abc=test1,updatetime=2022-08-04 11:39:34]
[INFO] Orders[id=100002,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=100003,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=100018,userid=client18,name=null,total=18.180000,createtime=null,remark=test insert and delete,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=100019,userid=client19,name=null,total=19.190000,createtime=null,remark=test insert and delete,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=100020,userid=client20,name=null,total=20.200000,createtime=null,remark=test insert and delete,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=78088901755210,userid=client,name=client,total=93.990000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=78088901755211,userid=client,name=client,total=93.990000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=78088901755212,userid=client,name=client,total=93.990000,createtime=null,remark=null,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=78088901755213,userid=client,name=client,total=93.990000,createtime=null,remark=null,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=78088901755233,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=78088901755234,userid=bee,name=Bee(ORM Framework),total=91.990000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=78088901755253,userid=orders3,name=null,total=null,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=78088901755254,userid=orders4,name=null,total=null,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=78088901755258,userid=bee,name=Bee(ORM Framework),total=91.990000,createtime=2022-08-04 11:39:34,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] [bee-exam] ====================SuidExamEN_SQLite.test======end.

[INFO] [bee-exam] ====================UpdateSetExam_SQLite.test======start:
[INFO] [Bee] update SQL(whereFields) :update leaf_alloc3 set max_id=max_id+step where biz_tag=?   [values]: bee(String)
[INFO] [Bee] update SQL(whereFields) : ( ExecutableSql )
update leaf_alloc3 set max_id=max_id+step where biz_tag='bee' ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] test setAdd , update num: 1
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc3 where biz_tag=?   [values]: test(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc3 where biz_tag='test' ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] update SQL(condition) :update leaf_alloc3 set max_id=max_id+step,version=version+? where id=? and biz_tag=? and max_id=? and version=?   [values]: 1(Integer),456537470402562(Long),test(String),100(Long),1(Integer)
[INFO] [Bee] update SQL(condition) : ( ExecutableSql )
update leaf_alloc3 set max_id=max_id+step,version=version+1 where id=456537470402562 and biz_tag='test' and max_id=100 and version=1 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] test setMultiply , update num: 1
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc3 where biz_tag=?   [values]: test(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc3 where biz_tag='test' ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] update SQL(condition) :update leaf_alloc3 set max_id=?,version=version+? where id=? and biz_tag=? and max_id=? and version=?   [values]: 10003(Integer),1(Integer),456537470402562(Long),test(String),200(Long),2(Integer)
[INFO] [Bee] update SQL(condition) : ( ExecutableSql )
update leaf_alloc3 set max_id=10003,version=version+1 where id=456537470402562 and biz_tag='test' and max_id=200 and version=2 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] test setMultiply , update num: 1
[INFO] [bee-exam] ====================UpdateSetExam_SQLite.test======end.

[INFO] [bee-exam] ====================SelectById.test======start:
[INFO] [Bee] selectByIds SQL: select id,email,last_name,name,password,username,createtime from test_user where id=? or id=?   [values]: 800001(Long),800002(Long)
[INFO] [Bee] selectByIds SQL:  ( ExecutableSql )
select id,email,last_name,name,password,username,createtime from test_user where id=800001 or id=800002 ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 2
[INFO] TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee-new,username=bee,createtime=null]
[INFO] =============================================
[INFO] TestUser[id=800002,email=honey@163.com,lastName=cn,name=Honey,password=honey,username=honey,createtime=null]
[INFO] =============================================
[INFO] [Bee] selectById SQL: select id,email,last_name,name,password,username,createtime from test_user where id=?   [values]: 800001(Integer)
[INFO] [Bee] selectById SQL:  ( ExecutableSql )
select id,email,last_name,name,password,username,createtime from test_user where id=800001 ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee-new,username=bee,createtime=null]
[INFO] [Bee] selectById SQL: select id,email,last_name,name,password,username,createtime from test_user where id=?   [values]: 800001(Long)
[INFO] [Bee] selectById SQL:  ( ExecutableSql )
select id,email,last_name,name,password,username,createtime from test_user where id=800001 ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] selectById SQL: select id,email,last_name,name,password,username,createtime from test_user where id=?   [values]: 800001(Long)
[INFO] [Bee] selectById SQL:  ( ExecutableSql )
select id,email,last_name,name,password,username,createtime from test_user where id=800001 ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee-new,username=bee,createtime=null]
[INFO] [Bee] deleteById SQL: delete from test_user where id=?   [values]: 800001(Integer)
[INFO] [Bee] deleteById SQL:  ( ExecutableSql )
delete from test_user where id=800001 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] deleteNum3: 1
[INFO] [Bee] insert SQL: insert into test_user(id,email,name,password,username) values (?,?,?,?,?)   [values]: 800001(Long),beeUser@163.com(String),Bee(String),bee-new(String),bee(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into test_user(id,email,name,password,username) values (800001,'beeUser@163.com','Bee','bee-new','bee') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] selectJson SQL: select id,email,last_name,name,password,username,createtime from test_user   [values]: 
[INFO] [Bee] selectJson SQL:  ( ExecutableSql )
select id,email,last_name,name,password,username,createtime from test_user
[INFO] selectJson(new User()):
[INFO] [{"id":"800001","email":"beeUser@163.com","lastName":null,"name":"Bee","password":"bee-new","username":"bee","createtime":null},{"id":"800002","email":"honey@163.com","lastName":"cn","name":"Honey","password":"honey","username":"honey","createtime":null},{"id":"78088914337800","email":null,"lastName":null,"name":null,"password":"bee-user","username":"testuser","createtime":null},{"id":"78088931115027","email":"test@gmail.com","lastName":"MapSuid","name":null,"password":"password@gmail.com","username":null,"createtime":null},{"id":"78088931115028","email":"test@gmail.com","lastName":"MapSuid","name":"","password":"password@gmail.com","username":null,"createtime":null},{"id":"78088931115029","email":"test@gmail.com","lastName":"MapSuid","name":"","password":"password@gmail.com","username":null,"createtime":null}]
[INFO] [Bee] selectById SQL: select id,email,last_name,name,password,username,createtime from test_user where id=?   [values]: 800001(Long)
[INFO] [Bee] selectById SQL:  ( ExecutableSql )
select id,email,last_name,name,password,username,createtime from test_user where id=800001 ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL(selectFields) : select password, name from test_user where username=?   [values]: bee(String)
[INFO] [Bee] select SQL(selectFields) :  ( ExecutableSql )
select password, name from test_user where username='bee' ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,email,last_name,name,password,username,createtime from test_user where username=?   [values]: bee(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,email,last_name,name,password,username,createtime from test_user where username='bee' ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [bee-exam] ====================SelectById.test======end.

[INFO] [bee-exam] ====================NamingTest.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 21
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee]  | <--  select rows: 21
[INFO] [Bee] select SQL: select ID,USERID,NAME,TOTAL,CREATETIME,REMARK,SEQUENCE,ABC,UPDATETIME from ORDERS   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select ID,USERID,NAME,TOTAL,CREATETIME,REMARK,SEQUENCE,ABC,UPDATETIME from ORDERS
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 21
[INFO] [bee-exam] ====================NamingTest.test======end.

[INFO] [bee-exam] ====================IdTest.test======start:
[INFO] [bee-exam] ====================ChainUpdateExam.test======start:
[INFO] update orders set name='Bee' , userid='Bee' , total=98.8 where (id>=100005 or id in (100004)) and name is not null  and createtime is null  and id not in (100001) and id in (100002,100003) and id between 100002 and 100004 and id not between 100005 and 100006 and name not in ('Bee')
[INFO] Getting this sql twice is same!
[INFO] [Bee] PreparedSql modify SQL: update orders set name='Bee' , userid='Bee' , total=98.8 where (id>=100005 or id in (100004)) and name is not null  and createtime is null  and id not in (100001) and id in (100002,100003) and id between 100002 and 100004 and id not between 100005 and 100006 and name not in ('Bee')   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
update orders set name='Bee' , userid='Bee' , total=98.8 where (id>=100005 or id in (100004)) and name is not null  and createtime is null  and id not in (100001) and id in (100002,100003) and id between 100002 and 100004 and id not between 100005 and 100006 and name not in ('Bee')
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] updateNum: 0
[INFO] update team_id set total=11 , remark='test' where 1=1 and price=99 and price>=99 and name like 'Bee%' and remark='test2' and orderid in ('111','112')
[INFO] update team_id set total=11 , remark='test' where 1=1 and price=99 and price>=99 and name like 'Bee%' and remark='test2' and orderid in ('111','112')
[INFO] [bee-exam] ====================ChainUpdateExam.test======end.

[INFO] [bee-exam] ====================ChainSelectExam.test======start:
[INFO] [Bee] PreparedSql select SQL: select name,max(total) from orders where name not like 'Bee%' and total between 10 and 100 and createtime is not null  group by name order by name asc   [values]: 
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select name,max(total) from orders where name not like 'Bee%' and total between 10 and 100 and createtime is not null  group by name order by name asc
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] PreparedSql select SQL: select name,max(total) from orders where name='client' or name='bee' group by name having avg(total)>80   [values]: 
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select name,max(total) from orders where name='client' or name='bee' group by name having avg(total)>80
[INFO] [Bee]  | <--  select rows: 1
[INFO] client   93.990000   
[INFO] [Bee] PreparedSql select SQL: select orders.id,total,orders.name,test_user.name from orders,test_user where orders.name=test_user.name and (total between 0 and 100) and orders.name='Bee'   [values]: 
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select orders.id,total,orders.name,test_user.name from orders,test_user where orders.name=test_user.name and (total between 0 and 100) and orders.name='Bee'
[INFO] [Bee]  | <--  select rows: 3
[INFO] 100002   100.000000   Bee   Bee   
[INFO] 100003   100.000000   Bee   Bee   
[INFO] 78088901755233   100.000000   Bee   Bee   
[INFO] select distinct(team_id) from teams where price=99 group by team_id,name having count(*)=sum(case when status='aaa' then 1 else 0 end)
[INFO] [Bee] PreparedSql select SQL: select * from orders o join test_user t on o.name=t.name   [values]: 
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select * from orders o join test_user t on o.name=t.name
[INFO] [Bee]  | <--  select rows: 3
[INFO] 100002   bee   Bee   100.000000   null   new2      null   null   800001   beeUser@163.com   null   Bee   bee-new   bee   null   
[INFO] 100003   bee   Bee   100.000000   null   new2      null   null   800001   beeUser@163.com   null   Bee   bee-new   bee   null   
[INFO] 78088901755233   bee   Bee   100.000000   null   new2      null   null   800001   beeUser@163.com   null   Bee   bee-new   bee   null   
[INFO] [Bee] PreparedSql select SQL: select id,examno,classno,name,teacherno,createtime,updatetime from scores where classno in ('201') limit 0,10   [values]: 
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select id,examno,classno,name,teacherno,createtime,updatetime from scores where classno in ('201') limit 0,10
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] PreparedSql select SQL: select count(*) from scores where classno in ('201')   [values]: 
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select count(*) from scores where classno in ('201')
[INFO] [Bee]  | <--  select rows: 1
[INFO] 0   
[INFO] [Bee] PreparedSql select SQL: select * from orders where (id>=100005 or id in (100004)) and name is not null  and createtime is null  and id not in (100001) and id in (100002,100003) and id between 100002 and 100004 and id not between 100005 and 100006 and name not in ('testBee') and name='Bee' order by id   [values]: 
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select * from orders where (id>=100005 or id in (100004)) and name is not null  and createtime is null  and id not in (100001) and id in (100002,100003) and id between 100002 and 100004 and id not between 100005 and 100006 and name not in ('testBee') and name='Bee' order by id
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] PreparedSql select SQL: select * from orders o left join test_user t on o.name=t.name   [values]: 
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select * from orders o left join test_user t on o.name=t.name
[INFO] [Bee]  | <--  select rows: 21
[INFO] 100002   bee   Bee   100.000000   null   new2      null   null   800001   beeUser@163.com   null   Bee   bee-new   bee   null   
[INFO] 100003   bee   Bee   100.000000   null   new2      null   null   800001   beeUser@163.com   null   Bee   bee-new   bee   null   
[INFO] 78088901755233   bee   Bee   100.000000   null   new2      null   null   800001   beeUser@163.com   null   Bee   bee-new   bee   null   
[INFO] 121   1001   bee   null   null   null   null   null   null   null   null   null   null   null   null   null   
[INFO] 122   1001   bee   null   null   null   null   null   null   null   null   null   null   null   null   null   
[INFO] 123   1001   bee   null   null   null   null   null   null   null   null   null   null   null   null   null   
[INFO] 1004   client01   null   91.000000   null   change Remark   null   null   null   null   null   null   null   null   null   null   
[INFO] 1007   client01   null   91.000000   null   null   null   null   null   null   null   null   null   null   null   null   
[INFO] 10010   client01   null   91.000000   null   null   null   null   null   null   null   null   null   null   null   null   
[INFO] 100001   Bee   Bee(ORM Framework)   95.010000   2020-03-02 11:29:28   null   12345601   test1   2022-08-04 11:39:34   null   null   null   null   null   null   null   
[INFO] 100018   client18   null   18.180000   null   test insert and delete   null   null   null   null   null   null   null   null   null   null   
[INFO] 100019   client19   null   19.190000   null   test insert and delete   null   null   null   null   null   null   null   null   null   null   
[INFO] 100020   client20   null   20.200000   null   test insert and delete   null   null   null   null   null   null   null   null   null   null   
[INFO] 78088901755210   client   client   93.990000   null   null   null   null   null   null   null   null   null   null   null   null   
[INFO] 78088901755211   client   client   93.990000   null   null   null   null   null   null   null   null   null   null   null   null   
[INFO] 78088901755212   client   client   93.990000   null   null      null   null   null   null   null   null   null   null   null   
[INFO] 78088901755213   client   client   93.990000   null   null      null   null   null   null   null   null   null   null   null   
[INFO] 78088901755234   bee   Bee(ORM Framework)   91.990000   null   null   null   null   null   null   null   null   null   null   null   null   
[INFO] 78088901755253   orders3   null   null   null   null   null   null   null   null   null   null   null   null   null   null   
[INFO] 78088901755254   orders4   null   null   null   null   null   null   null   null   null   null   null   null   null   null   
[INFO] 78088901755258   bee   Bee(ORM Framework)   91.990000   2022-08-04 11:39:34   null   null   null   null   null   null   null   null   null   null   null   
[INFO] [Bee] PreparedSql select SQL: select * from orders o right join test_user t on o.name=t.name   [values]: 
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select * from orders o right join test_user t on o.name=t.name
[INFO] [Bee]  | <--  select rows: 8
[INFO] 100002   bee   Bee   100.000000   null   new2      null   null   800001   beeUser@163.com   null   Bee   bee-new   bee   null   
[INFO] 100003   bee   Bee   100.000000   null   new2      null   null   800001   beeUser@163.com   null   Bee   bee-new   bee   null   
[INFO] 78088901755233   bee   Bee   100.000000   null   new2      null   null   800001   beeUser@163.com   null   Bee   bee-new   bee   null   
[INFO] null   null   null   null   null   null   null   null   null   800002   honey@163.com   cn   Honey   honey   honey   null   
[INFO] null   null   null   null   null   null   null   null   null   78088914337800   null   null   null   bee-user   testuser   null   
[INFO] null   null   null   null   null   null   null   null   null   78088931115027   test@gmail.com   MapSuid   null   password@gmail.com   null   null   
[INFO] null   null   null   null   null   null   null   null   null   78088931115028   test@gmail.com   MapSuid      password@gmail.com   null   null   
[INFO] null   null   null   null   null   null   null   null   null   78088931115029   test@gmail.com   MapSuid      password@gmail.com   null   null   
[INFO] [Bee] PreparedSql select SQL: select * from orders o inner join test_user t on o.name=t.name   [values]: 
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select * from orders o inner join test_user t on o.name=t.name
[INFO] [Bee]  | <--  select rows: 3
[INFO] 100002   bee   Bee   100.000000   null   new2      null   null   800001   beeUser@163.com   null   Bee   bee-new   bee   null   
[INFO] 100003   bee   Bee   100.000000   null   new2      null   null   800001   beeUser@163.com   null   Bee   bee-new   bee   null   
[INFO] 78088901755233   bee   Bee   100.000000   null   new2      null   null   800001   beeUser@163.com   null   Bee   bee-new   bee   null   
[INFO] (total between 0 and 100) and orders.name='Bee'
[INFO] [Bee] PreparedSql select SQL: select * from orders where exists (select id from orders)   [values]: 
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select * from orders where exists (select id from orders)
[INFO] [Bee]  | <--  select rows: 21
[INFO] 121   1001   bee   null   null   null   null   null   null   
[INFO] 122   1001   bee   null   null   null   null   null   null   
[INFO] 123   1001   bee   null   null   null   null   null   null   
[INFO] 1004   client01   null   91.000000   null   change Remark   null   null   null   
[INFO] 1007   client01   null   91.000000   null   null   null   null   null   
[INFO] 10010   client01   null   91.000000   null   null   null   null   null   
[INFO] 100001   Bee   Bee(ORM Framework)   95.010000   2020-03-02 11:29:28   null   12345601   test1   2022-08-04 11:39:34   
[INFO] 100002   bee   Bee   100.000000   null   new2      null   null   
[INFO] 100003   bee   Bee   100.000000   null   new2      null   null   
[INFO] 100018   client18   null   18.180000   null   test insert and delete   null   null   null   
[INFO] 100019   client19   null   19.190000   null   test insert and delete   null   null   null   
[INFO] 100020   client20   null   20.200000   null   test insert and delete   null   null   null   
[INFO] 78088901755210   client   client   93.990000   null   null   null   null   null   
[INFO] 78088901755211   client   client   93.990000   null   null   null   null   null   
[INFO] 78088901755212   client   client   93.990000   null   null      null   null   
[INFO] 78088901755213   client   client   93.990000   null   null      null   null   
[INFO] 78088901755233   bee   Bee   100.000000   null   new2      null   null   
[INFO] 78088901755234   bee   Bee(ORM Framework)   91.990000   null   null   null   null   null   
[INFO] 78088901755253   orders3   null   null   null   null   null   null   null   
[INFO] 78088901755254   orders4   null   null   null   null   null   null   null   
[INFO] 78088901755258   bee   Bee(ORM Framework)   91.990000   2022-08-04 11:39:34   null   null   null   null   
[INFO] [Bee] PreparedSql select SQL: select * from orders where not exists (select id from orders)   [values]: 
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select * from orders where not exists (select id from orders)
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] PreparedSql select SQL: select * from orders where id in (select id from orders)   [values]: 
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select * from orders where id in (select id from orders)
[INFO] [Bee]  | <--  select rows: 21
[INFO] 121   1001   bee   null   null   null   null   null   null   
[INFO] 122   1001   bee   null   null   null   null   null   null   
[INFO] 123   1001   bee   null   null   null   null   null   null   
[INFO] 1004   client01   null   91.000000   null   change Remark   null   null   null   
[INFO] 1007   client01   null   91.000000   null   null   null   null   null   
[INFO] 10010   client01   null   91.000000   null   null   null   null   null   
[INFO] 100001   Bee   Bee(ORM Framework)   95.010000   2020-03-02 11:29:28   null   12345601   test1   2022-08-04 11:39:34   
[INFO] 100002   bee   Bee   100.000000   null   new2      null   null   
[INFO] 100003   bee   Bee   100.000000   null   new2      null   null   
[INFO] 100018   client18   null   18.180000   null   test insert and delete   null   null   null   
[INFO] 100019   client19   null   19.190000   null   test insert and delete   null   null   null   
[INFO] 100020   client20   null   20.200000   null   test insert and delete   null   null   null   
[INFO] 78088901755210   client   client   93.990000   null   null   null   null   null   
[INFO] 78088901755211   client   client   93.990000   null   null   null   null   null   
[INFO] 78088901755212   client   client   93.990000   null   null      null   null   
[INFO] 78088901755213   client   client   93.990000   null   null      null   null   
[INFO] 78088901755233   bee   Bee   100.000000   null   new2      null   null   
[INFO] 78088901755234   bee   Bee(ORM Framework)   91.990000   null   null   null   null   null   
[INFO] 78088901755253   orders3   null   null   null   null   null   null   null   
[INFO] 78088901755254   orders4   null   null   null   null   null   null   null   
[INFO] 78088901755258   bee   Bee(ORM Framework)   91.990000   2022-08-04 11:39:34   null   null   null   null   
[INFO] [Bee] PreparedSql select SQL: select * from orders where id not in (select id from orders)   [values]: 
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select * from orders where id not in (select id from orders)
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] PreparedSql select SQL: select count(total),max(total),min(total),avg(total),sum(total) from orders   [values]: 
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select count(total),max(total),min(total),avg(total),sum(total) from orders
[INFO] [Bee]  | <--  select rows: 1
[INFO] 16   100.000000   18.180000   80.3450000000   1285.520000   
[INFO] ChainSelectExam finished....
[INFO] [bee-exam] ====================ChainSelectExam.test======end.

[INFO] [bee-exam] ====================UnionSelectExam.test======start:
[INFO] select * from orders,test_user where orders.name=test_user.name limit 0,10
[INFO] Getting this sql twice is same!
[INFO] [Bee] PreparedSql select SQL: select * from orders,test_user where orders.name=test_user.name limit 0,10   [values]: 
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select * from orders,test_user where orders.name=test_user.name limit 0,10
[INFO] [Bee]  | <--  select rows: 3
[INFO] 100002   bee   Bee   100.000000   null   new2      null   null   800001   beeUser@163.com   null   Bee   bee-new   bee   null   
[INFO] 100003   bee   Bee   100.000000   null   new2      null   null   800001   beeUser@163.com   null   Bee   bee-new   bee   null   
[INFO] 78088901755233   bee   Bee   100.000000   null   new2      null   null   800001   beeUser@163.com   null   Bee   bee-new   bee   null   
[INFO] [Bee] PreparedSql select SQL: (select * from orders where userid='client01') union (select * from orders where userid='bee')   [values]: 
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
(select * from orders where userid='client01') union (select * from orders where userid='bee')
[INFO] [Bee]  | <--  select rows: 8
[INFO] 1004   client01   null   91.000000   null   change Remark   null   null   null   
[INFO] 1007   client01   null   91.000000   null   null   null   null   null   
[INFO] 10010   client01   null   91.000000   null   null   null   null   null   
[INFO] 100002   bee   Bee   100.000000   null   new2      null   null   
[INFO] 100003   bee   Bee   100.000000   null   new2      null   null   
[INFO] 78088901755233   bee   Bee   100.000000   null   new2      null   null   
[INFO] 78088901755234   bee   Bee(ORM Framework)   91.990000   null   null   null   null   null   
[INFO] 78088901755258   bee   Bee(ORM Framework)   91.990000   2022-08-04 11:39:34   null   null   null   null   
[INFO] [Bee] PreparedSql select SQL: (select * from orders where userid='client01') union all (select * from orders where userid='bee')   [values]: 
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
(select * from orders where userid='client01') union all (select * from orders where userid='bee')
[INFO] [Bee]  | <--  select rows: 8
[INFO] 1004   client01   null   91.000000   null   change Remark   null   null   null   
[INFO] 1007   client01   null   91.000000   null   null   null   null   null   
[INFO] 10010   client01   null   91.000000   null   null   null   null   null   
[INFO] 100002   bee   Bee   100.000000   null   new2      null   null   
[INFO] 100003   bee   Bee   100.000000   null   new2      null   null   
[INFO] 78088901755233   bee   Bee   100.000000   null   new2      null   null   
[INFO] 78088901755234   bee   Bee(ORM Framework)   91.990000   null   null   null   null   null   
[INFO] 78088901755258   bee   Bee(ORM Framework)   91.990000   2022-08-04 11:39:34   null   null   null   null   
[INFO] [bee-exam] ====================UnionSelectExam.test======end.

[INFO] [bee-exam] ====================OrdinaryTest.test======start:
[INFO] null is blank? true
[INFO] [bee-exam] ====================OrdinaryTest.test======end.

[INFO] [bee-exam] ====================PagingExam.test======start:
[INFO] [Bee] select(entity,selectFields,start,size) SQL: select name, total from orders where userid=? limit ?,?   [values]: bee(String),2(Integer),5(Integer)
[INFO] [Bee] select(entity,selectFields,start,size) SQL:  ( ExecutableSql )
select name, total from orders where userid='bee' limit 2,5 ;
[INFO] [Bee]  | <--  select rows: 3
[INFO] Orders[id=null,userid=null,name=Bee,total=100.000000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=null,userid=null,name=Bee(ORM Framework),total=91.990000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=null,userid=null,name=Bee(ORM Framework),total=91.990000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] select SQL: select distinct(name) from orders where userid=? limit ?,?   [values]: bee(String),0(Integer),5(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select distinct(name) from orders where userid='bee' limit 0,5 ;
[INFO] [Bee]  | <--  select rows: 2
[INFO] Orders[id=null,userid=null,name=Bee,total=null,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=null,userid=null,name=Bee(ORM Framework),total=null,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? limit ?,?   [values]: bee(String),0(Integer),5(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee' limit 0,5 ;
[INFO] [Bee]  | <--  select rows: 5
[INFO] Orders[id=100002,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=100003,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=78088901755233,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=78088901755234,userid=bee,name=Bee(ORM Framework),total=91.990000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=78088901755258,userid=bee,name=Bee(ORM Framework),total=91.990000,createtime=2022-08-04 11:39:34,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? order by id desc limit ?,?   [values]: bee(String),0(Integer),5(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee' order by id desc limit 0,5 ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 5
[INFO] Orders[id=78088901755258,userid=bee,name=Bee(ORM Framework),total=91.990000,createtime=2022-08-04 11:39:34,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=78088901755234,userid=bee,name=Bee(ORM Framework),total=91.990000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=78088901755233,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=100003,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=100002,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? order by id limit ?,?   [values]: bee(String),2(Integer),5(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee' order by id limit 2,5 ;
[INFO] [Bee]  | <--  select rows: 3
[INFO] Orders[id=78088901755233,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=78088901755234,userid=bee,name=Bee(ORM Framework),total=91.990000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=78088901755258,userid=bee,name=Bee(ORM Framework),total=91.990000,createtime=2022-08-04 11:39:34,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] select SQL: select uu_id,name,num,remark from noid2 order by uu_id limit ?,?   [values]: 2(Integer),5(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select uu_id,name,num,remark from noid2 order by uu_id limit 2,5 ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? order by id desc limit ?,?   [values]: bee(String),2(Integer),5(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee' order by id desc limit 2,5 ;
[INFO] [Bee]  | <--  select rows: 3
[INFO] Orders[id=78088901755233,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=100003,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=100002,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] [Bee] select(entity,start,size) SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? limit ?,?   [values]: bee(String),1(Integer),3(Integer)
[INFO] [Bee] select(entity,start,size) SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee' limit 1,3 ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 3
[INFO] Orders[id=100003,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=78088901755233,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=78088901755234,userid=bee,name=Bee(ORM Framework),total=91.990000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] select(entity,start,size) SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? limit ?,?   [values]: bee(String),1(Integer),3(Integer)
[INFO] [Bee] select(entity,start,size) SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee' limit 1,3 ;
[INFO] [Bee]  | <--  select rows: 3
[INFO] Orders[id=100003,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=78088901755233,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=78088901755234,userid=bee,name=Bee(ORM Framework),total=91.990000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] select(entity,start,size) SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? limit ?,?   [values]: bee(String),4(Integer),3(Integer)
[INFO] [Bee] select(entity,start,size) SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee' limit 4,3 ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=78088901755258,userid=bee,name=Bee(ORM Framework),total=91.990000,createtime=2022-08-04 11:39:34,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] select(entity,start,size) SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? limit ?,?   [values]: bee(String),7(Integer),3(Integer)
[INFO] [Bee] select(entity,start,size) SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee' limit 7,3 ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL(entity,size): select uuid,name,num,remark from noid limit ?,?   [values]: 0(Integer),3(Integer)
[INFO] [Bee] select SQL(entity,size):  ( ExecutableSql )
select uuid,name,num,remark from noid limit 0,3 ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select(entity,start,size) SQL: select uuid,name,num,remark from noid limit ?,?   [values]: 2(Integer),3(Integer)
[INFO] [Bee] select(entity,start,size) SQL:  ( ExecutableSql )
select uuid,name,num,remark from noid limit 2,3 ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select(entity,selectFields,start,size) SQL: select uuid from noid limit ?,?   [values]: 0(Integer),3(Integer)
[INFO] [Bee] select(entity,selectFields,start,size) SQL:  ( ExecutableSql )
select uuid from noid limit 0,3 ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select(entity,selectFields,start,size) SQL: select uuid from noid limit ?,?   [values]: 0(Integer),3(Integer)
[INFO] [Bee] select(entity,selectFields,start,size) SQL:  ( ExecutableSql )
select uuid from noid limit 0,3 ;
[INFO] [Bee] selectJson(T entity, String selectField, int start, int size) SQL: select uuid from noid limit ?,?   [values]: 0(Integer),3(Integer)
[INFO] [Bee] selectJson(T entity, String selectField, int start, int size) SQL:  ( ExecutableSql )
select uuid from noid limit 0,3 ;
[INFO] []
[INFO] [Bee] select SQL: select uuid,name,num,remark from noid limit ?,?   [values]: 0(Integer),5(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select uuid,name,num,remark from noid limit 0,5 ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select(entity,start,size) SQL: select uu_id,name,num,remark from noid2 limit ?,?   [values]: 2(Integer),3(Integer)
[INFO] [Bee] select(entity,start,size) SQL:  ( ExecutableSql )
select uu_id,name,num,remark from noid2 limit 2,3 ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select(entity,selectFields,start,size) SQL: select uu_id from noid2 limit ?,?   [values]: 0(Integer),3(Integer)
[INFO] [Bee] select(entity,selectFields,start,size) SQL:  ( ExecutableSql )
select uu_id from noid2 limit 0,3 ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select uu_id,name,num,remark from noid2 limit ?,?   [values]: 0(Integer),5(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select uu_id,name,num,remark from noid2 limit 0,5 ;
[INFO] [Bee]  | <--  select rows: 0
[WARN] Auto table: parameter  ${month} in orders${month} still has not value, will be ignore it!
[INFO] [Bee] select SQL: select orders.id,orders.userid,orders.name,orders.total,orders.createtime,orders.remark,orders.sequence,orders.abc,orders.updatetime,test_user.id,test_user.email,test_user.last_name,test_user.name,test_user.password,test_user.username,test_user.createtime from orders,test_user where orders.userid=test_user.username and orders.name=test_user.name and orders.userid=? and orders.name=? and test_user.name=? limit ?,?   [values]: bee(String),Bee(String),Bee(String),0(Integer),5(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select orders.id,orders.userid,orders.name,orders.total,orders.createtime,orders.remark,orders.sequence,orders.abc,orders.updatetime,test_user.id,test_user.email,test_user.last_name,test_user.name,test_user.password,test_user.username,test_user.createtime from orders,test_user where orders.userid=test_user.username and orders.name=test_user.name and orders.userid='bee' and orders.name='Bee' and test_user.name='Bee' limit 0,5 ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 3
[INFO] [bee-exam] ====================PagingExam.test======end.

[INFO] [bee-exam] ====================DeleteBy.test======start:
[INFO] [Bee] deleteById SQL: delete from orders where id=?   [values]: 100022(Long)
[INFO] [Bee] deleteById SQL:  ( ExecutableSql )
delete from orders where id=100022 ;
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] deleteById SQL: delete from orders where id=?   [values]: 100023(Long)
[INFO] [Bee] deleteById SQL:  ( ExecutableSql )
delete from orders where id=100023 ;
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] select SQL(selectFields) : select name, total from orders where userid=?   [values]: bee(String)
[INFO] [Bee] select SQL(selectFields) :  ( ExecutableSql )
select name, total from orders where userid='bee' ;
[INFO] [Bee]  | <--  select rows: 5
[WARN] in method selectById,id is null! 
[INFO] [bee-exam] ====================DeleteBy.test======end.

[INFO] [bee-exam] ====================SearchExam.test======start:
[INFO] [Bee] select SQL: select id,email,last_name,name,password,username,createtime from test_user where id between ? and ? or id between ? and ? or name=? and (id between ? and ?) and id not between ? and ? and name like ?   [values]: 100023(Long),100025(Long),100030(Long),100035(Long),Bee(String),100040(Long),100049(Long),100040(Long),100049(Long),Bee(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,email,last_name,name,password,username,createtime from test_user where id between 100023 and 100025 or id between 100030 and 100035 or name='Bee' and (id between 100040 and 100049) and id not between 100040 and 100049 and name like 'Bee' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [bee-exam] ====================SearchExam.test======end.

[INFO] [bee-exam] ====================DdlTest.test======start:
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS no_type_how_ddl   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS no_type_how_ddl
[INFO] [Bee]  | <--  Affected rows: 0
[WARN] The java type:null has not the relative database column type!
[WARN] It will be replace with type: varchar(255)
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE no_type_how_ddl (
name  varchar(255) DEFAULT NULL,  
list  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [bee-exam] ====================DdlTest.test======end.

[INFO] [bee-exam] ====================IntSerialIdTest.test======start:
[INFO] [Bee] insert SQL: insert into orders(id,name) values (?,?)   [values]: 158872089(Integer),Bee(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,name) values (158872089,'Bee') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] insert SQL: insert into orders(id,name) values (?,?)   [values]: 158872090(Integer),Bee(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,name) values (158872090,'Bee') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 158872091(Integer),null(String),Bee(String),null(java.math.BigDecimal),null(String),null(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index0] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (158872091,null,'Bee',null,null,null,null,null,null) ; ;
[INFO] [Bee] --> index:1 ,  [values]: 158872092(Integer),null(String),Bee(String),null(java.math.BigDecimal),null(String),2222(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index1] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (158872092,null,'Bee',null,null,'2222',null,null,null) ; ;
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 2
[INFO] [Bee] In MapSuid, insert SQL: insert into test_user (email,password,last_name,id) values (?,?,?,?)   [values]: test@gmail.com(String),password@gmail.com(String),MapSuid(String),158872083(Integer)
[INFO] [Bee] In MapSuid, insert SQL:  ( ExecutableSql )
insert into test_user (email,password,last_name,id) values ('test@gmail.com','password@gmail.com','MapSuid',158872083) ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] 1
[INFO] [bee-exam] ====================IntSerialIdTest.test======end.

[INFO] [bee-exam] ====================StringIdTest.test======start:
[INFO] [Bee] insert SQL: insert into orders_id_string(id,name) values (?,?)   [values]: 78088939503635(String),Bee(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders_id_string(id,name) values ('78088939503635','Bee') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee]  insert[] SQL : insert into orders_id_string(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 78088939503636(String),null(String),Bee(String),null(java.math.BigDecimal),null(String),null(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index0] )
insert into orders_id_string(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values ('78088939503636',null,'Bee',null,null,null,null,null,null) ; ;
[INFO] [Bee] --> index:1 ,  [values]: 78088939503637(String),null(String),Bee(String),null(java.math.BigDecimal),null(String),2222(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index1] )
insert into orders_id_string(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values ('78088939503637',null,'Bee',null,null,'2222',null,null,null) ; ;
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 2
[INFO] [Bee] In MapSuid, insert SQL: insert into test_user (email,password,last_name,id) values (?,?,?,?)   [values]: test@gmail.com(String),password@gmail.com(String),MapSuid(String),158872084(Integer)
[INFO] [Bee] In MapSuid, insert SQL:  ( ExecutableSql )
insert into test_user (email,password,last_name,id) values ('test@gmail.com','password@gmail.com','MapSuid',158872084) ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] 1
[INFO] [bee-exam] ====================StringIdTest.test======end.

[INFO] [bee-exam] ====================StringIdUUIDTest.test======start:
[INFO] [Bee] select SQL(entity,size): select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders3 limit ?,?   [values]: 0(Integer),1(Integer)
[INFO] [Bee] select SQL(entity,size):  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders3 limit 0,1 ;
[INFO] [Bee]  | <--  select rows: 0
[WARN] The database exist the table : orders3
[INFO] [Bee] insert SQL: insert into orders3(id,name) values (?,?)   [values]: 94ff43c1c1e947a8992e03b65c9539ad(String),Bee(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders3(id,name) values ('94ff43c1c1e947a8992e03b65c9539ad','Bee') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee]  insert[] SQL : insert into orders3(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 255f781b4b284ae6805ef9272ff52674(String),null(String),Bee(String),null(java.math.BigDecimal),null(String),null(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index0] )
insert into orders3(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values ('255f781b4b284ae6805ef9272ff52674',null,'Bee',null,null,null,null,null,null) ; ;
[INFO] [Bee] --> index:1 ,  [values]: 357ee72972d34d9abb7322982b368dde(String),null(String),Bee(String),null(java.math.BigDecimal),null(String),2222(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index1] )
insert into orders3(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values ('357ee72972d34d9abb7322982b368dde',null,'Bee',null,null,'2222',null,null,null) ; ;
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 2
[INFO] [Bee] In MapSuid, insert SQL: insert into test_user (email,password,last_name,id) values (?,?,?,?)   [values]: test@gmail.com(String),password@gmail.com(String),MapSuid(String),158872085(Integer)
[INFO] [Bee] In MapSuid, insert SQL:  ( ExecutableSql )
insert into test_user (email,password,last_name,id) values ('test@gmail.com','password@gmail.com','MapSuid',158872085) ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] 1
[INFO] [bee-exam] ====================StringIdUUIDTest.test======end.

[INFO] [bee-exam] ====================NotLongId.test======start:
[INFO] [Bee] insert SQL: insert into noid(uuid,name,num) values (?,?,?)   [values]: cf7e236e564144a081765a9ea925eb37(String),Bee(String),100(Integer)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into noid(uuid,name,num) values ('cf7e236e564144a081765a9ea925eb37','Bee',100) ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] insert SQL: insert into Noid(uuid,name,num) values (?,?,?)   [values]: 78088943697933(String),Bee(String),200(Integer)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into Noid(uuid,name,num) values ('78088943697933','Bee',200) ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] insert SQL: insert into Noid(uuid,name,num) values (?,?,?)   [values]: 78088943697934(String),Bee(String),200(Integer)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into Noid(uuid,name,num) values ('78088943697934','Bee',200) ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] update SQL: update Noid set name=? , num=? where uuid=?   [values]: Bee(String),300(Integer),78088943697934(String)
[INFO] [Bee] update SQL:  ( ExecutableSql )
update Noid set name='Bee' , num=300 where uuid='78088943697934' ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] insert SQL: insert into noid(uuid,name,num) values (?,?,?)   [values]: 545c8734d018465f94e163cde4c46365(String),Bee(String),200(Integer)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into noid(uuid,name,num) values ('545c8734d018465f94e163cde4c46365','Bee',200) ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] update SQL: update noid set name=? , num=? where uuid=?   [values]: Bee(String),400(Integer),545c8734d018465f94e163cde4c46365(String)
[INFO] [Bee] update SQL:  ( ExecutableSql )
update noid set name='Bee' , num=400 where uuid='545c8734d018465f94e163cde4c46365' ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] update SQL(whereFields) :update noid set num=? where uuid=? and name=?   [values]: 400(Integer),545c8734d018465f94e163cde4c46365(String),Bee(String)
[INFO] [Bee] update SQL(whereFields) : ( ExecutableSql )
update noid set num=400 where uuid='545c8734d018465f94e163cde4c46365' and name='Bee' ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] update SQL(updateFields) :update noid set num=? where uuid=? and name=?   [values]: 400(Integer),545c8734d018465f94e163cde4c46365(String),Bee(String)
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update noid set num=400 where uuid='545c8734d018465f94e163cde4c46365' and name='Bee' ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL(entity,size): select uuid,name,num,remark from noid limit ?,?   [values]: 0(Integer),3(Integer)
[INFO] [Bee] select SQL(entity,size):  ( ExecutableSql )
select uuid,name,num,remark from noid limit 0,3 ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 3
[INFO] Noid[uuid=cf7e236e564144a081765a9ea925eb37,name=Bee,num=100,remark=null]
[INFO] Noid[uuid=78088943697933,name=Bee,num=200,remark=null]
[INFO] Noid[uuid=78088943697934,name=Bee,num=300,remark=null]
[INFO] [Bee] select(entity,start,size) SQL: select uuid,name,num,remark from noid limit ?,?   [values]: 2(Integer),3(Integer)
[INFO] [Bee] select(entity,start,size) SQL:  ( ExecutableSql )
select uuid,name,num,remark from noid limit 2,3 ;
[INFO] [Bee]  | <--  select rows: 2
[INFO] [Bee] select(entity,selectFields,start,size) SQL: select uuid from noid limit ?,?   [values]: 0(Integer),3(Integer)
[INFO] [Bee] select(entity,selectFields,start,size) SQL:  ( ExecutableSql )
select uuid from noid limit 0,3 ;
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select(entity,selectFields,start,size) SQL: select uuid from noid limit ?,?   [values]: 0(Integer),3(Integer)
[INFO] [Bee] select(entity,selectFields,start,size) SQL:  ( ExecutableSql )
select uuid from noid limit 0,3 ;
[INFO] [Bee] selectJson(T entity, String selectField, int start, int size) SQL: select uuid from noid limit ?,?   [values]: 0(Integer),3(Integer)
[INFO] [Bee] selectJson(T entity, String selectField, int start, int size) SQL:  ( ExecutableSql )
select uuid from noid limit 0,3 ;
[INFO] [{"uuid":"cf7e236e564144a081765a9ea925eb37"},{"uuid":"78088943697933"},{"uuid":"78088943697934"}]
[INFO] [Bee] select SQL: select uuid,name,num,remark from noid limit ?,?   [values]: 0(Integer),5(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select uuid,name,num,remark from noid limit 0,5 ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 4
[INFO] Noid[uuid=cf7e236e564144a081765a9ea925eb37,name=Bee,num=100,remark=null]
[INFO] Noid[uuid=78088943697933,name=Bee,num=200,remark=null]
[INFO] Noid[uuid=78088943697934,name=Bee,num=300,remark=null]
[INFO] Noid[uuid=545c8734d018465f94e163cde4c46365,name=Bee,num=400,remark=null]
[INFO] [Bee] select(entity,start,size) SQL: select uu_id,name,num,remark from noid2 limit ?,?   [values]: 2(Integer),3(Integer)
[INFO] [Bee] select(entity,start,size) SQL:  ( ExecutableSql )
select uu_id,name,num,remark from noid2 limit 2,3 ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select(entity,selectFields,start,size) SQL: select uu_id from noid2 limit ?,?   [values]: 0(Integer),3(Integer)
[INFO] [Bee] select(entity,selectFields,start,size) SQL:  ( ExecutableSql )
select uu_id from noid2 limit 0,3 ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select uuid,name,num,remark from Noid limit ?,?   [values]: 0(Integer),5(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select uuid,name,num,remark from Noid limit 0,5 ;
[INFO] [Bee]  | <--  select rows: 4
[INFO] [bee-exam] ====================NotLongId.test======end.

[INFO] [bee-exam] ====================ColumnAnnoTest.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 25
[INFO] [Bee] update SQL: update orders set name=? where id=?   [values]: Bee--ORM Framework(String),1000(Long)
[INFO] [Bee] update SQL:  ( ExecutableSql )
update orders set name='Bee--ORM Framework' where id=1000 ;
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] insert SQL: insert into orders(id,userid) values (?,?)   [values]: 78088901755259(Long),bee(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,userid) values (78088901755259,'bee') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [bee-exam] ====================ColumnAnnoTest.test======end.

[INFO] [bee-exam] ====================LikeTest.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee]  | <--  select rows: 26
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like ?   [values]: test\%(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like 'test\%' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like ?   [values]: test%(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like 'test%' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like ?   [values]: test_(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like 'test_' ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like ?   [values]: test\_(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like 'test\_' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like ?   [values]: %test(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like '%test' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like ?   [values]: test%(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like 'test%' ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like ?   [values]: %test%(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like '%test%' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like ?   [values]: %test\%(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like '%test\%' ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like ?   [values]: %test\%(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like '%test\%' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like ?   [values]: %test\_(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like '%test\_' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like ?   [values]: %test\u0025(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like '%testu0025' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like ?   [values]: \%\%(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like '\%\%' ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like ?   [values]: %\%(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like '%\%' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like ?   [values]: \\u0025(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like '\u0025' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [bee-exam] ====================LikeTest.test======end.

[INFO] [bee-exam] ====================DiffNamingTest.test======start:
[INFO] [Bee] select SQL(entity,size): select ID,USERID,NAME,TOTAL,CREATETIME,REMARK,SEQUENCE,ABC,UPDATETIME from ORDERS limit ?,?   [values]: 0(Integer),10(Integer)
[INFO] [Bee] select SQL(entity,size):  ( ExecutableSql )
select ID,USERID,NAME,TOTAL,CREATETIME,REMARK,SEQUENCE,ABC,UPDATETIME from ORDERS limit 0,10 ;
[INFO] [Bee]  | <--  select rows: 10
[INFO] Orders[id=121,userid=1001,name=bee,total=null,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=122,userid=1001,name=bee,total=null,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=123,userid=1001,name=bee,total=null,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1004,userid=client01,name=null,total=91.000000,createtime=null,remark=change Remark,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1007,userid=client01,name=null,total=91.000000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=10010,userid=client01,name=null,total=91.000000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.010000,createtime=2020-03-02 11:29:28,remark=null,sequence=12345601,abc=test1,updatetime=2022-08-04 11:39:34]
[INFO] Orders[id=100002,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=100003,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=100018,userid=client18,name=null,total=18.180000,createtime=null,remark=test insert and delete,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] select SQL(entity,size): select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders limit ?,?   [values]: 0(Integer),10(Integer)
[INFO] [Bee] select SQL(entity,size):  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders limit 0,10 ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 10
[INFO] Orders[id=121,userid=1001,name=bee,total=null,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=122,userid=1001,name=bee,total=null,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=123,userid=1001,name=bee,total=null,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1004,userid=client01,name=null,total=91.000000,createtime=null,remark=change Remark,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1007,userid=client01,name=null,total=91.000000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=10010,userid=client01,name=null,total=91.000000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.010000,createtime=2020-03-02 11:29:28,remark=null,sequence=12345601,abc=test1,updatetime=2022-08-04 11:39:34]
[INFO] Orders[id=100002,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=100003,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=100018,userid=client18,name=null,total=18.180000,createtime=null,remark=test insert and delete,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] select SQL(entity,size): select ID,USERID,NAME,TOTAL,CREATETIME,REMARK,SEQUENCE,ABC,UPDATETIME from ORDERS limit ?,?   [values]: 0(Integer),10(Integer)
[INFO] [Bee] select SQL(entity,size):  ( ExecutableSql )
select ID,USERID,NAME,TOTAL,CREATETIME,REMARK,SEQUENCE,ABC,UPDATETIME from ORDERS limit 0,10 ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 10
[INFO] Orders[id=121,userid=1001,name=bee,total=null,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=122,userid=1001,name=bee,total=null,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=123,userid=1001,name=bee,total=null,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1004,userid=client01,name=null,total=91.000000,createtime=null,remark=change Remark,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1007,userid=client01,name=null,total=91.000000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=10010,userid=client01,name=null,total=91.000000,createtime=null,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.010000,createtime=2020-03-02 11:29:28,remark=null,sequence=12345601,abc=test1,updatetime=2022-08-04 11:39:34]
[INFO] Orders[id=100002,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=100003,userid=bee,name=Bee,total=100.000000,createtime=null,remark=new2,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=100018,userid=client18,name=null,total=18.180000,createtime=null,remark=test insert and delete,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] select SQL(entity,size): select ID,USERID,NAME,TOTAL,CREATETIME,REMARK,SEQUENCE,ABC,UPDATETIME from ORDERS limit ?,?   [values]: 0(Integer),10(Integer)
[INFO] [Bee] select SQL(entity,size):  ( ExecutableSql )
select ID,USERID,NAME,TOTAL,CREATETIME,REMARK,SEQUENCE,ABC,UPDATETIME from ORDERS limit 0,10 ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 10
[INFO] [bee-exam] ====================DiffNamingTest.test======end.

[INFO] [bee-exam] ====================DateTypeTest.test======start:
[INFO] [Bee] delete SQL: delete from date_type   [values]: 
[INFO] [Bee] delete SQL:  ( ExecutableSql )
delete from date_type
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] insert SQL: insert into date_type(id,date1,date3,date2,remark) values (?,?,?,?,?)   [values]: 78088943697927(Long),Thu Aug 04 11:39:37 CST 2022(java.util.Date),Thu Aug 04 11:39:37 CST 2022(java.util.Date),2022-08-04(java.sql.Date),test dateType2(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into date_type(id,date1,date3,date2,remark) values (78088943697927,Thu Aug 04 11:39:37 CST 2022,Thu Aug 04 11:39:37 CST 2022,2022-08-04,'test dateType2') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL: select id,date1,date3,date2,remark from date_type   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,date1,date3,date2,remark from date_type
[INFO] [Bee]  | <--  select rows: 1
[INFO] DateType[id=78088943697927,date1=2022-08-04 00:00:00.0,date2=2022-08-04,date3=2022-08-04 00:00:00.0,remark=test dateType2]
[INFO] [bee-exam] ====================DateTypeTest.test======end.

