[INFO] [Bee] PreparedSql modify SQL: DROP TABLE IF EXISTS `test_primary_key`;    [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
DROP TABLE IF EXISTS `test_primary_key`; 
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  CREATE TABLE `test_primary_key` (  `myid` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(100) COLLATE utf8_bin DEFAULT NULL,  `remark` varchar(100) COLLATE utf8_bin DEFAULT NULL,  `remark2` varchar(100) COLLATE utf8_bin DEFAULT NULL,  PRIMARY KEY (`myid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 CREATE TABLE `test_primary_key` (  `myid` bigint(20) NOT NULL AUTO_INCREMENT, `name` varchar(100) COLLATE utf8_bin DEFAULT NULL,  `remark` varchar(100) COLLATE utf8_bin DEFAULT NULL,  `remark2` varchar(100) COLLATE utf8_bin DEFAULT NULL,  PRIMARY KEY (`myid`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
[INFO] [Bee]  | <--  Affected rows: 0
[WARN] Auto table: parameter  ${month} in Orders${month} still has not value, will be ignore it!
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS Orders   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS Orders
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE Orders (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
userid  varchar(255) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
total  DECIMAL(19,6) DEFAULT NULL,  
createtime  varchar(255) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL,  
sequence  varchar(255) DEFAULT NULL,  
abc  varchar(255) DEFAULT NULL,  
updatetime  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS Orders_202007   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS Orders_202007
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE Orders_202007 (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
userid  varchar(255) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
total  DECIMAL(19,6) DEFAULT NULL,  
createtime  varchar(255) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL,  
sequence  varchar(255) DEFAULT NULL,  
abc  varchar(255) DEFAULT NULL,  
updatetime  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS test_user   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS test_user
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE test_user (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
email  varchar(255) DEFAULT NULL,  
last_name  varchar(255) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
password  varchar(255) DEFAULT NULL,  
username  varchar(255) DEFAULT NULL,  
createtime  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS leaf_alloc   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS leaf_alloc
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE leaf_alloc (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
biz_tag  varchar(255) DEFAULT NULL,  
max_id  bigint(20) DEFAULT NULL,  
step  int(11) DEFAULT NULL,  
description  varchar(255) DEFAULT NULL,  
update_time  timestamp DEFAULT CURRENT_TIMESTAMP,  
version  int(11) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS leaf_alloc2   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS leaf_alloc2
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE leaf_alloc2 (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
biz_tag  varchar(255) DEFAULT NULL,  
max_id  bigint(20) DEFAULT NULL,  
step  int(11) DEFAULT NULL,  
description  varchar(255) DEFAULT NULL,  
update_time  varchar(255) DEFAULT NULL,  
version  int(11) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS leaf_alloc3   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS leaf_alloc3
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE leaf_alloc3 (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
biz_tag  varchar(255) DEFAULT NULL,  
max_id  bigint(20) DEFAULT NULL,  
step  int(11) DEFAULT NULL,  
description  varchar(255) DEFAULT NULL,  
update_time  varchar(255) DEFAULT NULL,  
version  int(11) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS scores   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS scores
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE scores (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
classno  varchar(255) DEFAULT NULL,  
term  varchar(255) DEFAULT NULL,  
examno  varchar(255) DEFAULT NULL,  
subjectno  varchar(255) DEFAULT NULL,  
subject  varchar(255) DEFAULT NULL,  
stuno  varchar(255) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
teacherno  varchar(255) DEFAULT NULL,  
teachername  varchar(255) DEFAULT NULL,  
score  Double DEFAULT NULL,  
creater  varchar(255) DEFAULT NULL,  
createtime  timestamp DEFAULT CURRENT_TIMESTAMP,  
updater  varchar(255) DEFAULT NULL,  
updatetime  timestamp DEFAULT CURRENT_TIMESTAMP,  
remark  varchar(255) DEFAULT NULL,  
ext1  varchar(255) DEFAULT NULL,  
status  varchar(255) DEFAULT NULL,  
schoolno  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS assignexam   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS assignexam
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE assignexam (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
classno  varchar(255) DEFAULT NULL,  
term  varchar(255) DEFAULT NULL,  
examno  varchar(255) DEFAULT NULL,  
subjectno  varchar(255) DEFAULT NULL,  
subject  varchar(255) DEFAULT NULL,  
creater  varchar(255) DEFAULT NULL,  
createtime  timestamp DEFAULT CURRENT_TIMESTAMP,  
updater  varchar(255) DEFAULT NULL,  
updatetime  timestamp DEFAULT CURRENT_TIMESTAMP,  
remark  varchar(255) DEFAULT NULL,  
ext1  varchar(255) DEFAULT NULL,  
status  varchar(255) DEFAULT NULL,  
schoolno  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS assigncourse   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS assigncourse
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE assigncourse (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
classno  varchar(255) DEFAULT NULL,  
term  varchar(255) DEFAULT NULL,  
teacherno  varchar(255) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
subjectno  varchar(255) DEFAULT NULL,  
subject  varchar(255) DEFAULT NULL,  
creater  varchar(255) DEFAULT NULL,  
createtime  timestamp DEFAULT CURRENT_TIMESTAMP,  
updater  varchar(255) DEFAULT NULL,  
updatetime  timestamp DEFAULT CURRENT_TIMESTAMP,  
remark  varchar(255) DEFAULT NULL,  
status  varchar(255) DEFAULT NULL,  
schoolno  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS clazz   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS clazz
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE clazz (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
classname  varchar(255) DEFAULT NULL,  
place  varchar(255) DEFAULT NULL,  
teachername  varchar(255) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS student   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS student
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE student (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
sid  int(11) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
age  int(11) DEFAULT NULL,  
sex  BIT DEFAULT NULL,  
majorid  varchar(255) DEFAULT NULL,  
flag  BIT DEFAULT NULL,  
classno  int(11) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS student_hobby   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS student_hobby
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE student_hobby (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
stu_id  varchar(255) DEFAULT NULL,  
hobby  varchar(255) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS Noid   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS Noid
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE Noid (
uuid  varchar(255) PRIMARY KEY NOT NULL,  
name  varchar(255) DEFAULT NULL,  
num  int(11) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS noid   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS noid
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE noid (
uuid  varchar(255) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
num  int(11) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL,  
ch  char(1) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS noid2   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS noid2
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE noid2 (
uu_id  varchar(255) PRIMARY KEY NOT NULL,  
name  varchar(255) DEFAULT NULL,  
num  int(11) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS orders3   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS orders3
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE orders3 (
id  varchar(255) PRIMARY KEY NOT NULL,  
userid  varchar(255) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
total  DECIMAL(19,6) DEFAULT NULL,  
createtime  varchar(255) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL,  
sequence  varchar(255) DEFAULT NULL,  
abc  varchar(255) DEFAULT NULL,  
updatetime  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS orders_id_string   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS orders_id_string
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE orders_id_string (
id  varchar(255) PRIMARY KEY NOT NULL,  
userid  varchar(255) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
total  DECIMAL(19,6) DEFAULT NULL,  
createtime  varchar(255) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL,  
sequence  varchar(255) DEFAULT NULL,  
abc  varchar(255) DEFAULT NULL,  
updatetime  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS date_type   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS date_type
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE date_type (
id  bigint(20) PRIMARY KEY NOT NULL AUTO_INCREMENT,  
date1  datetime DEFAULT CURRENT_TIMESTAMP,  
date3  datetime DEFAULT CURRENT_TIMESTAMP,  
date2  datetime DEFAULT CURRENT_TIMESTAMP,  
remark  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL:  DROP TABLE IF EXISTS test_primary_key   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
 DROP TABLE IF EXISTS test_primary_key
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: CREATE TABLE test_primary_key (
myid  bigint(20) DEFAULT NULL,  
name  varchar(255) DEFAULT NULL,  
remark  varchar(255) DEFAULT NULL,  
remark2  varchar(255) DEFAULT NULL
 )
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO orders VALUES ('100001', 'Bee', 'Bee(ORM Framework)', '95.01', '2020-03-02 11:29:28', 'test', '12345601', 'test1', null);
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO orders VALUES ('100002', 'bee', 'Bee', '96.01', '2020-03-02 11:29:28', 'test%a', '12345602', 'test2', '2020-03-02 16:34:19');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO orders VALUES ('100003', 'bee', 'Bee', '97.01', '2020-03-02 11:29:28', 'testx%', '12345603', 'test3', '2020-03-02 16:34:19');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO orders_202007 VALUES ('100001', 'Bee', 'Bee(ORM Framework)', '95.01', '2020-03-02 11:29:28', 'test', '12345601', 'test1', null);
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO orders_202007 VALUES ('100002', 'bee', 'Bee', '96.01', '2020-03-02 11:29:28', 'test%a', '12345602', 'test2', '2020-03-02 16:34:19');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO orders_202007 VALUES ('100003', 'bee', 'Bee', '97.01', '2020-03-02 11:29:28', 'testx%', '12345603', 'test3', '2020-03-02 16:34:19');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO test_user VALUES ('800001', 'beeUser@163.com', null, 'Bee', 'bee', 'bee', null);   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
INSERT INTO test_user VALUES ('800001', 'beeUser@163.com', null, 'Bee', 'bee', 'bee', null);
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO test_user VALUES ('800002', 'honey@163.com', 'cn', 'Honey', 'honey', 'honey', null);   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
INSERT INTO test_user VALUES ('800002', 'honey@163.com', 'cn', 'Honey', 'honey', 'honey', null);
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc3 VALUES ('456537470402562', 'test', '100', '100', 'test segment', '2020-07-04 22:42:09', '1');   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
INSERT INTO leaf_alloc3 VALUES ('456537470402562', 'test', '100', '100', 'test segment', '2020-07-04 22:42:09', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc3 VALUES ('456537470402563', 'order', '100', '100', 'order segment', '2020-07-04 22:42:10', '1');   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
INSERT INTO leaf_alloc3 VALUES ('456537470402563', 'order', '100', '100', 'order segment', '2020-07-04 22:42:10', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc3 VALUES ('456537470402564', 'bee', '100', '100', 'order segment', '2020-09-19 19:05:10', '1');   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
INSERT INTO leaf_alloc3 VALUES ('456537470402564', 'bee', '100', '100', 'order segment', '2020-09-19 19:05:10', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc2 VALUES ('456537470402562', 'test', '100', '100', 'test segment', '2020-07-04 22:42:09', '1');   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
INSERT INTO leaf_alloc2 VALUES ('456537470402562', 'test', '100', '100', 'test segment', '2020-07-04 22:42:09', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc2 VALUES ('456537470402563', 'order', '100', '100', 'order segment', '2020-07-04 22:42:10', '1');   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
INSERT INTO leaf_alloc2 VALUES ('456537470402563', 'order', '100', '100', 'order segment', '2020-07-04 22:42:10', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc2 VALUES ('456537470402564', 'bee', '100', '100', 'order segment', '2020-09-19 19:05:10', '1');   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
INSERT INTO leaf_alloc2 VALUES ('456537470402564', 'bee', '100', '100', 'order segment', '2020-09-19 19:05:10', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc(id,biz_tag,max_id,step,description,version) VALUES ('456537470402562', 'test', '100', '100', 'test segment', '1');   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
INSERT INTO leaf_alloc(id,biz_tag,max_id,step,description,version) VALUES ('456537470402562', 'test', '100', '100', 'test segment', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc(id,biz_tag,max_id,step,description,version) VALUES ('456537470402563', 'order', '100', '100', 'test segment', '1');   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
INSERT INTO leaf_alloc(id,biz_tag,max_id,step,description,version) VALUES ('456537470402563', 'order', '100', '100', 'test segment', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSql modify SQL: INSERT INTO leaf_alloc(id,biz_tag,max_id,step,description,version) VALUES ('456537470402564', 'bee', '100', '100', 'test segment', '1');   [values]: 
[INFO] [Bee] PreparedSql modify SQL:  ( ExecutableSql )
INSERT INTO leaf_alloc(id,biz_tag,max_id,step,description,version) VALUES ('456537470402564', 'bee', '100', '100', 'test segment', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [bee-exam] ====================CacheTest.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee0(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee0' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001(Long),Bee(ORM Framework)(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 and name='Bee(ORM Framework)' ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] update SQL: update orders set name=? , remark=? where id=?   [values]: Bee(ORM Framework)(String),other(String),100001(Long)
[INFO] [Bee] update SQL:  ( ExecutableSql )
update orders set name='Bee(ORM Framework)' , remark='other' where id=100001 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=? and remark=?   [values]: 100001(Long),Bee(ORM Framework)(String),other(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 and name='Bee(ORM Framework)' and remark='other' ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=?   [values]: bee2(String),Bee--ORM Framework(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee2' and name='Bee--ORM Framework' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee3(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee3' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee4(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee4' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee5(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee5' ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee6(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee6' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee6(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee6' ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee3(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee3' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee7(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee7' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee8(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee8' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee9(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee9' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee10(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee10' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee3(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee3' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee8(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee8' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee11(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee11' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee11(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee11' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee8(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee8' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [bee-exam] ====================CacheTest.test======end.

[INFO] [bee-exam] ====================CacheTestDel.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee0(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee0' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001(Long),Bee(ORM Framework)(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 and name='Bee(ORM Framework)' ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] update SQL: update orders set name=? , remark=? where id=?   [values]: Bee(ORM Framework)(String),other(String),100001(Long)
[INFO] [Bee] update SQL:  ( ExecutableSql )
update orders set name='Bee(ORM Framework)' , remark='other' where id=100001 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=? and remark=?   [values]: 100001(Long),Bee(ORM Framework)(String),other(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 and name='Bee(ORM Framework)' and remark='other' ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=?   [values]: bee2(String),Bee--ORM Framework(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee2' and name='Bee--ORM Framework' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee3(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee3' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee4(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee4' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee5(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee5' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee6(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee6' ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee7(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee7' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee8(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee8' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee3(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee3' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee7(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee7' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee8(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee8' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee9(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee9' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee10(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee10' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee3(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee3' ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee8(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee8' ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee11(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee11' ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee11(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee11' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee8(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee8' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [bee-exam] ====================CacheTestDel.test======end.

[INFO] [bee-exam] ====================CacheTestInsertArray.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee0(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee0' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001(Long),Bee--ORM Framework(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 and name='Bee--ORM Framework' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee0(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee0' ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] update SQL: update orders set name=? , remark=? where id=?   [values]: Bee--ORM Framework(String),other(String),100001(Long)
[INFO] [Bee] update SQL:  ( ExecutableSql )
update orders set name='Bee--ORM Framework' , remark='other' where id=100001 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 78088901755260(Long),bee4(String),null(String),12.3(java.math.BigDecimal),null(String),null(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index0] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (78088901755260,'bee4',null,12.3,null,null,null,null,null) ; ;
[INFO] [Bee] --> index:1 ,  [values]: 78088901755261(Long),bee5(String),null(String),12.3(java.math.BigDecimal),null(String),null(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index1] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (78088901755261,'bee5',null,12.3,null,null,null,null,null) ; ;
[INFO] [Bee] --> index:2 ,  [values]: 78088901755262(Long),bee6(String),null(String),12.3(java.math.BigDecimal),null(String),null(String),null(String),null(String),null(String)
[INFO] [Bee]  insert[] SQL :  ( ExecutableSql [index2] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (78088901755262,'bee6',null,12.3,null,null,null,null,null) ; ;
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 3
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=? and remark=?   [values]: 100001(Long),Bee--ORM Framework(String),other(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 and name='Bee--ORM Framework' and remark='other' ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=?   [values]: bee2(String),Bee--ORM Framework(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee2' and name='Bee--ORM Framework' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee3(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee3' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and total=?   [values]: bee4(String),12.3(java.math.BigDecimal)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee4' and total=12.3 ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and total=?   [values]: bee5(String),12.3(java.math.BigDecimal)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee5' and total=12.3 ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and total=?   [values]: bee6(String),12.3(java.math.BigDecimal)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee6' and total=12.3 ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee3(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee3' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee7(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee7' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee8(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee8' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee9(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee9' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee10(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee10' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee3(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee3' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee8(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee8' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee11(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee11' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee11(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee11' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee8(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee8' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [bee-exam] ====================CacheTestInsertArray.test======end.

[INFO] [bee-exam] ====================CacheTestJson.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee0(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee0' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001(Long),Bee--ORM Framework(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 and name='Bee--ORM Framework' ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=?   [values]: bee2(String),Bee--ORM Framework(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee2' and name='Bee--ORM Framework' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee3(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee3' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee4(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee4' ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee5(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee5' ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee6(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee6' ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] selectJson SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee6(String)
[INFO] [Bee] selectJson SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee6' ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: bee3(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee3' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [bee-exam] ====================CacheTestJson.test======end.

[INFO] 2022-08-04 11:41:43  test cache Finished!
[DEBUG] Override file:  D:\JavaWeb\workspaceGit19\bee-exam\src\main\java\entity\Orders.java
[INFO] The Honey gen the JavaBean: entity.Orders
[DEBUG] Override file:  D:\JavaWeb\workspaceGit19\bee-exam\src\main\java\entity\field\Orders_F.java
[INFO] The Honey gen the FieldFile for JavaBean: entity.field.Orders_F
[INFO] Generate Success!
[INFO] Please check folder: D:\JavaWeb\workspaceGit19\bee-exam\src\main\java\entity
[INFO] Create file: D:\JavaWeb\workspaceGit19\bee-exam\src\main\java\org\teasoft\exam\bee\osql\autogen\OrderhistoryRest.java
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100001(Long)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100001(Long)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100001(Long)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[WARN] Do not get the new Connection in the SameConnection.Maybe all the results get from cache! 
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100002(Long)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100002 ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100002(Long)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100002 ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[WARN] Calling the endSameConnection(), but miss the beginSameConnection()
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100003(Long)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100003 ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100003(Long)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100003 ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100003(Long)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100003 ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and id=? limit ?,? for update    [values]: 100003(Long),100003(Integer),0(Integer),300(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100003 and id=100003 limit 0,300 for update  ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100003,userid=bee,name=Bee,total=97.010000,createtime=2020-03-02 11:29:28,remark=testx%,sequence=12345603,abc=test3,updatetime=2020-03-02 16:34:19]
[INFO] [Bee] update SQL: update orders set userid=? , name=? , total=? , createtime=? , remark=? , sequence=? , abc=? , updatetime=? where id=?   [values]: bee(String),Bee(String),97.010000(java.math.BigDecimal),2020-03-02 11:29:28(String),testx%(String),12345603(String),test3(String),2020-03-02 16:34:19(String),100003(Long)
[INFO] [Bee] update SQL:  ( ExecutableSql )
update orders set userid='bee' , name='Bee' , total=97.010000 , createtime='2020-03-02 11:29:28' , remark='testx%' , sequence='12345603' , abc='test3' , updatetime='2020-03-02 16:34:19' where id=100003 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100008(Long)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100008 ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100004(Long)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100004 ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100004(Long)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100004 ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100004(Long)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100004 ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and id=? limit ?,? for update    [values]: 100004(Long),100003(Integer),0(Integer),300(Integer)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100004 and id=100003 limit 0,300 for update  ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100004(Long)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100004 ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100004(Long)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100004 ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 100002(Long)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100002 ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] update SQL: update orders set name=? where id=?   [values]: Bee(ORM Framework)(String),100002(Long)
[INFO] [Bee] update SQL:  ( ExecutableSql )
update orders set name='Bee(ORM Framework)' where id=100002 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100002(Long),Bee(ORM Framework)(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100002 and name='Bee(ORM Framework)' ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] ------------------------getId : null
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,remark) values (?,?,?,?,?)   [values]: 78088901755263(Long),Bee(String),Bee(ORM Framework)(String),80.80(java.math.BigDecimal),InsertAndReturnId(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,userid,name,total,remark) values (78088901755263,'Bee','Bee(ORM Framework)',80.80,'InsertAndReturnId') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 78088901755263
[INFO] ------------------------getId : null
[INFO] [Bee] selectById SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 78088901755263(Long)
[INFO] [Bee] selectById SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=78088901755263 ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=78088901755263,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=null,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,remark) values (?,?,?,?,?)   [values]: 78088901755264(Long),Bee(String),Bee(ORM Framework)(String),80.80(java.math.BigDecimal),InsertAndReturnId(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,userid,name,total,remark) values (78088901755264,'Bee','Bee(ORM Framework)',80.80,'InsertAndReturnId') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 78088901755264
[INFO] ------------------11------getId : null
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,remark) values (?,?,?,?,?)   [values]: 78088901755265(Long),Bee(String),Bee(ORM Framework)(String),80.80(java.math.BigDecimal),InsertAndReturnId(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,userid,name,total,remark) values (78088901755265,'Bee','Bee(ORM Framework)',80.80,'InsertAndReturnId') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] -------------------11-----getId : null
[INFO] ------------------------getId : null
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,remark) values (?,?,?,?)   [values]: Bee(String),Bee(ORM Framework)(String),80.80(java.math.BigDecimal),InsertAndReturnId(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(userid,name,total,remark) values ('Bee','Bee(ORM Framework)',80.80,'InsertAndReturnId') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 78088901755266
[INFO] ------------------------getId : null
[INFO] [Bee] selectById SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 78088901755266(Long)
[INFO] [Bee] selectById SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=78088901755266 ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=78088901755266,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=null,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,remark) values (?,?,?,?)   [values]: Bee(String),Bee(ORM Framework)(String),80.80(java.math.BigDecimal),InsertAndReturnId(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(userid,name,total,remark) values ('Bee','Bee(ORM Framework)',80.80,'InsertAndReturnId') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 78088901755267
[INFO] ------------------11------getId : null
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,remark) values (?,?,?,?)   [values]: Bee(String),Bee(ORM Framework)(String),80.80(java.math.BigDecimal),InsertAndReturnId(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(userid,name,total,remark) values ('Bee','Bee(ORM Framework)',80.80,'InsertAndReturnId') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] -------------------11-----getId : null
[INFO] ------------------------getId : null
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,remark) values (?,?,?,?)   [values]: Bee(String),Bee(ORM Framework)(String),80.80(java.math.BigDecimal),InsertAndReturnId(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(userid,name,total,remark) values ('Bee','Bee(ORM Framework)',80.80,'InsertAndReturnId') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 78088901755269
[INFO] ------------------------getId : null
[INFO] [Bee] selectById SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 78088901755269(Long)
[INFO] [Bee] selectById SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=78088901755269 ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=78088901755269,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=null,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,remark) values (?,?,?,?)   [values]: Bee(String),Bee(ORM Framework)(String),80.80(java.math.BigDecimal),InsertAndReturnId(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(userid,name,total,remark) values ('Bee','Bee(ORM Framework)',80.80,'InsertAndReturnId') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 78088901755270
[INFO] ------------------11------getId : null
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,remark) values (?,?,?,?)   [values]: Bee(String),Bee(ORM Framework)(String),80.80(java.math.BigDecimal),InsertAndReturnId(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(userid,name,total,remark) values ('Bee','Bee(ORM Framework)',80.80,'InsertAndReturnId') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] -------------------11-----getId : null
[INFO] -----------------------------
[INFO] auto increment id in MySQL, start....
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,remark) values (?,?,?,?)   [values]: Bee(String),Bee(ORM Framework)(String),80.80(java.math.BigDecimal),InsertAndReturnId(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(userid,name,total,remark) values ('Bee','Bee(ORM Framework)',80.80,'InsertAndReturnId') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 78088901755272
[INFO] [Bee] selectById SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=?   [values]: 78088901755272(Long)
[INFO] [Bee] selectById SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=78088901755272 ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=78088901755272,userid=Bee,name=Bee(ORM Framework),total=80.800000,createtime=null,remark=InsertAndReturnId,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,remark) values (?,?,?,?)   [values]: Bee(String),Bee(ORM Framework)(String),80.80(java.math.BigDecimal),InsertAndReturnId(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(userid,name,total,remark) values ('Bee','Bee(ORM Framework)',80.80,'InsertAndReturnId') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] InsertAndReturnId  : 78088901755273
[INFO] auto increment id in MySQL, end....
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001(Long),Bee(ORM Framework)(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 and name='Bee(ORM Framework)' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001(Long),Bee(ORM Framework)(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 and name='Bee(ORM Framework)' ;
[INFO] [Bee] ==========get from Level 2 Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] update SQL: update orders set name=? where id=?   [values]: Bee(ORM Framework)(String),100001(Long)
[INFO] [Bee] update SQL:  ( ExecutableSql )
update orders set name='Bee(ORM Framework)' where id=100001 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] update record:1
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total) values (?,?,?,?)   [values]: 78088901755266(Long),bee(String),Bee(String),91.99(java.math.BigDecimal)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,userid,name,total) values (78088901755266,'bee','Bee',91.99) ;
[WARN] Duplicate entry '78088901755266' for key 'PRIMARY'
[INFO] insert record:0
[INFO] [Bee] delete SQL: delete from orders where userid=? and name=? and total=?   [values]: bee(String),Bee(String),91.99(java.math.BigDecimal)
[INFO] [Bee] delete SQL:  ( ExecutableSql )
delete from orders where userid='bee' and name='Bee' and total=91.99 ;
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] delete record:0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001(Long),Bee(ORM Framework)(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 and name='Bee(ORM Framework)' ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.010000,createtime=2020-03-02 11:29:28,remark=other,sequence=12345601,abc=test1,updatetime=null]
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001(Long),Bee(ORM Framework)(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 and name='Bee(ORM Framework)' ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.010000,createtime=2020-03-02 11:29:28,remark=other,sequence=12345601,abc=test1,updatetime=null]
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001(Long),Bee(ORM Framework)(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 and name='Bee(ORM Framework)' ;
[INFO] [Bee] ==========get from Level 2 Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] update SQL: update orders set name=? where id=?   [values]: Bee(ORM Framework)(String),100001(Long)
[INFO] [Bee] update SQL:  ( ExecutableSql )
update orders set name='Bee(ORM Framework)' where id=100001 ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] update record:1
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total) values (?,?,?,?)   [values]: 78088901755267(Long),bee(String),Bee(String),91.99(java.math.BigDecimal)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,userid,name,total) values (78088901755267,'bee','Bee',91.99) ;
[WARN] Duplicate entry '78088901755267' for key 'PRIMARY'
[INFO] insert record:0
[INFO] [Bee] delete SQL: delete from orders where userid=? and name=? and total=?   [values]: bee(String),Bee(String),91.99(java.math.BigDecimal)
[INFO] [Bee] delete SQL:  ( ExecutableSql )
delete from orders where userid='bee' and name='Bee' and total=91.99 ;
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] delete record:0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001(Long),Bee(ORM Framework)(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 and name='Bee(ORM Framework)' ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.010000,createtime=2020-03-02 11:29:28,remark=other,sequence=12345601,abc=test1,updatetime=null]
[INFO] [Bee] Callable SQL,getCallableStatement: {call updateOrders(?)}
[INFO] 1
[INFO] [Bee] Callable SQL: {call updateOrders(?)}  values: 100004
[INFO] 0
[INFO] [Bee] Callable SQL: {call updateOrders(?)}  values: 10000588888
[INFO] 0
[INFO] [Bee] Callable SQL: {call selectOrders(?)}  values: change via CallableSql
[INFO] Orders[id=100003,userid=bee,name=Bee,total=97.010000,createtime=2020-03-02 11:29:28,remark=change via CallableSql,sequence=12345603,abc=test3,updatetime=2022-08-04 11:41:59]
[INFO] [Bee] Callable SQL: {call selectOrders(?)}  values: change via CallableSql
[INFO] 100003   bee   Bee   97.010000   2020-03-02 11:29:28   change via CallableSql   12345603   test3   2022-08-04 11:41:59   
[INFO] [Bee] Callable SQL: {call selectOrders(?)}  values: change via CallableSql
[INFO] [{"id":"100003","userid":"bee","name":"Bee","total":97.010000,"createtime":"2020-03-02 11:29:28","remark":"change via CallableSql","sequence":"12345603","abc":"test3","updatetime":"2022-08-04 11:41:59"}]
[INFO] [Bee] Callable SQL: {call selectOrders(?)}  values: change via CallableSql--no
[INFO] []
[INFO] D:\JavaWeb\workspaceGit19\bee-exam\src\main\resources\log\bee-exam(v1.17)2022-08-04 11.39.37.389-cache(MySQL).txt
[INFO]  join 
[INFO] Table
[INFO] IsNamingTransfer
[INFO] MySQL
[ERROR]  workerid is wrong. need in [0,1023]
 workerid is wrong. need in [0,1023]
[INFO] [Bee] insert SQL: insert into Noid(uuid,name) values (?,?)   [values]: aaaadd-no-id(String),test no id(String)
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into Noid(uuid,name) values ('aaaadd-no-id','test no id') ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL: select uuid,name,num,remark from Noid where uuid=? and name=?   [values]: aaaadd-no-id(String),test no id(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select uuid,name,num,remark from Noid where uuid='aaaadd-no-id' and name='test no id' ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] CustomId[uuid=aaaadd-no-id,name=test no id,num=null,remark=null]
[INFO] [Bee] update SQL: update Noid set name=? where uuid=?   [values]: new name--new(String),aaaadd-no-id(String)
[INFO] [Bee] update SQL:  ( ExecutableSql )
update Noid set name='new name--new' where uuid='aaaadd-no-id' ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] update SQL: update Noid set name=? , num =null , remark =null where uuid=?   [values]: new name--new(String),aaaadd-no-id(String)
[INFO] [Bee] update SQL:  ( ExecutableSql )
update Noid set name='new name--new' , num =null , remark =null where uuid='aaaadd-no-id' ;
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL: select uuid,name,num,remark from Noid where uuid=? and name=?   [values]: aaaadd-no-id(String),new name--new(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select uuid,name,num,remark from Noid where uuid='aaaadd-no-id' and name='new name--new' ;
[INFO] [Bee]  | <--  select rows: 1
[INFO] CustomId[uuid=aaaadd-no-id,name=new name--new,num=null,remark=null]
[INFO] [Bee] select SQL: select classno,term,examno,subjectno,subject,creater,createtime,updater,updatetime,remark,ext1,status,schoolno from assignexam where classno=? and term=? and remark=?   [values]: 2001(String),200101(String),联合主键更新(String)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select classno,term,examno,subjectno,subject,creater,createtime,updater,updatetime,remark,ext1,status,schoolno from assignexam where classno='2001' and term='200101' and remark='联合主键更新' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] update SQL: update assignexam set remark=? where classno=? and term=?   [values]: 联合主键更新(String),2001(String),200101(String)
[INFO] [Bee] update SQL:  ( ExecutableSql )
update assignexam set remark='联合主键更新' where classno='2001' and term='200101' ;
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] update SQL(whereFields) :update assignexam set remark=? where classno=? and term=?   [values]: 联合主键更新(String),2001(String),200101(String)
[INFO] [Bee] update SQL(whereFields) : ( ExecutableSql )
update assignexam set remark='联合主键更新' where classno='2001' and term='200101' ;
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] selectById SQL: select uuid,name,num,remark from Noid where uuid=?   [values]: aaaacc-no-id(String)
[INFO] [Bee] selectById SQL:  ( ExecutableSql )
select uuid,name,num,remark from Noid where uuid='aaaacc-no-id' ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] deleteById SQL: delete from Noid where uuid=?   [values]: aaaacc-no-id(String)
[INFO] [Bee] deleteById SQL:  ( ExecutableSql )
delete from Noid where uuid='aaaacc-no-id' ;
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] 0
[INFO] [Bee] select SQL: select id,email,last_name,name name2,password,username,createtime,last_name || name full_name from test_user   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,email,last_name,name name2,password,username,createtime,last_name || name full_name from test_user
[INFO] [Bee]  | <--  select rows: 2
[INFO] TestUser[id=800001,email=beeUser@163.com,lastName=null,name=null,password=bee,username=bee,createtime=null]
[INFO] TestUser[id=800002,email=honey@163.com,lastName=cn,name=null,password=honey,username=honey,createtime=null]
[INFO] [Bee] select SQL: select id,email,last_name,name name2,password,username,createtime,last_name || name full_name from test_user   [values]: 
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,email,last_name,name name2,password,username,createtime,last_name || name full_name from test_user
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 2
[INFO] [Bee] select SQL: select uuid,name,num,remark,ch from noid where num=? and ch=?   [values]: 2(int),a(char)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select uuid,name,num,remark,ch from noid where num=2 and ch=a ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] PreparedSql select SQL: select uuid,name,num,remark,ch from noid   [values]: 
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select uuid,name,num,remark,ch from noid
[INFO] [Bee]  | <--  select rows: 1
[INFO] Noid[uuid=aaaadd-no-id,name=new name--new,num=0,remark=null,ch= ]
[INFO] [Bee] PreparedSql selectJson SQL: select uuid,name,num,remark,ch from noid   [values]: 
[INFO] [Bee] PreparedSql selectJson SQL:  ( ExecutableSql )
select uuid,name,num,remark,ch from noid
[INFO] [{"uuid":"aaaadd-no-id","name":"new name--new","num":null,"remark":null,"ch":null}]
[INFO] [Bee] selectJson SQL: select uuid,name,num,remark,ch from noid where num=? and ch=?   [values]: 2(int),a(char)
[INFO] [Bee] selectJson SQL:  ( ExecutableSql )
select uuid,name,num,remark,ch from noid where num=2 and ch=a ;
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] []
[INFO] [Bee] PreparedSql select MoreTable SQL: select uuid,name,num,remark,ch from noid   [values]: 
[INFO] [Bee] PreparedSql select MoreTable SQL:  ( ExecutableSql )
select uuid,name,num,remark,ch from noid
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] Noid[uuid=aaaadd-no-id,name=new name--new,num=0,remark=null,ch= ]
[INFO] [Bee] select SQL: select noid.uuid,noid.name,noid.num,noid.remark,noid.ch,aanoid2.uuid,aanoid2.name,aanoid2.num,aanoid2.remark,aanoid2.ch from noid left join noid aanoid2 on noid.uuid=aanoid2.uuid where noid.num=? and noid.ch=?   [values]: 2(int),a(char)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select noid.uuid,noid.name,noid.num,noid.remark,noid.ch,aanoid2.uuid,aanoid2.name,aanoid2.num,aanoid2.remark,aanoid2.ch from noid left join noid aanoid2 on noid.uuid=aanoid2.uuid where noid.num=2 and noid.ch=a ;
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select uuid,name,num,remark,ch from noid where num=? and ch=?   [values]: 2(int),a(char)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select uuid,name,num,remark,ch from noid where num=2 and ch=a ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] PreparedSql select SQL: select uuid,name,num,remark,ch from noid   [values]: 
[INFO] [Bee] PreparedSql select SQL:  ( ExecutableSql )
select uuid,name,num,remark,ch from noid
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] Noid[uuid=aaaadd-no-id,name=new name--new,num=0,remark=null,ch= ]
[INFO] [Bee] PreparedSql selectJson SQL: select uuid,name,num,remark,ch from noid   [values]: 
[INFO] [Bee] PreparedSql selectJson SQL:  ( ExecutableSql )
select uuid,name,num,remark,ch from noid
[INFO] [{"uuid":"aaaadd-no-id","name":"new name--new","num":null,"remark":null,"ch":null}]
[INFO] [Bee] selectJson SQL: select uuid,name,num,remark,ch from noid where num=? and ch=?   [values]: 2(int),a(char)
[INFO] [Bee] selectJson SQL:  ( ExecutableSql )
select uuid,name,num,remark,ch from noid where num=2 and ch=a ;
[INFO] []
[INFO] [Bee] PreparedSql select MoreTable SQL: select uuid,name,num,remark,ch from noid   [values]: 
[INFO] [Bee] PreparedSql select MoreTable SQL:  ( ExecutableSql )
select uuid,name,num,remark,ch from noid
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] Noid[uuid=aaaadd-no-id,name=new name--new,num=0,remark=null,ch= ]
[INFO] [Bee] select SQL: select noid.uuid,noid.name,noid.num,noid.remark,noid.ch,aanoid2.uuid,aanoid2.name,aanoid2.num,aanoid2.remark,aanoid2.ch from noid left join noid aanoid2 on noid.uuid=aanoid2.uuid where noid.num=? and noid.ch=?   [values]: 2(int),a(char)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select noid.uuid,noid.name,noid.num,noid.remark,noid.ch,aanoid2.uuid,aanoid2.name,aanoid2.num,aanoid2.remark,aanoid2.ch from noid left join noid aanoid2 on noid.uuid=aanoid2.uuid where noid.num=2 and noid.ch=a ;
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] $jacocoData
