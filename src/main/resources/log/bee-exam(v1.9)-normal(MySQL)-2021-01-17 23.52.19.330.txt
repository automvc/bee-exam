[WARN] Do not set the database info: bee.db.driverName do not config; 
[INFO] [Bee] ========= get the dbName from the Connection is :MySQL
[INFO] [Bee] PreparedSqlLib modify SQL: TRUNCATE orders
[INFO] [Bee] | <--  Affected rows: 0
[INFO] deleteOrdersNum: 0
[INFO] [Bee] PreparedSqlLib modify SQL: TRUNCATE orders_202007
[INFO] [Bee] | <--  Affected rows: 0
[INFO] deleteOrdersNum2: 0
[INFO] [Bee] PreparedSqlLib modify SQL: TRUNCATE test_user
[INFO] [Bee] | <--  Affected rows: 0
[INFO] deleteUserNum: 0
[INFO] [Bee] PreparedSqlLib modify SQL: TRUNCATE leaf_alloc
[INFO] [Bee] | <--  Affected rows: 0
[INFO] deleteLeafNum: 0
[INFO] [Bee] PreparedSqlLib modify SQL: TRUNCATE leaf_alloc2
[INFO] [Bee] | <--  Affected rows: 0
[INFO] deleteLeafNum2: 0
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO orders VALUES ('100001', 'bee', 'Bee(ORM Framework)', '95.01', '2020-03-02 11:29:28', 'test', '12345601', 'test1', null);
[INFO] [Bee] | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO orders VALUES ('100002', 'bee', 'Bee(ORM Framework)', '96.01', '2020-03-02 11:29:28', 'test%a', '12345602', 'test2', '2020-03-02 16:34:19');
[INFO] [Bee] | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO orders VALUES ('100003', 'bee', 'Bee(ORM Framework)', '97.01', '2020-03-02 11:29:28', 'testx%', '12345603', 'test3', '2020-03-02 16:34:19');
[INFO] [Bee] | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO orders_202007 VALUES ('100001', 'bee', 'Bee(ORM Framework)', '95.01', '2020-03-02 11:29:28', 'test', '12345601', 'test1', null);
[INFO] [Bee] | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO orders_202007 VALUES ('100002', 'bee', 'Bee(ORM Framework)', '96.01', '2020-03-02 11:29:28', 'test%a', '12345602', 'test2', '2020-03-02 16:34:19');
[INFO] [Bee] | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO orders_202007 VALUES ('100003', 'bee', 'Bee(ORM Framework)', '97.01', '2020-03-02 11:29:28', 'testx%', '12345603', 'test3', '2020-03-02 16:34:19');
[INFO] [Bee] | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO test_user VALUES ('800001', 'beeUser@163.com', null, 'Bee', 'bee', 'bee', null);
[INFO] [Bee] | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO test_user VALUES ('800002', 'honey@163.com', 'cn', 'Honey', 'honey', 'honey', '2020-03-02 16:41:33');
[INFO] [Bee] | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO leaf_alloc VALUES ('456537470402562', 'test', '100', '100', 'test segment', '2020-07-04 22:42:09', '1');
[INFO] [Bee] | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO leaf_alloc VALUES ('456537470402563', 'order', '100', '100', 'order segment', '2020-07-04 22:42:10', '1');
[INFO] [Bee] | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO leaf_alloc VALUES ('456537470402564', 'bee', '100', '100', 'order segment', '2020-09-19 19:05:10', '1');
[INFO] [Bee] | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO leaf_alloc2 VALUES ('456537470402562', 'test', '100', '100', 'test segment', '2020-07-04 22:42:09', '1');
[INFO] [Bee] | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO leaf_alloc2 VALUES ('456537470402563', 'order', '100', '100', 'order segment', '2020-07-04 22:42:10', '1');
[INFO] [Bee] | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO leaf_alloc2 VALUES ('456537470402564', 'bee', '100', '100', 'order segment', '2020-09-19 19:05:10', '1');
[INFO] [Bee] | <--  Affected rows: 1
[INFO] [bee-exam] ====================SuidExam.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee] | <--  select rows: 3
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee] ==========get from cache.
[INFO] Orders[id=100001,userid=bee,name=Bee(ORM Framework),total=95.01,createtime=2020-03-02 11:29:28.0,remark=test,sequence=12345601,abc=test1,updatetime=null]
[INFO] Orders[id=100002,userid=bee,name=Bee(ORM Framework),total=96.01,createtime=2020-03-02 11:29:28.0,remark=test%a,sequence=12345602,abc=test2,updatetime=2020-03-02 16:34:19.0]
[INFO] Orders[id=100003,userid=bee,name=Bee(ORM Framework),total=97.01,createtime=2020-03-02 11:29:28.0,remark=testx%,sequence=12345603,abc=test3,updatetime=2020-03-02 16:34:19.0]
[INFO] [Bee] update SQL: update orders set  name=? where id=?   [values]: Bee(ORM Framework),100001
[INFO] [Bee] update SQL:  ( ExecutableSql )
update orders set  name='Bee(ORM Framework)' where id=100001
[INFO] [Bee] | <--  Affected rows: 1
[INFO] update record:1
[INFO] [Bee] insert SQL: insert into orders(userid,name,total) values (?,?,?)   [values]: bee,Bee-ORM Framework,91.99
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(userid,name,total) values ('bee','Bee-ORM Framework',91.99)
[INFO] [Bee] | <--  Affected rows: 1
[INFO] insert record:1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=?   [values]: bee,Bee-ORM Framework,91.99
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee' and name='Bee-ORM Framework' and total=91.99
[INFO] [Bee] | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=?   [values]: bee,Bee-ORM Framework,91.99
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee' and name='Bee-ORM Framework' and total=91.99
[INFO] [Bee] | <--  select rows: 1
[INFO] Orders[id=100004,userid=bee,name=Bee-ORM Framework,total=91.99,createtime=2021-01-17 23:52:22.0,remark=null,sequence=null,abc=null,updatetime=2021-01-17 23:52:22.0]
[INFO] [Bee] delete SQL: delete from orders where userid=? and name=? and total=?   [values]: bee,Bee-ORM Framework,91.99
[INFO] [Bee] delete SQL:  ( ExecutableSql )
delete from orders where userid='bee' and name='Bee-ORM Framework' and total=91.99
[INFO] [Bee] | <--  Affected rows: 1
[INFO] delete record:1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee] | <--  select rows: 3
[INFO] Orders[id=100001,userid=bee,name=Bee(ORM Framework),total=95.01,createtime=2020-03-02 11:29:28.0,remark=test,sequence=12345601,abc=test1,updatetime=null]
[INFO] Orders[id=100002,userid=bee,name=Bee(ORM Framework),total=96.01,createtime=2020-03-02 11:29:28.0,remark=test%a,sequence=12345602,abc=test2,updatetime=2020-03-02 16:34:19.0]
[INFO] Orders[id=100003,userid=bee,name=Bee(ORM Framework),total=97.01,createtime=2020-03-02 11:29:28.0,remark=testx%,sequence=12345603,abc=test3,updatetime=2020-03-02 16:34:19.0]
[INFO] [bee-exam] ====================SuidExam.test======end.

[INFO] [bee-exam] ====================SuidExamEN.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001,Bee(ORM Framework)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 and name='Bee(ORM Framework)'
[INFO] [Bee] | <--  select rows: 1
[INFO] Orders[id=100001,userid=bee,name=Bee(ORM Framework),total=95.01,createtime=2020-03-02 11:29:28.0,remark=test,sequence=12345601,abc=test1,updatetime=null]
[INFO] [Bee] update SQL: update orders set  name=? where id=?   [values]: Bee(ORM Framework),100001
[INFO] [Bee] update SQL:  ( ExecutableSql )
update orders set  name='Bee(ORM Framework)' where id=100001
[INFO] [Bee] | <--  Affected rows: 1
[INFO] update record:1
[INFO] [Bee] insert SQL: insert into orders(userid,name,total) values (?,?,?)   [values]: bee,Bee(ORM Framework),91.99
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(userid,name,total) values ('bee','Bee(ORM Framework)',91.99)
[INFO] [Bee] | <--  Affected rows: 1
[INFO] insert record:1
[INFO] [Bee] delete SQL: delete from orders where userid=? and name=? and total=?   [values]: bee,Bee(ORM Framework),91.99
[INFO] [Bee] delete SQL:  ( ExecutableSql )
delete from orders where userid='bee' and name='Bee(ORM Framework)' and total=91.99
[INFO] [Bee] | <--  Affected rows: 1
[INFO] delete record:1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001,Bee(ORM Framework)
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=100001 and name='Bee(ORM Framework)'
[INFO] [Bee] | <--  select rows: 1
[INFO] Orders[id=100001,userid=bee,name=Bee(ORM Framework),total=95.01,createtime=2020-03-02 11:29:28.0,remark=test,sequence=12345601,abc=test1,updatetime=null]
[INFO] [bee-exam] ====================SuidExamEN.test======end.

[INFO] [bee-exam] ====================SuidRichExam.test======start:
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,remark,sequence) values (?,?,?,?,?)   [values]: client,client,93.99,testOneTime,
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(userid,name,total,remark,sequence) values ('client','client',93.99,'testOneTime','')
[INFO] [Bee] | <--  Affected rows: 1
[INFO] insert record:1
[INFO] [Bee] update SQL(updateFields) :update orders set  name=? , remark=? where userid=? and total=?   [values]: client,testOneTime,client,93.99
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update orders set  name='client' , remark='testOneTime' where userid='client' and total=93.99
[INFO] [Bee] | <--  Affected rows: 1
[INFO] updateNum1:  1
[INFO] [Bee] update SQL(updateFields) :update orders set  name=? where userid=? and total=? and remark=?   [values]: client,client,93.99,testOneTime
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update orders set  name='client' where userid='client' and total=93.99 and remark='testOneTime'
[INFO] [Bee] | <--  Affected rows: 1
[INFO] updateNum2:  1
[INFO] [Bee] update SQL(updateFields) :update orders set  name=? where userid=? and total=? and remark=? and sequence=?   [values]: client,client,93.99,testOneTime,
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update orders set  name='client' where userid='client' and total=93.99 and remark='testOneTime' and sequence=''
[INFO] [Bee] | <--  Affected rows: 1
[INFO] updateNum4:  1
[INFO] [Bee] update SQL(updateFields) :update orders set  name=? where userid=? and total=? and createtime is null and remark=? and abc is null and updatetime is null   [values]: client,client,93.99,testOneTime
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update orders set  name='client' where userid='client' and total=93.99 and createtime is null and remark='testOneTime' and abc is null and updatetime is null
[INFO] [Bee] | <--  Affected rows: 0
[INFO] updateNum5:  0
[INFO] [Bee] update SQL(updateFields) :update orders set  name=? where userid=? and total=? and createtime is null and remark=? and sequence=? and abc is null and updatetime is null   [values]: client,client,93.99,testOneTime,
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update orders set  name='client' where userid='client' and total=93.99 and createtime is null and remark='testOneTime' and sequence='' and abc is null and updatetime is null
[INFO] [Bee] | <--  Affected rows: 0
[INFO] updateNum6:  0
[INFO] [Bee] update SQL(updateFields) :update orders set  name=? , total=? where userid=? and remark=? and sequence=?   [values]: client,93.99,client,testOneTime,
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update orders set  name='client' , total=93.99 where userid='client' and remark='testOneTime' and sequence=''
[INFO] [Bee] | <--  Affected rows: 1
[INFO] updateNum4_2:  1
[INFO] [Bee] update SQL(updateFields) :update orders set  name=? , total=? where userid=? and createtime is null and remark=? and abc is null and updatetime is null   [values]: client,93.99,client,testOneTime
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update orders set  name='client' , total=93.99 where userid='client' and createtime is null and remark='testOneTime' and abc is null and updatetime is null
[INFO] [Bee] | <--  Affected rows: 0
[INFO] updateNum5_2:  0
[INFO] [Bee] update SQL(updateFields) :update orders set  name=? , total=? where userid=? and createtime is null and remark=? and sequence=? and abc is null and updatetime is null   [values]: client,93.99,client,testOneTime,
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update orders set  name='client' , total=93.99 where userid='client' and createtime is null and remark='testOneTime' and sequence='' and abc is null and updatetime is null
[INFO] [Bee] | <--  Affected rows: 0
[INFO] updateNum6_2:  0
[INFO] [Bee] select fun SQL : select count(total) from orders where userid=? and name=? and total=? and remark=? and sequence=?   [values]: client,client,93.99,testOneTime,
[INFO] [Bee] select fun SQL :  ( ExecutableSql )
select count(total) from orders where userid='client' and name='client' and total=93.99 and remark='testOneTime' and sequence=''
[INFO] [Bee] select fun SQL : select max(total) from orders where userid=? and name=? and total=? and remark=? and sequence=?   [values]: client,client,93.99,testOneTime,
[INFO] [Bee] select fun SQL :  ( ExecutableSql )
select max(total) from orders where userid='client' and name='client' and total=93.99 and remark='testOneTime' and sequence=''
[INFO] [Bee] select fun SQL : select min(total) from orders where userid=? and name=? and total=? and remark=? and sequence=?   [values]: client,client,93.99,testOneTime,
[INFO] [Bee] select fun SQL :  ( ExecutableSql )
select min(total) from orders where userid='client' and name='client' and total=93.99 and remark='testOneTime' and sequence=''
[INFO] [Bee] select fun SQL : select avg(total) from orders where userid=? and name=? and total=? and remark=? and sequence=?   [values]: client,client,93.99,testOneTime,
[INFO] [Bee] select fun SQL :  ( ExecutableSql )
select avg(total) from orders where userid='client' and name='client' and total=93.99 and remark='testOneTime' and sequence=''
[INFO] [Bee] select fun SQL : select sum(total) from orders where userid=? and name=? and total=? and remark=? and sequence=?   [values]: client,client,93.99,testOneTime,
[INFO] [Bee] select fun SQL :  ( ExecutableSql )
select sum(total) from orders where userid='client' and name='client' and total=93.99 and remark='testOneTime' and sequence=''
[INFO] funCount:1
[INFO] funMax:93.99
[INFO] funMin:93.99
[INFO] funAvg:93.990000
[INFO] funSum:93.99
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime,remark,abc,updatetime) values (?,?,?,?,?,?,?,?)   [values]: 100,client00,client01,93.99,null,testOneTime,null,null
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(id,userid,name,total,createtime,remark,abc,updatetime) values (100,'client00','client01',93.99,null,'testOneTime',null,null)
[INFO] [Bee] | <--  Affected rows: 1
[INFO] insert record:1
[INFO] [Bee] update SQL: update orders set  userid=? , name=? , total=? , remark=? , sequence=? where id=?   [values]: client00,client01,93.99,testOneTime,,100
[INFO] [Bee] update SQL:  ( ExecutableSql )
update orders set  userid='client00' , name='client01' , total=93.99 , remark='testOneTime' , sequence='' where id=100
[INFO] [Bee] | <--  Affected rows: 1
[INFO] updateNum8:  1
[INFO] [Bee] update SQL: update orders set  userid=? , name=? , total=? , createtime =null , remark=? , abc =null , updatetime =null where id=?   [values]: client00,client01,93.99,testOneTime,100
[INFO] [Bee] update SQL:  ( ExecutableSql )
update orders set  userid='client00' , name='client01' , total=93.99 , createtime =null , remark='testOneTime' , abc =null , updatetime =null where id=100
[INFO] [Bee] | <--  Affected rows: 1
[INFO] updateNum9:  1
[INFO] [Bee] update SQL: update orders set  userid=? , name=? , total=? , createtime =null , remark=? , sequence=? , abc =null , updatetime =null where id=?   [values]: client00,client01,93.99,testOneTime,,100
[INFO] [Bee] update SQL:  ( ExecutableSql )
update orders set  userid='client00' , name='client01' , total=93.99 , createtime =null , remark='testOneTime' , sequence='' , abc =null , updatetime =null where id=100
[INFO] [Bee] | <--  Affected rows: 1
[INFO] updateNum10:  1
[INFO] [Bee] delete SQL: delete from orders where id=? and userid=? and name=? and total=? and remark=?   [values]: 100,client00,client01,93.99,testOneTime
[INFO] [Bee] delete SQL:  ( ExecutableSql )
delete from orders where id=100 and userid='client00' and name='client01' and total=93.99 and remark='testOneTime'
[INFO] [Bee] | <--  Affected rows: 1
[INFO] deleteNum: 1
[INFO] [Bee] insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 1004,client01,null,91,null,testOneTime,null,null,null
[INFO] [Bee] insert[] SQL :  ( ExecutableSql [index0])
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (1004,'client01',null,91,null,'testOneTime',null,null,null)
[INFO] [Bee] --> index:1 ,  [values]: 1005,client02,null,20,null,testOneTime,null,null,null
[INFO] [Bee] insert[] SQL :  ( ExecutableSql [index1] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (1005,'client02',null,20,null,'testOneTime',null,null,null) ;
[INFO] [Bee] | <-- [Batch:0] Affected rows: 2
[INFO] [Bee] insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:2 ,  [values]: 1006,client03,null,23,null,testOneTime,null,null,null
[INFO] [Bee] insert[] SQL :  ( ExecutableSql [index2] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (1006,'client03',null,23,null,'testOneTime',null,null,null) ;
[ERROR] Duplicate entry '1005' for key 'PRIMARY'
[INFO] 2
[INFO] [Bee] insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 1007,client01,null,91,null,testOneTime,null,null,null
[INFO] [Bee] insert[] SQL :  ( ExecutableSql [index0])
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (1007,'client01',null,91,null,'testOneTime',null,null,null)
[INFO] [Bee] --> index:1 ,  [values]: 1008,client02,null,20,null,testOneTime,null,null,null
[INFO] [Bee] insert[] SQL :  ( ExecutableSql [index1] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (1008,'client02',null,20,null,'testOneTime',null,null,null) ;
[INFO] [Bee] --> index:2 ,  [values]: 1009,client03,null,23,null,testOneTime,null,null,null
[INFO] [Bee] insert[] SQL :  ( ExecutableSql [index2] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (1009,'client03',null,23,null,'testOneTime',null,null,null) ;
[INFO] [Bee] | <-- [Batch:0] Affected rows: 3
[INFO] 3
[INFO] [Bee] insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 10010,client01,null,91,null,testOneTime,null,null,null
[INFO] [Bee] insert[] SQL :  ( ExecutableSql [index0])
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (10010,'client01',null,91,null,'testOneTime',null,null,null)
[INFO] [Bee] --> index:1 ,  [values]: 10011,client02,null,20,null,testOneTime,null,null,null
[INFO] [Bee] insert[] SQL :  ( ExecutableSql [index1] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (10011,'client02',null,20,null,'testOneTime',null,null,null) ;
[INFO] [Bee] --> index:2 ,  [values]: 10012,client03,null,23,null,testOneTime,null,null,null
[INFO] [Bee] insert[] SQL :  ( ExecutableSql [index2] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (10012,'client03',null,23,null,'testOneTime',null,null,null) ;
[INFO] [Bee] | <-- [Batch:0] Affected rows: 3
[INFO] 3
[INFO] [Bee] select SQL(selectFields) : select name, total from orders where userid=?   [values]: bee
[INFO] [Bee] select SQL(selectFields) :  ( ExecutableSql )
select name, total from orders where userid='bee'
[INFO] [Bee] | <--  select rows: 3
[INFO] 3
[INFO] [Bee] select SQL(selectFields) : select max_id from leaf_alloc
[INFO] [Bee] | <--  select rows: 3
[INFO] [Bee] List<String[]> select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: client01
[INFO] [Bee] List<String[]> select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='client01'
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL(selectFields) : select id, userid, total, createtime from orders where userid=?   [values]: client01
[INFO] [Bee] select SQL(selectFields) :  ( ExecutableSql )
select id, userid, total, createtime from orders where userid='client01'
[INFO] [Bee]  | <--  select rows: 3
[INFO] 1004  , 
[INFO] client01  , 
[INFO] 91.00  , 
[INFO] null  , 
[INFO] 
[INFO] 1007  , 
[INFO] client01  , 
[INFO] 91.00  , 
[INFO] null  , 
[INFO] 
[INFO] 10010  , 
[INFO] client01  , 
[INFO] 91.00  , 
[INFO] null  , 
[INFO] 
[INFO] test paging
[INFO] [Bee] select SQL(entity,size): select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? limit ? , ?   [values]: testOneTime,0,3
[INFO] [Bee] select SQL(entity,size):  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark='testOneTime' limit 0 , 3
[INFO] [Bee] | <--  select rows: 3
[INFO] [Bee] select(entity,start,size) SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? limit ? , ?   [values]: testOneTime,0,3
[INFO] [Bee] select(entity,start,size) SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark='testOneTime' limit 0 , 3
[INFO] [Bee] | <--  select rows: 3
[INFO] Orders[id=1004,userid=client01,name=null,total=91.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1005,userid=client02,name=null,total=20.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1007,userid=client01,name=null,total=91.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] selectByIds SQL: select id,email,last_name,name,password,username,createtime from test_user where id=? or id=?   [values]: 800001,800002
[INFO] [Bee] selectByIds SQL:  ( ExecutableSql )
select id,email,last_name,name,password,username,createtime from test_user where id=800001 or id=800002
[INFO] [Bee] | <--  select rows: 2
[INFO] TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=null]
[INFO] TestUser[id=800002,email=honey@163.com,lastName=cn,name=Honey,password=honey,username=honey,createtime=2020-03-02 16:41:33.0]
[INFO] [Bee] selectById SQL: select id,email,last_name,name,password,username,createtime from test_user where id=?   [values]: 800001
[INFO] [Bee] selectById SQL:  ( ExecutableSql )
select id,email,last_name,name,password,username,createtime from test_user where id=800001
[INFO] [Bee] | <--  select rows: 1
[INFO] TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=null]
[INFO] [Bee] selectById SQL: select id,email,last_name,name,password,username,createtime from test_user where id=?   [values]: 800001
[INFO] [Bee] selectById SQL:  ( ExecutableSql )
select id,email,last_name,name,password,username,createtime from test_user where id=800001
[INFO] [Bee] | <--  select rows: 1
[INFO] [Bee] selectById SQL: select id,email,last_name,name,password,username,createtime from test_user where id=?   [values]: 800001
[INFO] [Bee] selectById SQL:  ( ExecutableSql )
select id,email,last_name,name,password,username,createtime from test_user where id=800001
[INFO] [Bee] | <--  select rows: 1
[INFO] TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=null]
[INFO] [Bee] deleteById SQL: delete from test_user where id=?   [values]: 800001
[INFO] [Bee] deleteById SQL:  ( ExecutableSql )
delete from test_user where id=800001
[INFO] [Bee] | <--  Affected rows: 1
[INFO] deleteNum3: 1
[INFO] [Bee] insert SQL: insert into test_user(id,email,name,password,username) values (?,?,?,?,?)   [values]: 800001,beeUser@163.com,Bee,bee,bee
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into test_user(id,email,name,password,username) values (800001,'beeUser@163.com','Bee','bee','bee')
[INFO] [Bee] | <--  Affected rows: 1
[INFO] [Bee] selectJson SQL: select id,email,last_name,name,password,username,createtime from test_user
[INFO] selectJson(new User()):
[INFO] [{"id":800001,"email":"beeUser@163.com","name":"Bee","password":"bee","username":"bee","createtime":1610898743000},{"id":800002,"email":"honey@163.com","lastName":"cn","name":"Honey","password":"honey","username":"honey","createtime":1583138493000}]
[INFO] [bee-exam] ====================SuidRichExam.test======end.

[INFO] [bee-exam] ====================UpdateByExam.test======start:
[INFO] [Bee] update SQL(whereFields) :update orders set  total=? , remark=? where userid=?   [values]: 100,new2,bee
[INFO] [Bee] update SQL(whereFields) : ( ExecutableSql )
update orders set  total=100 , remark='new2' where userid='bee'
[INFO] [Bee] | <--  Affected rows: 3
[INFO] update number:  3
[INFO] IncludeType.INCLUDE_BOTH
[INFO] [Bee] update SQL(whereFields) :update orders set  total=? , createtime =null , remark=? , sequence=? , abc =null , updatetime =null where userid=? and name is null   [values]: 100,new2,,bee
[INFO] [Bee] update SQL(whereFields) : ( ExecutableSql )
update orders set  total=100 , createtime =null , remark='new2' , sequence='' , abc =null , updatetime =null where userid='bee' and name is null
[INFO] [Bee] | <--  Affected rows: 0
[INFO] update number:  0
[INFO] IncludeType.INCLUDE_NULL
[INFO] [Bee] update SQL(whereFields) :update orders set  name =null , total=? , createtime =null , remark=? , abc =null , updatetime =null where userid=?   [values]: 100,new2,bee
[INFO] [Bee] update SQL(whereFields) : ( ExecutableSql )
update orders set  name =null , total=100 , createtime =null , remark='new2' , abc =null , updatetime =null where userid='bee'
[INFO] [Bee] | <--  Affected rows: 3
[INFO] IncludeType.INCLUDE_EMPTY
[INFO] [Bee] update SQL(whereFields) :update orders set  total=? , remark=? , sequence=? where userid=?   [values]: 100,new2,,bee
[INFO] [Bee] update SQL(whereFields) : ( ExecutableSql )
update orders set  total=100 , remark='new2' , sequence='' where userid='bee'
[INFO] [Bee] | <--  Affected rows: 3
[INFO] [bee-exam] ====================UpdateByExam.test======end.

[INFO] [bee-exam] ====================PreparedSqlExam.test======start:
[INFO] getCustomSql:  select * from orders where userid=?
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders where userid=? limit ? , ?   [values]: bee,1,3
[INFO] [Bee] PreparedSqlLib select SQL:  ( ExecutableSql )
select * from orders where userid='bee' limit 1 , 3
[INFO] [Bee]  | <--  select rows: 2
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders where userid=? limit ? , ?   [values]: bee,1,3
[INFO] [Bee] PreparedSqlLib select SQL:  ( ExecutableSql )
select * from orders where userid='bee' limit 1 , 3
[INFO] [Bee]  | <--  select rows: 2
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders where userid=? limit ? , ?   [values]: bee,1,3
[INFO] [Bee] PreparedSqlLib select SQL:  ( ExecutableSql )
select * from orders where userid='bee' limit 1 , 3
[INFO] [Bee]  | <--  select rows: 2
[INFO] [Bee] PreparedSqlLib selectSomeField SQL: select * from orders where userid=? limit ? , ?   [values]: bee,2,3
[INFO] [Bee] PreparedSqlLib selectSomeField SQL:  ( ExecutableSql )
select * from orders where userid='bee' limit 2 , 3
[INFO] [Bee] | <--  select rows: 1
[INFO] Orders[id=100003,userid=bee,name=null,total=100.00,createtime=null,remark=new2,sequence=,abc=null,updatetime=2021-01-17 23:52:23.0]
[INFO] [Bee] PreparedSqlLib selectJson SQL: select * from orders where userid=? limit ? , ?   [values]: bee,1,3
[INFO] [Bee] PreparedSqlLib selectJson SQL:  ( ExecutableSql )
select * from orders where userid='bee' limit 1 , 3
[INFO] [{"id":100002,"userid":"bee","total":100.00,"remark":"new2","sequence":"","updatetime":1610898743000},{"id":100003,"userid":"bee","total":100.00,"remark":"new2","sequence":"","updatetime":1610898743000}]
[INFO] getCustomSql:  select * from orders where userid=#{userid}
[INFO] [Bee] PreparedSqlLib selectSomeField SQL: select * from orders where userid=? limit ? , ?   [values]: bee,1,3
[INFO] [Bee] PreparedSqlLib selectSomeField SQL:  ( ExecutableSql )
select * from orders where userid='bee' limit 1 , 3
[INFO] [Bee] | <--  select rows: 2
[INFO] [Bee] PreparedSqlLib selectSomeField SQL: select * from orders where userid=? limit ? , ?   [values]: bee,1,3
[INFO] [Bee] PreparedSqlLib selectSomeField SQL:  ( ExecutableSql )
select * from orders where userid='bee' limit 1 , 3
[INFO] [Bee] | <--  select rows: 2
[INFO] Orders[id=100002,userid=bee,name=null,total=100.00,createtime=null,remark=new2,sequence=,abc=null,updatetime=2021-01-17 23:52:23.0]
[INFO] Orders[id=100003,userid=bee,name=null,total=100.00,createtime=null,remark=new2,sequence=,abc=null,updatetime=2021-01-17 23:52:23.0]
[INFO] [Bee] PreparedSqlLib selectJson SQL: select * from orders where userid=? limit ? , ?   [values]: bee,1,3
[INFO] [Bee] PreparedSqlLib selectJson SQL:  ( ExecutableSql )
select * from orders where userid='bee' limit 1 , 3
[INFO] [{"id":100002,"userid":"bee","total":100.00,"remark":"new2","sequence":"","updatetime":1610898743000},{"id":100003,"userid":"bee","total":100.00,"remark":"new2","sequence":"","updatetime":1610898743000}]
[INFO] getCustomSql:  select * from orders where name like #{name%}
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders where name like ? limit ? , ?   [values]: Bee%,1,3
[INFO] [Bee] PreparedSqlLib select SQL:  ( ExecutableSql )
select * from orders where name like 'Bee%' limit 1 , 3
[INFO] [Bee] | <--  select rows: 0
[INFO] getCustomSql:  select * from orders
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders limit ? , ?   [values]: 1,3
[INFO] [Bee] PreparedSqlLib select SQL:  ( ExecutableSql )
select * from orders limit 1 , 3
[INFO] [Bee] | <--  select rows: 3
[INFO] Orders[id=1005,userid=client02,name=null,total=20.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1007,userid=client01,name=null,total=91.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1008,userid=client02,name=null,total=20.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders
[INFO] [Bee] | <--  select rows: 12
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders limit ? , ?   [values]: 1,3
[INFO] [Bee] PreparedSqlLib select SQL:  ( ExecutableSql )
select * from orders limit 1 , 3
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] PreparedSqlLib select SQL: select orders.userid,test_user.name,orders.total,orders.createtime from orders,test_user where orders.userid=test_user.username and orders.sequence=?   [values]: 123456
[INFO] [Bee] PreparedSqlLib select SQL:  ( ExecutableSql )
select orders.userid,test_user.name,orders.total,orders.createtime from orders,test_user where orders.userid=test_user.username and orders.sequence='123456'
[INFO] [Bee]  | <--  select rows: 0
[INFO] [bee-exam] ====================PreparedSqlExam.test======end.

[INFO] [bee-exam] ====================TransactionExam.test======start:
[INFO] [Bee] insert SQL: insert into test_user(password,username) values (?,?)   [values]: bee-user,testuser
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into test_user(password,username) values ('bee-user','testuser')
[INFO] [Bee] | <--  Affected rows: 1
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,remark) values (?,?,?,?)   [values]: bee,Bee(ORM Framework),91.99,test transaction
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(userid,name,total,remark) values ('bee','Bee(ORM Framework)',91.99,'test transaction')
[INFO] [Bee] | <--  Affected rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=? and remark=?   [values]: bee,Bee(ORM Framework),91.99,test transaction
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee' and name='Bee(ORM Framework)' and total=91.99 and remark='test transaction'
[INFO] [Bee] | <--  select rows: 1
[INFO] Orders[id=100007,userid=bee,name=Bee(ORM Framework),total=91.99,createtime=2021-01-17 23:52:23.0,remark=test transaction,sequence=null,abc=null,updatetime=2021-01-17 23:52:23.0]
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and id=? for update    [values]: bee,100003
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee' and id=100003 for update 
[INFO] [Bee] | <--  select rows: 1
[INFO] Orders[id=100003,userid=bee,name=null,total=100.00,createtime=null,remark=new2,sequence=,abc=null,updatetime=2021-01-17 23:52:23.0]
[INFO] ---------------locking the record!
[INFO] doing...
[INFO] ---------------release the record!
[INFO] [bee-exam] ====================TransactionExam.test======end.

[INFO] [bee-exam] ====================ConditionExam.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like ? and total between ? and ? and name is not null order by userid asc limit ? , ?   [values]: bee%,90,100,0,10
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like 'bee%' and total between 90 and 100 and name is not null order by userid asc limit 0 , 10
[INFO] [Bee] | <--  select rows: 1
[INFO] Orders[id=100007,userid=bee,name=Bee(ORM Framework),total=91.99,createtime=2021-01-17 23:52:23.0,remark=test transaction,sequence=null,abc=null,updatetime=2021-01-17 23:52:23.0]
[INFO] [Bee] select SQL: select userid, total, createtime from orders where userid like ? and total between ? and ? and name is not null order by userid asc limit ? , ?   [values]: bee%,90,100,0,10
[INFO] [Bee] select SQL:  ( ExecutableSql )
select userid, total, createtime from orders where userid like 'bee%' and total between 90 and 100 and name is not null order by userid asc limit 0 , 10
[INFO] [Bee] | <--  select rows: 1
[INFO] Orders[id=null,userid=bee,name=null,total=91.99,createtime=2021-01-17 23:52:23.0,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] insert SQL: insert into orders(userid,total,remark) values (?,?,?)   [values]: test condition,0.01,test condition delete
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(userid,total,remark) values ('test condition',0.01,'test condition delete')
[INFO] [Bee] | <--  Affected rows: 1
[INFO] [Bee] insert SQL: insert into orders(userid,total,remark) values (?,?,?)   [values]: test condition,0.01,test condition delete
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(userid,total,remark) values ('test condition',0.01,'test condition delete')
[INFO] [Bee] | <--  Affected rows: 1
[INFO] [Bee] delete SQL: delete from orders where userid=? and remark like ? and total<=?   [values]: test condition,test condition %,0.01
[INFO] [Bee] delete SQL:  ( ExecutableSql )
delete from orders where userid='test condition' and remark like 'test condition %' and total<=0.01
[INFO] [Bee] | <--  Affected rows: 2
[INFO] delete(T entity,Condition condition), delete record num:2
[INFO] [Bee] update SQL(whereFields) :update orders set  abc=? where total>=? and remark like ?   [values]: test for update,97,test%
[INFO] [Bee] update SQL(whereFields) : ( ExecutableSql )
update orders set  abc='test for update' where total>=97 and remark like 'test%'
[INFO] [Bee] | <--  Affected rows: 0
[INFO] updateBy_NumByCondition: 0
[INFO] [Bee] update SQL(updateFields) :update orders set  remark=? where abc=? and total>=? and remark like ?   [values]: test for set,test for update,97,test%
[INFO] [Bee] update SQL(updateFields) : ( ExecutableSql )
update orders set  remark='test for set' where abc='test for update' and total>=97 and remark like 'test%'
[INFO] [Bee] | <--  Affected rows: 0
[INFO] updateNumCondition: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and id=? for update    [values]: bee,100003
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='bee' and id=100003 for update 
[INFO] [Bee] | <--  select rows: 1
[INFO] Orders[id=100003,userid=bee,name=null,total=100.00,createtime=null,remark=new2,sequence=,abc=null,updatetime=2021-01-17 23:52:23.0]
[INFO] [bee-exam] ====================ConditionExam.test======end.

[INFO] [bee-exam] ====================MoreTableExam.test======start:
[INFO] [Bee] select SQL: select orders.id,orders.userid,orders.name,orders.total,orders.createtime,orders.remark,orders.sequence,orders.abc,orders.updatetime,test_user.id,test_user.email,test_user.last_name,test_user.name,test_user.password,test_user.username,test_user.createtime from orders left join test_user on orders.userid=test_user.username where orders.userid=? and orders.name=? and test_user.email=? limit ? , ?   [values]: bee,Bee(ORM Framework),beeUser@163.com,0,10
[INFO] [Bee] select SQL:  ( ExecutableSql )
select orders.id,orders.userid,orders.name,orders.total,orders.createtime,orders.remark,orders.sequence,orders.abc,orders.updatetime,test_user.id,test_user.email,test_user.last_name,test_user.name,test_user.password,test_user.username,test_user.createtime from orders left join test_user on orders.userid=test_user.username where orders.userid='bee' and orders.name='Bee(ORM Framework)' and test_user.email='beeUser@163.com' limit 0 , 10
[INFO] [Bee] | <--  select rows: 1
[INFO] size of records:1
[INFO] Orders[id=100007,userid=bee,name=Bee(ORM Framework),total=91.99,createtime=2021-01-17 23:52:23.0,remark=test transaction,sequence=null,abc=null,updatetime=2021-01-17 23:52:23.0,TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=2021-01-17 23:52:23.0]]
[INFO] [Bee] select SQL: select orders.id,orders.userid,orders.name,orders.total,orders.createtime,orders.remark,orders.sequence,orders.abc,orders.updatetime,test_user.id,test_user.email,test_user.last_name,test_user.name,test_user.password,test_user.username,test_user.createtime from orders left join test_user on orders.userid=test_user.username where orders.userid=? and orders.name=? and test_user.email=? and orders.id>=? limit ? , ?   [values]: bee,Bee(ORM Framework),beeUser@163.com,1001,0,5
[INFO] [Bee] select SQL:  ( ExecutableSql )
select orders.id,orders.userid,orders.name,orders.total,orders.createtime,orders.remark,orders.sequence,orders.abc,orders.updatetime,test_user.id,test_user.email,test_user.last_name,test_user.name,test_user.password,test_user.username,test_user.createtime from orders left join test_user on orders.userid=test_user.username where orders.userid='bee' and orders.name='Bee(ORM Framework)' and test_user.email='beeUser@163.com' and orders.id>=1001 limit 0 , 5
[INFO] [Bee] | <--  select rows: 1
[INFO] size of records:1
[INFO] Orders[id=100007,userid=bee,name=Bee(ORM Framework),total=91.99,createtime=2021-01-17 23:52:23.0,remark=test transaction,sequence=null,abc=null,updatetime=2021-01-17 23:52:23.0,TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=2021-01-17 23:52:23.0]]
[INFO] [Bee] select SQL: select orders.id, test_user.id, userid, total, orders.createtime from orders left join test_user on orders.userid=test_user.username where orders.userid=? and orders.name=? and test_user.email=? and orders.id>=? limit ? , ?   [values]: bee,Bee(ORM Framework),beeUser@163.com,1001,0,5
[INFO] [Bee] select SQL:  ( ExecutableSql )
select orders.id, test_user.id, userid, total, orders.createtime from orders left join test_user on orders.userid=test_user.username where orders.userid='bee' and orders.name='Bee(ORM Framework)' and test_user.email='beeUser@163.com' and orders.id>=1001 limit 0 , 5
[INFO] [Bee] | <--  select rows: 1
[INFO] size of records:1
[INFO] Orders[id=100007,userid=bee,name=null,total=91.99,createtime=2021-01-17 23:52:23.0,remark=null,sequence=null,abc=null,updatetime=null,TestUser[id=800001,email=null,lastName=null,name=null,password=null,username=null,createtime=null]]
[INFO] [bee-exam] ====================MoreTableExam.test======end.

[INFO] [bee-exam] ====================UseJson.test======start:
[INFO] [Bee] selectJson SQL: select id,email,last_name,name,password,username,createtime from test_user
[INFO] selectJson(new TestUser()):
[INFO] [{"id":800001,"email":"beeUser@163.com","name":"Bee","password":"bee","username":"bee","createtime":1610898743000},{"id":800002,"email":"honey@163.com","lastName":"cn","name":"Honey","password":"honey","username":"honey","createtime":1583138493000},{"id":800003,"password":"bee-user","username":"testuser","createtime":1610898743000}]
[INFO] 将直接查询的json转成对象:
[INFO] TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=2021-01-17 23:52:23.0]
[INFO] TestUser[id=800002,email=honey@163.com,lastName=cn,name=Honey,password=honey,username=honey,createtime=2020-03-02 16:41:33.0]
[INFO] TestUser[id=800003,email=null,lastName=null,name=null,password=bee-user,username=testuser,createtime=2021-01-17 23:52:23.0]
[INFO] [Bee] select SQL: select id,email,last_name,name,password,username,createtime from test_user
[INFO] [Bee] | <--  select rows: 3
[INFO] TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=2021-01-17 23:52:23.0]
[INFO] TestUser[id=800002,email=honey@163.com,lastName=cn,name=Honey,password=honey,username=honey,createtime=2020-03-02 16:41:33.0]
[INFO] TestUser[id=800003,email=null,lastName=null,name=null,password=bee-user,username=testuser,createtime=2021-01-17 23:52:23.0]
[INFO] [Bee] selectJson SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] selectJson(new Orders()):
[INFO] [{"id":1004,"userid":"client01","total":91.00,"remark":"testOneTime"},{"id":1005,"userid":"client02","total":20.00,"remark":"testOneTime"},{"id":1007,"userid":"client01","total":91.00,"remark":"testOneTime"},{"id":1008,"userid":"client02","total":20.00,"remark":"testOneTime"},{"id":1009,"userid":"client03","total":23.00,"remark":"testOneTime"},{"id":10010,"userid":"client01","total":91.00,"remark":"testOneTime"},{"id":10011,"userid":"client02","total":20.00,"remark":"testOneTime"},{"id":10012,"userid":"client03","total":23.00,"remark":"testOneTime"},{"id":100001,"userid":"bee","total":100.00,"remark":"new2","sequence":"","updatetime":1610898743000},{"id":100002,"userid":"bee","total":100.00,"remark":"new2","sequence":"","updatetime":1610898743000},{"id":100003,"userid":"bee","total":100.00,"remark":"new2","sequence":"","updatetime":1610898743000},{"id":100006,"userid":"client","name":"client","total":93.99,"createtime":1610898742000,"remark":"testOneTime","sequence":"","updatetime":1610898742000},{"id":100007,"userid":"bee","name":"Bee(ORM Framework)","total":91.99,"createtime":1610898743000,"remark":"test transaction","updatetime":1610898743000}]
[INFO] 将直接查询的json转成对象:
[INFO] Orders[id=1004,userid=client01,name=null,total=91.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1005,userid=client02,name=null,total=20.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1007,userid=client01,name=null,total=91.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1008,userid=client02,name=null,total=20.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1009,userid=client03,name=null,total=23.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=10010,userid=client01,name=null,total=91.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=10011,userid=client02,name=null,total=20.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=10012,userid=client03,name=null,total=23.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=100001,userid=bee,name=null,total=100.00,createtime=null,remark=new2,sequence=,abc=null,updatetime=1610898743000]
[INFO] Orders[id=100002,userid=bee,name=null,total=100.00,createtime=null,remark=new2,sequence=,abc=null,updatetime=1610898743000]
[INFO] Orders[id=100003,userid=bee,name=null,total=100.00,createtime=null,remark=new2,sequence=,abc=null,updatetime=1610898743000]
[INFO] Orders[id=100006,userid=client,name=client,total=93.99,createtime=1610898742000,remark=testOneTime,sequence=,abc=null,updatetime=1610898742000]
[INFO] Orders[id=100007,userid=bee,name=Bee(ORM Framework),total=91.99,createtime=1610898743000,remark=test transaction,sequence=null,abc=null,updatetime=1610898743000]
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee] | <--  select rows: 13
[INFO] Orders[id=1004,userid=client01,name=null,total=91.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1005,userid=client02,name=null,total=20.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1007,userid=client01,name=null,total=91.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1008,userid=client02,name=null,total=20.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1009,userid=client03,name=null,total=23.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=10010,userid=client01,name=null,total=91.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=10011,userid=client02,name=null,total=20.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=10012,userid=client03,name=null,total=23.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=100001,userid=bee,name=null,total=100.00,createtime=null,remark=new2,sequence=,abc=null,updatetime=2021-01-17 23:52:23.0]
[INFO] Orders[id=100002,userid=bee,name=null,total=100.00,createtime=null,remark=new2,sequence=,abc=null,updatetime=2021-01-17 23:52:23.0]
[INFO] Orders[id=100003,userid=bee,name=null,total=100.00,createtime=null,remark=new2,sequence=,abc=null,updatetime=2021-01-17 23:52:23.0]
[INFO] Orders[id=100006,userid=client,name=client,total=93.99,createtime=2021-01-17 23:52:22.0,remark=testOneTime,sequence=,abc=null,updatetime=2021-01-17 23:52:22.0]
[INFO] Orders[id=100007,userid=bee,name=Bee(ORM Framework),total=91.99,createtime=2021-01-17 23:52:23.0,remark=test transaction,sequence=null,abc=null,updatetime=2021-01-17 23:52:23.0]
[INFO] [bee-exam] ====================UseJson.test======end.

[INFO] [bee-exam] ====================BugTest.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee] ==========get from cache.
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee] ==========get from cache.
[INFO] [Bee] selectJson SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee] ==========get from cache.
[INFO] [Bee] insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 10010,client01,null,91,null,testOneTime,null,null,null
[INFO] [Bee] insert[] SQL :  ( ExecutableSql [index0])
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (10010,'client01',null,91,null,'testOneTime',null,null,null)
[INFO] [Bee] --> index:1 ,  [values]: 1011,client02,null,20,null,testOneTime,null,null,null
[INFO] [Bee] insert[] SQL :  ( ExecutableSql [index1] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (1011,'client02',null,20,null,'testOneTime',null,null,null) ;
[ERROR] Duplicate entry '10010' for key 'PRIMARY'
[INFO] 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee] | <--  select rows: 13
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders
[INFO] [Bee]  | <--  select rows: 13
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders
[INFO] [Bee]  | <--  select rows: 13
[WARN] Use set method(s) in SELECT type, but it just effect in UPDATE type! Involved field(s): [test]
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark like ?   [values]: test\%%
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark like 'test%%'
[INFO] [Bee] | <--  select rows: 0
[INFO] [bee-exam] ====================BugTest.test======end.

[INFO] [bee-exam] ====================UpdateSetExam.test======start:
[INFO] [Bee] update SQL(whereFields) :update leaf_alloc set max_id=max_id+step where biz_tag=?   [values]: bee
[INFO] [Bee] update SQL(whereFields) : ( ExecutableSql )
update leaf_alloc set max_id=max_id+step where biz_tag='bee'
[INFO] [Bee] | <--  Affected rows: 1
[INFO] test setAdd , update num: 1
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: test
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag='test'
[INFO] [Bee] | <--  select rows: 1
[INFO] [Bee] update SQL(condition) :update leaf_alloc set max_id=max_id+step,version=version+? where id=? and biz_tag=? and max_id=? and version=?   [values]: 1,456537470402562,test,100,1
[INFO] [Bee] update SQL(condition) : ( ExecutableSql )
update leaf_alloc set max_id=max_id+step,version=version+1 where id=456537470402562 and biz_tag='test' and max_id=100 and version=1
[INFO] [Bee] | <--  Affected rows: 1
[INFO] test setMultiply , update num: 1
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: test
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag='test'
[INFO] [Bee] | <--  select rows: 1
[INFO] [Bee] update SQL(condition) :update leaf_alloc set max_id=?,version=version+? where id=? and biz_tag=? and max_id=? and version=?   [values]: 10003,1,456537470402562,test,200,2
[INFO] [Bee] update SQL(condition) : ( ExecutableSql )
update leaf_alloc set max_id=10003,version=version+1 where id=456537470402562 and biz_tag='test' and max_id=200 and version=2
[INFO] [Bee] | <--  Affected rows: 1
[INFO] test setMultiply , update num: 1
[INFO] [bee-exam] ====================UpdateSetExam.test======end.

[INFO] [bee-exam] ====================InsertTest.test======start:
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,remark) values (?,?,?,?)   [values]: client,client,93.99,testOneTime
[INFO] [Bee] insert SQL:  ( ExecutableSql )
insert into orders(userid,name,total,remark) values ('client','client',93.99,'testOneTime')
[INFO] [Bee] | <--  Affected rows: 1
[INFO] 1
[INFO] [Bee] insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: null,client,client,93.99,null,testOneTime,null,null,null
[INFO] [Bee] insert[] SQL :  ( ExecutableSql [index0])
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (null,'client','client',93.99,null,'testOneTime',null,null,null)
[INFO] [Bee] --> index:1 ,  [values]: null,client,client,93.99,null,testOneTime,,null,null
[INFO] [Bee] insert[] SQL :  ( ExecutableSql [index1] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (null,'client','client',93.99,null,'testOneTime','',null,null) ;
[INFO] [Bee] --> index:2 ,  [values]: null,client,null,93.99,null,testOneTime,null,null,null
[INFO] [Bee] insert[] SQL :  ( ExecutableSql [index2] )
insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (null,'client',null,93.99,null,'testOneTime',null,null,null) ;
[INFO] [Bee] | <-- [Batch:0] Affected rows: 3
[INFO] 3
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=? and remark=?   [values]: client,client,93.99,testOneTime
[INFO] [Bee] select SQL:  ( ExecutableSql )
select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid='client' and name='client' and total=93.99 and remark='testOneTime'
[INFO] [Bee] | <--  select rows: 4
[INFO] Orders[id=100006,userid=client,name=client,total=93.99,createtime=2021-01-17 23:52:22.0,remark=testOneTime,sequence=,abc=null,updatetime=2021-01-17 23:52:22.0]
[INFO] Orders[id=100010,userid=client,name=client,total=93.99,createtime=2021-01-17 23:52:25.0,remark=testOneTime,sequence=null,abc=null,updatetime=2021-01-17 23:52:25.0]
[INFO] Orders[id=100011,userid=client,name=client,total=93.99,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=100012,userid=client,name=client,total=93.99,createtime=null,remark=testOneTime,sequence=,abc=null,updatetime=null]
[INFO] [bee-exam] ====================InsertTest.test======end.

[INFO] [bee-exam] ====================DynamicTableExam.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from Orders_202007
[INFO] [Bee] | <--  select rows: 3
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc2
[INFO] [Bee] | <--  select rows: 3
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc2
[INFO] [Bee] ==========get from cache.
[INFO] 3
[INFO] 3
[INFO] [bee-exam] ====================DynamicTableExam.test======end.

