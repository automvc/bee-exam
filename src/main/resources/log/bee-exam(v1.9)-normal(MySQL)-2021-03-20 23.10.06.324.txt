[INFO] [Bee] PreparedSqlLib modify SQL: TRUNCATE orders
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] deleteOrdersNum: 0
[INFO] [Bee] PreparedSqlLib modify SQL: TRUNCATE orders_202007
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] deleteOrdersNum2: 0
[INFO] [Bee] PreparedSqlLib modify SQL: TRUNCATE test_user
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] deleteUserNum: 0
[INFO] [Bee] PreparedSqlLib modify SQL: TRUNCATE leaf_alloc
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] deleteLeafNum: 0
[INFO] [Bee] PreparedSqlLib modify SQL: TRUNCATE leaf_alloc2
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] deleteLeafNum2: 0
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO orders VALUES ('100001', 'Bee', 'Bee(ORM Framework)', '95.01', '2020-03-02 11:29:28', 'test', '12345601', 'test1', null);
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO orders VALUES ('100002', 'bee', 'Bee', '96.01', '2020-03-02 11:29:28', 'test%a', '12345602', 'test2', '2020-03-02 16:34:19');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO orders VALUES ('100003', 'bee', 'Bee', '97.01', '2020-03-02 11:29:28', 'testx%', '12345603', 'test3', '2020-03-02 16:34:19');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO orders_202007 VALUES ('100001', 'Bee', 'Bee(ORM Framework)', '95.01', '2020-03-02 11:29:28', 'test', '12345601', 'test1', null);
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO orders_202007 VALUES ('100002', 'bee', 'Bee', '96.01', '2020-03-02 11:29:28', 'test%a', '12345602', 'test2', '2020-03-02 16:34:19');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO orders_202007 VALUES ('100003', 'bee', 'Bee', '97.01', '2020-03-02 11:29:28', 'testx%', '12345603', 'test3', '2020-03-02 16:34:19');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO test_user VALUES ('800001', 'beeUser@163.com', null, 'Bee', 'bee', 'bee', null);
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO test_user VALUES ('800002', 'honey@163.com', 'cn', 'Honey', 'honey', 'honey', null);
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO leaf_alloc VALUES ('456537470402562', 'test', '100', '100', 'test segment', '2020-07-04 22:42:09', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO leaf_alloc VALUES ('456537470402563', 'order', '100', '100', 'order segment', '2020-07-04 22:42:10', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO leaf_alloc VALUES ('456537470402564', 'bee', '100', '100', 'order segment', '2020-09-19 19:05:10', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO leaf_alloc2 VALUES ('456537470402562', 'test', '100', '100', 'test segment', '2020-07-04 22:42:09', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO leaf_alloc2 VALUES ('456537470402563', 'order', '100', '100', 'order segment', '2020-07-04 22:42:10', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] PreparedSqlLib modify SQL: INSERT INTO leaf_alloc2 VALUES ('456537470402564', 'bee', '100', '100', 'order segment', '2020-09-19 19:05:10', '1');
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [bee-exam] ====================SuidExam.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001,Bee(ORM Framework)
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001,Bee(ORM Framework)
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.01,createtime=2020-03-02 11:29:28.0,remark=test,sequence=12345601,abc=test1,updatetime=null]
[INFO] [Bee] update SQL: update orders set  name=? where id=?   [values]: Bee(ORM Framework),100001
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] update record:1
[INFO] [Bee] insert SQL: insert into orders(userid,name,total) values (?,?,?)   [values]: bee,Bee-ORM Framework,91.99
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] insert record:1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=?   [values]: bee,Bee-ORM Framework,91.99
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=?   [values]: bee,Bee-ORM Framework,91.99
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100004,userid=bee,name=Bee-ORM Framework,total=91.99,createtime=2021-03-20 23:10:08.0,remark=null,sequence=null,abc=null,updatetime=2021-03-20 23:10:08.0]
[INFO] [Bee] delete SQL: delete from orders where userid=? and name=? and total=?   [values]: bee,Bee-ORM Framework,91.99
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] delete record:1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 3
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.01,createtime=2020-03-02 11:29:28.0,remark=test,sequence=12345601,abc=test1,updatetime=null]
[INFO] Orders[id=100002,userid=bee,name=Bee,total=96.01,createtime=2020-03-02 11:29:28.0,remark=test%a,sequence=12345602,abc=test2,updatetime=2020-03-02 16:34:19.0]
[INFO] Orders[id=100003,userid=bee,name=Bee,total=97.01,createtime=2020-03-02 11:29:28.0,remark=testx%,sequence=12345603,abc=test3,updatetime=2020-03-02 16:34:19.0]
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=?   [values]: bee,Bee-ORM Framework,91.99
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=?   [values]: bee,Bee-ORM Framework,91.99
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [bee-exam] ====================SuidExam.test======end.

[INFO] [bee-exam] ====================SuidExamEN.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001,Bee(ORM Framework)
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.01,createtime=2020-03-02 11:29:28.0,remark=test,sequence=12345601,abc=test1,updatetime=null]
[INFO] [Bee] update SQL: update orders set  name=? where id=?   [values]: Bee(ORM Framework),100001
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] update record:1
[INFO] [Bee] insert SQL: insert into orders(userid,name,total) values (?,?,?)   [values]: bee,Bee,91.99
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] insert record:1
[INFO] [Bee] delete SQL: delete from orders where userid=? and name=? and total=?   [values]: bee,Bee,91.99
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] delete record:1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001,Bee(ORM Framework)
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.01,createtime=2020-03-02 11:29:28.0,remark=test,sequence=12345601,abc=test1,updatetime=null]
[INFO] [bee-exam] ====================SuidExamEN.test======end.

[INFO] [bee-exam] ====================SuidRichExam.test======start:
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,remark) values (?,?,?,?)   [values]: client,client,93.99,testOneTime
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] insert record:1
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime,remark,abc,updatetime) values (?,?,?,?,?,?,?,?)   [values]: null,client,client,93.99,null,testOneTime,null,null
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] insert record:1
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,remark,sequence) values (?,?,?,?,?)   [values]: client,client,93.99,testOneTime,
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] insert record:1
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?)   [values]: null,client,client,93.99,null,testOneTime,,null,null
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] insert record:1
[INFO] [Bee] update SQL(updateFields) :update orders set  name=? , remark=? where userid=? and total=?   [values]: client,testOneTime,client,93.99
[INFO] [Bee]  | <--  Affected rows: 4
[INFO] updateNum1:  4
[INFO] [Bee] update SQL(updateFields) :update orders set  name=? where userid=? and total=? and remark=?   [values]: client,client,93.99,testOneTime
[INFO] [Bee]  | <--  Affected rows: 4
[INFO] updateNum2:  4
[INFO] [Bee] update SQL(updateFields) :update orders set  name=? where userid=? and total=? and remark=? and sequence=?   [values]: client,client,93.99,testOneTime,
[INFO] [Bee]  | <--  Affected rows: 2
[INFO] updateNum4:  2
[INFO] [Bee] update SQL(updateFields) :update orders set  name=? where userid=? and total=? and createtime is null and remark=? and abc is null and updatetime is null   [values]: client,client,93.99,testOneTime
[INFO] [Bee]  | <--  Affected rows: 2
[INFO] updateNum5:  2
[INFO] [Bee] update SQL(updateFields) :update orders set  name=? where userid=? and total=? and createtime is null and remark=? and sequence=? and abc is null and updatetime is null   [values]: client,client,93.99,testOneTime,
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] updateNum6:  1
[INFO] [Bee] update SQL(updateFields) :update orders set  name=? , total=? where userid=? and remark=? and sequence=?   [values]: client,93.99,client,testOneTime,
[INFO] [Bee]  | <--  Affected rows: 2
[INFO] updateNum4_2:  2
[INFO] [Bee] update SQL(updateFields) :update orders set  name=? , total=? where userid=? and createtime is null and remark=? and abc is null and updatetime is null   [values]: client,93.99,client,testOneTime
[INFO] [Bee]  | <--  Affected rows: 2
[INFO] updateNum5_2:  2
[INFO] [Bee] update SQL(updateFields) :update orders set  name=? , total=? where userid=? and createtime is null and remark=? and sequence=? and abc is null and updatetime is null   [values]: client,93.99,client,testOneTime,
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] updateNum6_2:  1
[INFO] [Bee] select fun SQL : select count(total) from orders where userid=? and name=? and total=? and remark=?   [values]: client,client,93.99,testOneTime
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee] select fun SQL : select max(total) from orders where userid=? and name=? and total=? and remark=?   [values]: client,client,93.99,testOneTime
[INFO] [Bee] select fun SQL : select min(total) from orders where userid=? and name=? and total=? and remark=?   [values]: client,client,93.99,testOneTime
[INFO] [Bee] select fun SQL : select avg(total) from orders where userid=? and name=? and total=? and remark=?   [values]: client,client,93.99,testOneTime
[INFO] [Bee] select fun SQL : select sum(total) from orders where userid=? and name=? and total=? and remark=?   [values]: client,client,93.99,testOneTime
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] funCount:4
[INFO] funMax:93.99
[INFO] funMin:93.99
[INFO] funAvg:93.990000
[INFO] funSum:375.96
[INFO] [Bee] insert SQL: insert into orders(id,userid,name,total,createtime,remark,abc,updatetime) values (?,?,?,?,?,?,?,?)   [values]: 100,client00,client01,93.99,null,testOneTime,null,null
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] insert record:1
[INFO] [Bee] update SQL: update orders set  userid=? , name=? , total=? , remark=? , sequence=? where id=?   [values]: client00,client01,93.99,testOneTime,,100
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] updateNum8:  1
[INFO] [Bee] update SQL: update orders set  userid=? , name=? , total=? , createtime =null , remark=? , abc =null , updatetime =null where id=?   [values]: client00,client01,93.99,testOneTime,100
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] updateNum9:  1
[INFO] [Bee] update SQL: update orders set  userid=? , name=? , total=? , createtime =null , remark=? , sequence=? , abc =null , updatetime =null where id=?   [values]: client00,client01,93.99,testOneTime,,100
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] updateNum10:  1
[INFO] [Bee] delete SQL: delete from orders where id=? and userid=? and name=? and total=? and remark=?   [values]: 100,client00,client01,93.99,testOneTime
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] deleteNum: 1
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 1004,client01,null,91,null,testOneTime,null,null,null
[INFO] [Bee] --> index:1 ,  [values]: 1005,client02,null,20,null,testOneTime,null,null,null
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 2
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:2 ,  [values]: 1006,client03,null,23,null,testOneTime,null,null,null
[INFO] [Bee]  | <-- [Batch:1] Affected rows: 1
[INFO] 3
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 1007,client01,null,91,null,testOneTime,null,null,null
[INFO] [Bee] --> index:1 ,  [values]: 1008,client02,null,20,null,testOneTime,null,null,null
[INFO] [Bee] --> index:2 ,  [values]: 1009,client03,null,23,null,testOneTime,null,null,null
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 3
[INFO] 3
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 10010,client01,null,91,null,testOneTime,null,null,null
[INFO] [Bee] --> index:1 ,  [values]: 10011,client02,null,20,null,testOneTime,null,null,null
[INFO] [Bee] --> index:2 ,  [values]: 10012,client03,null,23,null,testOneTime,null,null,null
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 3
[INFO] 3
[INFO] [Bee] select SQL(selectFields) : select name, total from orders where userid=?   [values]: bee
[INFO] [Bee]  | <--  select rows: 2
[INFO] 2
[INFO] [Bee] select SQL(selectFields) : select max_id from leaf_alloc
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] List<String[]> select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=?   [values]: client01
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL(selectFields) : select id, userid, total, createtime from orders where userid=?   [values]: client01
[INFO] [Bee]  | <--  select rows: 3
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] 1004  , 
[INFO] client01  , 
[INFO] 91.00  , 
[INFO] null  , 
[INFO] 
[INFO] 1007  , 
[INFO] client01  , 
[INFO] 91.00  , 
[INFO] null  , 
[INFO] 
[INFO] 10010  , 
[INFO] client01  , 
[INFO] 91.00  , 
[INFO] null  , 
[INFO] 
[INFO] test paging
[INFO] [Bee] select SQL(entity,size): select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? limit ? , ?   [values]: testOneTime,0,3
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select(entity,start,size) SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? limit ? , ?   [values]: testOneTime,0,3
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 3
[INFO] Orders[id=1004,userid=client01,name=null,total=91.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1005,userid=client02,name=null,total=20.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1006,userid=client03,name=null,total=23.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 100018,client18,null,18.18,null,test insert and delete,null,null,null
[INFO] [Bee] --> index:1 ,  [values]: 100019,client19,null,19.19,null,test insert and delete,null,null,null
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 2
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:2 ,  [values]: 100020,client20,null,20.20,null,test insert and delete,null,null,null
[INFO] [Bee]  | <-- [Batch:1] Affected rows: 1
[INFO] [Bee] delete SQL: delete from orders where remark=?   [values]: test insert and delete
[INFO] [Bee]  | <--  Affected rows: 3
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 100018,client18,null,18.18,null,test insert and delete,null,null,null
[INFO] [Bee] --> index:1 ,  [values]: 100019,client19,null,19.19,null,test insert and delete,null,null,null
[INFO] [Bee] --> index:2 ,  [values]: 100020,client20,null,20.20,null,test insert and delete,null,null,null
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 3
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 100021,client18,null,18.18,null,null,null,null
[INFO] [Bee] --> index:1 ,  [values]: 100022,client19,null,19.19,null,null,null,null
[INFO] [Bee] --> index:2 ,  [values]: 100023,client20,null,20.20,null,null,null,null
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 3
[INFO] [Bee] select fun SQL : select count(*) from orders where remark=?   [values]: test insert and delete
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=?   [values]: test insert and delete
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] selectJson SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=?   [values]: test insert and delete
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? and id>=?   [values]: test insert and delete,100018
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] selectJson SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? and id>=?   [values]: test insert and delete,100018
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? and id>=?   [values]: test insert and delete,100018
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] selectJson SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? and id>=?   [values]: test insert and delete,100018
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee] select fun SQL : select count(*) from orders where remark=? and id>=?   [values]: test insert and delete,100018
[INFO] [Bee] selectOrderBy SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=?order by id asc   [values]: test insert and delete
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] selectOrderBy SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=?order by id asc,name desc   [values]: test insert and delete
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and remark=?   [values]: 100021,test insert and delete
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? and id>=?   [values]: test insert and delete,100018
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select(entity,selectFields,start,size) SQL: select id, remark, userid from orders where id=? and remark=? limit ? , ?   [values]: 100021,test insert and delete,0,10
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select fun SQL : select max(total) from orders where id=? and remark=? and id>=?   [values]: 100021,test insert and delete,100018
[INFO] [Bee] update SQL(whereFields) :update orders set  remark=? where id>=?   [values]: test insert and delete,100018
[INFO] [Bee]  | <--  Affected rows: 6
[INFO] [Bee] delete SQL: delete from orders where id=? and remark=?   [values]: 100021,test insert and delete
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] delete SQL: delete from orders where remark=? and id>=?   [values]: test insert and delete,100018
[INFO] [Bee]  | <--  Affected rows: 5
[INFO] [Bee] deleteById SQL: delete from orders where id=?   [values]: 100021
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] deleteById SQL: delete from orders where id=?   [values]: 100022
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] deleteById SQL: delete from orders where id=?   [values]: 100023
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [bee-exam] ====================SuidRichExam.test======end.

[INFO] [bee-exam] ====================UpdateByExam.test======start:
[INFO] [Bee] update SQL(whereFields) :update orders set  total=? , remark=? where userid=?   [values]: 100,new2,bee
[INFO] [Bee]  | <--  Affected rows: 2
[INFO] update number:  2
[INFO] IncludeType.INCLUDE_BOTH
[INFO] [Bee] update SQL(whereFields) :update orders set  total=? , createtime =null , remark=? , sequence=? , abc =null , updatetime =null where userid=? and name is null   [values]: 100,new2,,bee
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] update number:  0
[INFO] IncludeType.INCLUDE_NULL
[INFO] [Bee] update SQL(whereFields) :update orders set  name =null , total=? , createtime =null , remark=? , abc =null , updatetime =null where userid=?   [values]: 100,new2,bee
[INFO] [Bee]  | <--  Affected rows: 2
[INFO] IncludeType.INCLUDE_EMPTY
[INFO] [Bee] update SQL(whereFields) :update orders set  total=? , remark=? , sequence=? where userid=?   [values]: 100,new2,,bee
[INFO] [Bee]  | <--  Affected rows: 2
[INFO] [bee-exam] ====================UpdateByExam.test======end.

[INFO] [bee-exam] ====================PreparedSqlExam.test======start:
[INFO] getCustomSql:  select * from orders where userid=?
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders where userid=? limit ? , ?   [values]: bee,1,3
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders where userid=? limit ? , ?   [values]: bee,1,3
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders where userid=? limit ? , ?   [values]: bee,1,3
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] PreparedSqlLib selectSomeField SQL: select * from orders where userid=? limit ? , ?   [values]: bee,2,3
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] PreparedSqlLib selectJson SQL: select * from orders where userid=? limit ? , ?   [values]: bee,1,3
[INFO] [{"id":100003,"userid":"bee","total":100.00,"remark":"new2","sequence":"","updatetime":1616253010000}]
[INFO] getCustomSql:  select * from orders where userid=#{userid}
[INFO] [Bee] PreparedSqlLib selectSomeField SQL: select * from orders where userid=? limit ? , ?   [values]: bee,1,3
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] PreparedSqlLib selectSomeField SQL: select * from orders where userid=? limit ? , ?   [values]: bee,1,3
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100003,userid=bee,name=null,total=100.00,createtime=null,remark=new2,sequence=,abc=null,updatetime=2021-03-20 23:10:10.0]
[INFO] [Bee] PreparedSqlLib selectJson SQL: select * from orders where userid=? limit ? , ?   [values]: bee,1,3
[INFO] [{"id":100003,"userid":"bee","total":100.00,"remark":"new2","sequence":"","updatetime":1616253010000}]
[INFO] getCustomSql:  select * from orders where name like #{name%}
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders where name like ? limit ? , ?   [values]: Bee%,1,3
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders where name like ? limit ? , ?   [values]: %Bee,1,3
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders where name like ? limit ? , ?   [values]: %Bee%,1,3
[INFO] [Bee]  | <--  select rows: 0
[INFO] getCustomSql:  select * from orders
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders limit ? , ?   [values]: 1,3
[INFO] [Bee]  | <--  select rows: 3
[INFO] Orders[id=1005,userid=client02,name=null,total=20.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1006,userid=client03,name=null,total=23.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=1007,userid=client01,name=null,total=91.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 16
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders limit ? , ?   [values]: 1,3
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] PreparedSqlLib select SQL: select orders.userid,test_user.name,orders.total,orders.createtime from orders,test_user where orders.userid=test_user.username and orders.sequence=?   [values]: 123456
[INFO] [Bee]  | <--  select rows: 0
[INFO] [bee-exam] ====================PreparedSqlExam.test======end.

[INFO] [bee-exam] ====================TransactionExam.test======start:
[INFO] [Bee] insert SQL: insert into test_user(password,username) values (?,?)   [values]: bee-user,testuser
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,remark) values (?,?,?,?)   [values]: bee,Bee(ORM Framework),91.99,test transaction
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=? and remark=?   [values]: bee,Bee(ORM Framework),91.99,test transaction
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100024,userid=bee,name=Bee(ORM Framework),total=91.99,createtime=2021-03-20 23:10:10.0,remark=test transaction,sequence=null,abc=null,updatetime=2021-03-20 23:10:10.0]
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and id=? for update    [values]: bee,100003
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100003,userid=bee,name=null,total=100.00,createtime=null,remark=new2,sequence=,abc=null,updatetime=2021-03-20 23:10:10.0]
[INFO] ---------------locking the record!
[INFO] doing...
[INFO] ---------------release the record!
[INFO] [bee-exam] ====================TransactionExam.test======end.

[INFO] [bee-exam] ====================ConditionExam.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid like ? and total between ? and ? and name is not null order by userid asc limit ? , ?   [values]: bee%,90,100,0,10
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100024,userid=bee,name=Bee(ORM Framework),total=91.99,createtime=2021-03-20 23:10:10.0,remark=test transaction,sequence=null,abc=null,updatetime=2021-03-20 23:10:10.0]
[INFO] [Bee] select SQL: select userid, total, createtime from orders where userid like ? and total between ? and ? and name is not null order by userid asc limit ? , ?   [values]: bee%,90,100,0,10
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=null,userid=bee,name=null,total=91.99,createtime=2021-03-20 23:10:10.0,remark=null,sequence=null,abc=null,updatetime=null]
[INFO] [Bee] insert SQL: insert into orders(userid,total,remark) values (?,?,?)   [values]: test condition,0.01,test condition delete
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] insert SQL: insert into orders(userid,total,remark) values (?,?,?)   [values]: test condition,0.01,test condition delete
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] delete SQL: delete from orders where userid=? and remark like ? and total<=?   [values]: test condition,test condition %,0.01
[INFO] [Bee]  | <--  Affected rows: 2
[INFO] delete(T entity,Condition condition), delete record num:2
[INFO] [Bee] update SQL(whereFields) :update orders set  abc=? where total>=? and remark like ?   [values]: test for update,97,test%
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] updateBy_NumByCondition: 0
[INFO] [Bee] update SQL(updateFields) :update orders set total=total+? , remark=? where abc=? and total>=? and remark like ?   [values]: 1,test for set,test for update,97,test%
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] updateNumCondition: 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and id=? for update    [values]: bee,100003
[INFO] [Bee]  | <--  select rows: 1
[INFO] Orders[id=100003,userid=bee,name=null,total=100.00,createtime=null,remark=new2,sequence=,abc=null,updatetime=2021-03-20 23:10:10.0]
[INFO] [Bee] select SQL: select userid from orders group by userid having count(userid)>=?   [values]: 1
[INFO] [Bee]  | <--  select rows: 6
[INFO] [Bee] update SQL(condition) :update orders set name=userid
[INFO] [Bee]  | <--  Affected rows: 17
[INFO] updateNum use SetWithField: 17
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where name=userid
[INFO] [Bee]  | <--  select rows: 17
[INFO] record num by select use opWithField: 17
[INFO] [Bee] select SQL: select userid from orders group by userid having count(*)>=? and count(distinct(userid))>=?   [values]: 2,1
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 5
[INFO] 5
[INFO] [bee-exam] ====================ConditionExam.test======end.

[INFO] [bee-exam] ====================MoreTableExam.test======start:
[INFO] [Bee] select SQL: select orders.id,orders.userid,orders.name,orders.total,orders.createtime,orders.remark,orders.sequence,orders.abc,orders.updatetime,test_user.id,test_user.email,test_user.last_name,test_user.name,test_user.password,test_user.username,test_user.createtime from orders join test_user on orders.userid=test_user.username and orders.name=test_user.name where orders.userid=? and orders.name=? and test_user.name=? limit ? , ?   [values]: bee,Bee,Bee,0,10
[INFO] [Bee]  | <--  select rows: 0
[INFO] size of records:0
[INFO] [Bee] select SQL: select orders.id,orders.userid,orders.name,orders.total,orders.createtime,orders.remark,orders.sequence,orders.abc,orders.updatetime,test_user.id,test_user.email,test_user.last_name,test_user.name,test_user.password,test_user.username,test_user.createtime from orders join test_user on orders.userid=test_user.username and orders.name=test_user.name where orders.userid=? and orders.name=? and test_user.name=? and orders.id>=? limit ? , ?   [values]: bee,Bee,Bee,1001,0,5
[INFO] [Bee]  | <--  select rows: 0
[INFO] size of records:0
[INFO] [Bee] select SQL: select orders.id, test_user.id, userid, total, orders.createtime from orders join test_user on orders.userid=test_user.username and orders.name=test_user.name where orders.userid=? and orders.name=? and test_user.name=? and orders.id>=? limit ? , ?   [values]: bee,Bee,Bee,1001,0,5
[INFO] [Bee]  | <--  select rows: 0
[INFO] size of records:0
[INFO] [Bee] select SQL: select assignexam.id,assignexam.classno,assignexam.term,assignexam.examno,assignexam.subjectno,assignexam.subject,assignexam.creater,assignexam.createtime,assignexam.updater,assignexam.updatetime,assignexam.remark,assignexam.ext1,assignexam.status,assignexam.schoolno,assigncourse.id,assigncourse.classno,assigncourse.term,assigncourse.teacherno,assigncourse.name,assigncourse.subjectno,assigncourse.subject,assigncourse.creater,assigncourse.createtime,assigncourse.updater,assigncourse.updatetime,assigncourse.remark,assigncourse.status,assigncourse.schoolno from assignexam join assigncourse on assignexam.classno=assigncourse.classno and assignexam.term=assigncourse.term and assignexam.subjectno=assigncourse.subjectno where assignexam.status=? and assigncourse.status=?   [values]: 1,1
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] select SQL: select assignexam.id,assignexam.classno,assignexam.term,assignexam.examno,assignexam.subjectno,assignexam.subject,assignexam.creater,assignexam.createtime,assignexam.updater,assignexam.updatetime,assignexam.remark,assignexam.ext1,assignexam.status,assignexam.schoolno,assigncourse.id,assigncourse.classno,assigncourse.term,assigncourse.teacherno,assigncourse.name,assigncourse.subjectno,assigncourse.subject,assigncourse.creater,assigncourse.createtime,assigncourse.updater,assigncourse.updatetime,assigncourse.remark,assigncourse.status,assigncourse.schoolno from assignexam join assigncourse on assignexam.classno=assigncourse.classno and assignexam.term=assigncourse.term and assignexam.subjectno=assigncourse.subjectno where assignexam.classno=? and assignexam.status=? and assigncourse.status=?   [values]: aaa,1,1
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] delete SQL: delete from assigncourse where id=?   [values]: 344343344343
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] [Bee] select SQL: select assignexam.id,assignexam.classno,assignexam.term,assignexam.examno,assignexam.subjectno,assignexam.subject,assignexam.creater,assignexam.createtime,assignexam.updater,assignexam.updatetime,assignexam.remark,assignexam.ext1,assignexam.status,assignexam.schoolno,assigncourse.id,assigncourse.classno,assigncourse.term,assigncourse.teacherno,assigncourse.name,assigncourse.subjectno,assigncourse.subject,assigncourse.creater,assigncourse.createtime,assigncourse.updater,assigncourse.updatetime,assigncourse.remark,assigncourse.status,assigncourse.schoolno from assignexam join assigncourse on assignexam.classno=assigncourse.classno and assignexam.term=assigncourse.term and assignexam.subjectno=assigncourse.subjectno where assignexam.classno=? and assignexam.status=? and assigncourse.status=?   [values]: aaa,1,1
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 0
[INFO] [bee-exam] ====================MoreTableExam.test======end.

[INFO] [bee-exam] ====================UseJson.test======start:
[INFO] [Bee] selectJson SQL: select id,email,last_name,name,password,username,createtime from test_user
[INFO] selectJson(new TestUser()):
[INFO] [{"id":800001,"email":"beeUser@163.com","name":"Bee","password":"bee","username":"bee"},{"id":800002,"email":"honey@163.com","lastName":"cn","name":"Honey","password":"honey","username":"honey"},{"id":800003,"password":"bee-user","username":"testuser","createtime":1616253010000}]
[INFO] 将直接查询的json转成对象:
[INFO] TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=null]
[INFO] TestUser[id=800002,email=honey@163.com,lastName=cn,name=Honey,password=honey,username=honey,createtime=null]
[INFO] TestUser[id=800003,email=null,lastName=null,name=null,password=bee-user,username=testuser,createtime=1616253010000]
[INFO] [Bee] select SQL: select id,email,last_name,name,password,username,createtime from test_user
[INFO] [Bee]  | <--  select rows: 3
[INFO] TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=null]
[INFO] TestUser[id=800002,email=honey@163.com,lastName=cn,name=Honey,password=honey,username=honey,createtime=null]
[INFO] TestUser[id=800003,email=null,lastName=null,name=null,password=bee-user,username=testuser,createtime=2021-03-20 23:10:10.0]
[INFO] [Bee] selectJson SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] selectJson(new Orders()):
[INFO] [{"id":1004,"userid":"client01","name":"client01","total":91.00,"remark":"testOneTime","updatetime":1616253011000},{"id":1005,"userid":"client02","name":"client02","total":20.00,"remark":"testOneTime","updatetime":1616253011000},{"id":1006,"userid":"client03","name":"client03","total":23.00,"remark":"testOneTime","updatetime":1616253011000},{"id":1007,"userid":"client01","name":"client01","total":91.00,"remark":"testOneTime","updatetime":1616253011000},{"id":1008,"userid":"client02","name":"client02","total":20.00,"remark":"testOneTime","updatetime":1616253011000},{"id":1009,"userid":"client03","name":"client03","total":23.00,"remark":"testOneTime","updatetime":1616253011000},{"id":10010,"userid":"client01","name":"client01","total":91.00,"remark":"testOneTime","updatetime":1616253011000},{"id":10011,"userid":"client02","name":"client02","total":20.00,"remark":"testOneTime","updatetime":1616253011000},{"id":10012,"userid":"client03","name":"client03","total":23.00,"remark":"testOneTime","updatetime":1616253011000},{"id":100001,"userid":"Bee","name":"Bee","total":95.01,"createtime":1583119768000,"remark":"test","sequence":"12345601","abc":"test1","updatetime":1616253011000},{"id":100002,"userid":"bee","name":"bee","total":100.00,"remark":"new2","sequence":"","updatetime":1616253011000},{"id":100003,"userid":"bee","name":"bee","total":100.00,"remark":"new2","sequence":"","updatetime":1616253011000},{"id":100006,"userid":"client","name":"client","total":93.99,"createtime":1616253008000,"remark":"testOneTime","updatetime":1616253008000},{"id":100007,"userid":"client","name":"client","total":93.99,"remark":"testOneTime"},{"id":100008,"userid":"client","name":"client","total":93.99,"createtime":1616253008000,"remark":"testOneTime","sequence":"","updatetime":1616253008000},{"id":100009,"userid":"client","name":"client","total":93.99,"remark":"testOneTime","sequence":""},{"id":100024,"userid":"bee","name":"bee","total":91.99,"createtime":1616253010000,"remark":"test transaction","updatetime":1616253011000}]
[INFO] 将直接查询的json转成对象:
[INFO] Orders[id=1004,userid=client01,name=client01,total=91.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=1616253011000]
[INFO] Orders[id=1005,userid=client02,name=client02,total=20.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=1616253011000]
[INFO] Orders[id=1006,userid=client03,name=client03,total=23.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=1616253011000]
[INFO] Orders[id=1007,userid=client01,name=client01,total=91.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=1616253011000]
[INFO] Orders[id=1008,userid=client02,name=client02,total=20.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=1616253011000]
[INFO] Orders[id=1009,userid=client03,name=client03,total=23.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=1616253011000]
[INFO] Orders[id=10010,userid=client01,name=client01,total=91.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=1616253011000]
[INFO] Orders[id=10011,userid=client02,name=client02,total=20.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=1616253011000]
[INFO] Orders[id=10012,userid=client03,name=client03,total=23.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=1616253011000]
[INFO] Orders[id=100001,userid=Bee,name=Bee,total=95.01,createtime=1583119768000,remark=test,sequence=12345601,abc=test1,updatetime=1616253011000]
[INFO] Orders[id=100002,userid=bee,name=bee,total=100.00,createtime=null,remark=new2,sequence=,abc=null,updatetime=1616253011000]
[INFO] Orders[id=100003,userid=bee,name=bee,total=100.00,createtime=null,remark=new2,sequence=,abc=null,updatetime=1616253011000]
[INFO] Orders[id=100006,userid=client,name=client,total=93.99,createtime=1616253008000,remark=testOneTime,sequence=null,abc=null,updatetime=1616253008000]
[INFO] Orders[id=100007,userid=client,name=client,total=93.99,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=100008,userid=client,name=client,total=93.99,createtime=1616253008000,remark=testOneTime,sequence=,abc=null,updatetime=1616253008000]
[INFO] Orders[id=100009,userid=client,name=client,total=93.99,createtime=null,remark=testOneTime,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=100024,userid=bee,name=bee,total=91.99,createtime=1616253010000,remark=test transaction,sequence=null,abc=null,updatetime=1616253011000]
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee]  | <--  select rows: 17
[INFO] Orders[id=1004,userid=client01,name=client01,total=91.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=2021-03-20 23:10:11.0]
[INFO] Orders[id=1005,userid=client02,name=client02,total=20.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=2021-03-20 23:10:11.0]
[INFO] Orders[id=1006,userid=client03,name=client03,total=23.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=2021-03-20 23:10:11.0]
[INFO] Orders[id=1007,userid=client01,name=client01,total=91.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=2021-03-20 23:10:11.0]
[INFO] Orders[id=1008,userid=client02,name=client02,total=20.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=2021-03-20 23:10:11.0]
[INFO] Orders[id=1009,userid=client03,name=client03,total=23.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=2021-03-20 23:10:11.0]
[INFO] Orders[id=10010,userid=client01,name=client01,total=91.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=2021-03-20 23:10:11.0]
[INFO] Orders[id=10011,userid=client02,name=client02,total=20.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=2021-03-20 23:10:11.0]
[INFO] Orders[id=10012,userid=client03,name=client03,total=23.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=2021-03-20 23:10:11.0]
[INFO] Orders[id=100001,userid=Bee,name=Bee,total=95.01,createtime=2020-03-02 11:29:28.0,remark=test,sequence=12345601,abc=test1,updatetime=2021-03-20 23:10:11.0]
[INFO] Orders[id=100002,userid=bee,name=bee,total=100.00,createtime=null,remark=new2,sequence=,abc=null,updatetime=2021-03-20 23:10:11.0]
[INFO] Orders[id=100003,userid=bee,name=bee,total=100.00,createtime=null,remark=new2,sequence=,abc=null,updatetime=2021-03-20 23:10:11.0]
[INFO] Orders[id=100006,userid=client,name=client,total=93.99,createtime=2021-03-20 23:10:08.0,remark=testOneTime,sequence=null,abc=null,updatetime=2021-03-20 23:10:08.0]
[INFO] Orders[id=100007,userid=client,name=client,total=93.99,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=100008,userid=client,name=client,total=93.99,createtime=2021-03-20 23:10:08.0,remark=testOneTime,sequence=,abc=null,updatetime=2021-03-20 23:10:08.0]
[INFO] Orders[id=100009,userid=client,name=client,total=93.99,createtime=null,remark=testOneTime,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=100024,userid=bee,name=bee,total=91.99,createtime=2021-03-20 23:10:10.0,remark=test transaction,sequence=null,abc=null,updatetime=2021-03-20 23:10:11.0]
[INFO] [bee-exam] ====================UseJson.test======end.

[INFO] [bee-exam] ====================BugTest.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 17
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 17
[INFO] [Bee] selectJson SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 10010,client01,null,91,null,testOneTime,null,null,null
[INFO] [Bee] --> index:1 ,  [values]: 10011,client02,null,20,null,testOneTime,null,null,null
[ERROR] Please confirm whether it is Primary Key violation !!
[ERROR] Duplicate entry '10010' for key 'PRIMARY'
[INFO] 0
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 17
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders
[INFO] [Bee]  | <--  select rows: 17
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders
[INFO] [Bee]  | <--  select rows: 17
[WARN] Use Condition's set method(s) in SELECT type, but it just effect in UPDATE type! Involved field(s): [test]
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark like ?   [values]: test\%%
[INFO] [Bee]  | <--  select rows: 0
[INFO] [bee-exam] ====================BugTest.test======end.

[INFO] [bee-exam] ====================UpdateSetExam.test======start:
[INFO] [Bee] update SQL(whereFields) :update leaf_alloc set max_id=max_id+step where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] test setAdd , update num: 1
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: test
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] update SQL(condition) :update leaf_alloc set max_id=max_id+step,version=version+? where id=? and biz_tag=? and max_id=? and version=?   [values]: 1,456537470402562,test,100,1
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] test setMultiply , update num: 1
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: test
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] update SQL(condition) :update leaf_alloc set max_id=?,version=version+? where id=? and biz_tag=? and max_id=? and version=?   [values]: 10003,1,456537470402562,test,200,2
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] test setMultiply , update num: 1
[INFO] [Bee] update SQL(whereFields) :update orders set total=total+? , remark=? where id=? and total>=?   [values]: 1,updateById,1004,90
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [bee-exam] ====================UpdateSetExam.test======end.

[INFO] [bee-exam] ====================InsertTest.test======start:
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,remark) values (?,?,?,?)   [values]: client,client,93.99,testOneTime
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] 1
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: null,client,client,93.99,null,testOneTime,null,null,null
[INFO] [Bee] --> index:1 ,  [values]: null,client,client,93.99,null,testOneTime,,null,null
[INFO] [Bee] --> index:2 ,  [values]: null,client,Bee,93.99,null,testOneTime,null,null,null
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 3
[INFO] 3
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: null,client,client,93.99,null,testOneTime,null,null,null
[INFO] [Bee] --> index:1 ,  [values]: null,client,client,93.99,null,testOneTime,,null,null
[INFO] [Bee]  | <-- [Batch:0] Affected rows: 2
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:2 ,  [values]: null,client,Bee,93.99,null,testOneTime,null,null,null
[INFO] [Bee]  | <-- [Batch:1] Affected rows: 1
[INFO] 3
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where userid=? and name=? and total=? and remark=?   [values]: client,client,93.99,testOneTime
[INFO] [Bee]  | <--  select rows: 9
[INFO] Orders[id=100006,userid=client,name=client,total=93.99,createtime=2021-03-20 23:10:08.0,remark=testOneTime,sequence=null,abc=null,updatetime=2021-03-20 23:10:08.0]
[INFO] Orders[id=100007,userid=client,name=client,total=93.99,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=100008,userid=client,name=client,total=93.99,createtime=2021-03-20 23:10:08.0,remark=testOneTime,sequence=,abc=null,updatetime=2021-03-20 23:10:08.0]
[INFO] Orders[id=100009,userid=client,name=client,total=93.99,createtime=null,remark=testOneTime,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=100027,userid=client,name=client,total=93.99,createtime=2021-03-20 23:10:12.0,remark=testOneTime,sequence=null,abc=null,updatetime=2021-03-20 23:10:12.0]
[INFO] Orders[id=100028,userid=client,name=client,total=93.99,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=100029,userid=client,name=client,total=93.99,createtime=null,remark=testOneTime,sequence=,abc=null,updatetime=null]
[INFO] Orders[id=100031,userid=client,name=client,total=93.99,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=null]
[INFO] Orders[id=100032,userid=client,name=client,total=93.99,createtime=null,remark=testOneTime,sequence=,abc=null,updatetime=null]
[INFO] [bee-exam] ====================InsertTest.test======end.

[INFO] [bee-exam] ====================DynamicTableExam.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from Orders_202007
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc2
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc2
[INFO] [Bee]  | <--  select rows: 3
[INFO] 3
[INFO] 3
[INFO] [bee-exam] ====================DynamicTableExam.test======end.

[INFO] [bee-exam] ====================MoreSQLFunction.test======start:
[INFO] [Bee] selectJson SQL: select term, examno, subject,max(score) as maxScore,avg(score) as avgScore,min(score) as minScore from scores where status!=? group by term,examno,subjectno,subject order by term,examno,subjectno   [values]: FIN
[INFO] [{"term":"1","examno":"2020年秋八年级期末","subject":"语文","maxscore":100,"avgscore":86.32608695652173,"minscore":72},{"term":"1","examno":"2020年秋八年级期末","subject":"数学","maxscore":100,"avgscore":88.20430107526882,"minscore":72},{"term":"1","examno":"2020年秋八年级期末","subject":"英语","maxscore":100,"avgscore":85.33333333333333,"minscore":72},{"term":"3","examno":"2020年秋高二期末文","subject":"语文","maxscore":100,"avgscore":86.1,"minscore":72},{"term":"3","examno":"2020年秋高二期末文","subject":"数学","maxscore":100,"avgscore":86.63333333333334,"minscore":73},{"term":"3","examno":"2020年秋高二期末文","subject":"英语","maxscore":99,"avgscore":86.33333333333333,"minscore":72},{"term":"3","examno":"2020年秋高二期末理","subject":"语文","maxscore":100,"avgscore":88.27,"minscore":80},{"term":"3","examno":"2020年秋高二期末理","subject":"数学","maxscore":100,"avgscore":86.1,"minscore":72},{"term":"3","examno":"2020年秋高二期末理","subject":"英语","maxscore":100,"avgscore":88.2,"minscore":80}]
[INFO] [Bee] select SQL: select term, examno, subject,max(score) as maxScore,avg(score) as avgScore,min(score) as minScore from Scores where status!=? group by term,examno,subjectno,subject order by term,examno,subjectno   [values]: FIN
[INFO] [Bee]  | <--  select rows: 9
[INFO] ScoresResponse[classno=null,term=1,examno=2020年秋八年级期末,subject=语文,score=null,maxScore=null,avgScore=null,minScore=null]
[INFO] ScoresResponse[classno=null,term=1,examno=2020年秋八年级期末,subject=数学,score=null,maxScore=null,avgScore=null,minScore=null]
[INFO] ScoresResponse[classno=null,term=1,examno=2020年秋八年级期末,subject=英语,score=null,maxScore=null,avgScore=null,minScore=null]
[INFO] ScoresResponse[classno=null,term=3,examno=2020年秋高二期末文,subject=语文,score=null,maxScore=null,avgScore=null,minScore=null]
[INFO] ScoresResponse[classno=null,term=3,examno=2020年秋高二期末文,subject=数学,score=null,maxScore=null,avgScore=null,minScore=null]
[INFO] ScoresResponse[classno=null,term=3,examno=2020年秋高二期末文,subject=英语,score=null,maxScore=null,avgScore=null,minScore=null]
[INFO] ScoresResponse[classno=null,term=3,examno=2020年秋高二期末理,subject=语文,score=null,maxScore=null,avgScore=null,minScore=null]
[INFO] ScoresResponse[classno=null,term=3,examno=2020年秋高二期末理,subject=数学,score=null,maxScore=null,avgScore=null,minScore=null]
[INFO] ScoresResponse[classno=null,term=3,examno=2020年秋高二期末理,subject=英语,score=null,maxScore=null,avgScore=null,minScore=null]
[INFO] [Bee] select SQL: select term, examno, subject,max(score) as maxScore,avg(score) as avgScore,min(score) as minScore from scores where status!=? group by term,examno,subjectno,subject order by term,examno,subjectno   [values]: FIN
[INFO] [Bee]  | <--  select rows: 9
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] 1     2020年秋八年级期末     语文     100     86.32608695652173     72     
[INFO] 1     2020年秋八年级期末     数学     100     88.20430107526882     72     
[INFO] 1     2020年秋八年级期末     英语     100     85.33333333333333     72     
[INFO] 3     2020年秋高二期末文     语文     100     86.1     72     
[INFO] 3     2020年秋高二期末文     数学     100     86.63333333333334     73     
[INFO] 3     2020年秋高二期末文     英语     99     86.33333333333333     72     
[INFO] 3     2020年秋高二期末理     语文     100     88.27     80     
[INFO] 3     2020年秋高二期末理     数学     100     86.1     72     
[INFO] 3     2020年秋高二期末理     英语     100     88.2     80     
[INFO] [bee-exam] ====================MoreSQLFunction.test======end.

[INFO] [bee-exam] ====================SelectFun.test======start:
[INFO] [Bee] select fun SQL : select count(*) from scores where teacherno=?   [values]: 60001
[INFO] 60
[INFO] [Bee] select SQL: select id,classno,term,examno,subjectno,subject,stuno,name,teacherno,teachername,score,creater,createtime,updater,updatetime,remark,ext1,status,schoolno from scores where teacherno=? and status!=? and (classno=? or classno=?) limit ? , ?   [values]: 60001,FIN,201,191(高中),0,10
[INFO] [Bee]  | <--  select rows: 10
[INFO] Scores[id=6002675,classno=191(高中),term=3,examno=2020年秋高二期末理,subjectno=30001,subject=语文,stuno=19200001,name=高同学1,teacherno=60001,teachername=陈老师,score=80.0,creater=SYS,createtime=2021-01-16 19:06:02.0,updater=null,updatetime=2021-01-16 19:06:02.0,remark=null,ext1=null,status=INIT,schoolno=null]
[INFO] Scores[id=6002676,classno=191(高中),term=3,examno=2020年秋高二期末理,subjectno=30001,subject=语文,stuno=19200002,name=高同学2,teacherno=60001,teachername=陈老师,score=81.0,creater=SYS,createtime=2021-01-16 19:06:02.0,updater=null,updatetime=2021-01-16 19:06:02.0,remark=null,ext1=null,status=INIT,schoolno=null]
[INFO] Scores[id=6002677,classno=191(高中),term=3,examno=2020年秋高二期末理,subjectno=30001,subject=语文,stuno=19200003,name=高同学3,teacherno=60001,teachername=陈老师,score=82.9,creater=SYS,createtime=2021-01-16 19:06:02.0,updater=null,updatetime=2021-01-18 20:59:11.0,remark=null,ext1=null,status=INIT,schoolno=null]
[INFO] Scores[id=6002678,classno=191(高中),term=3,examno=2020年秋高二期末理,subjectno=30001,subject=语文,stuno=19200004,name=高同学4,teacherno=60001,teachername=陈老师,score=83.0,creater=SYS,createtime=2021-01-16 19:06:02.0,updater=null,updatetime=2021-01-18 21:01:25.0,remark=,ext1=null,status=INIT,schoolno=null]
[INFO] Scores[id=6002679,classno=191(高中),term=3,examno=2020年秋高二期末理,subjectno=30001,subject=语文,stuno=19200005,name=高同学5,teacherno=60001,teachername=陈老师,score=84.6,creater=SYS,createtime=2021-01-16 19:06:02.0,updater=老师账号,updatetime=2021-01-18 21:07:29.0,remark=abc,ext1=null,status=INIT,schoolno=null]
[INFO] Scores[id=6002680,classno=191(高中),term=3,examno=2020年秋高二期末理,subjectno=30001,subject=语文,stuno=19200006,name=高同学6,teacherno=60001,teachername=陈老师,score=85.6,creater=SYS,createtime=2021-01-16 19:06:02.0,updater=老师账号,updatetime=2021-01-18 21:08:35.0,remark=aaa,ext1=null,status=INIT,schoolno=null]
[INFO] Scores[id=6002681,classno=191(高中),term=3,examno=2020年秋高二期末理,subjectno=30001,subject=语文,stuno=19200007,name=高同学7,teacherno=60001,teachername=陈老师,score=86.0,creater=SYS,createtime=2021-01-16 19:06:02.0,updater=null,updatetime=2021-01-16 19:06:02.0,remark=null,ext1=null,status=INIT,schoolno=null]
[INFO] Scores[id=6002682,classno=191(高中),term=3,examno=2020年秋高二期末理,subjectno=30001,subject=语文,stuno=19200008,name=高同学8,teacherno=60001,teachername=陈老师,score=87.0,creater=SYS,createtime=2021-01-16 19:06:02.0,updater=null,updatetime=2021-01-16 19:06:02.0,remark=null,ext1=null,status=INIT,schoolno=null]
[INFO] Scores[id=6002683,classno=191(高中),term=3,examno=2020年秋高二期末理,subjectno=30001,subject=语文,stuno=19200009,name=高同学9,teacherno=60001,teachername=陈老师,score=88.0,creater=SYS,createtime=2021-01-16 19:06:02.0,updater=null,updatetime=2021-01-16 19:06:02.0,remark=null,ext1=null,status=INIT,schoolno=null]
[INFO] Scores[id=6002684,classno=191(高中),term=3,examno=2020年秋高二期末理,subjectno=30001,subject=语文,stuno=19200010,name=高同学10,teacherno=60001,teachername=陈老师,score=89.0,creater=SYS,createtime=2021-01-16 19:06:02.0,updater=null,updatetime=2021-01-16 19:06:02.0,remark=null,ext1=null,status=INIT,schoolno=null]
[INFO] [bee-exam] ====================SelectFun.test======end.

[INFO] [bee-exam] ====================MapSuidExam.test======start:
[INFO] [Bee] In MapSuid, selectJson SQL: select name,password from test_user where name=? and last_name is null order by name   [values]: Bee
[INFO] [{"name":"Bee","password":"bee"}]
[INFO] [Bee] In MapSuid, selectMap SQL: select name,password from test_user where name=? and last_name is null order by name   [values]: Bee
[INFO] [Bee]  | <--  select rows: 1
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee] In MapSuid, selectMap SQL: select name,password from test_user where name=? and last_name is null order by name   [values]: Bee
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] In MapSuid, selectOneMap SQL: select name,password from test_user where name=? and last_name is null order by name   [values]: Bee
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] Bee
[INFO] bee
[INFO] [Bee] In MapSuid, selectOneMap SQL: select name,password from test_user where name=? and last_name is null order by name   [values]: Bee
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] [bee-exam] ====================MapSuidExam.test======end.

[INFO] [bee-exam] ====================LockWaitTimeout.test======start:
[INFO] [Bee]  insert[] SQL : insert into orders(id,userid,name,total,createtime,remark,sequence,abc,updatetime) values (?,?,?,?,?,?,?,?,?), (?,?,?,?,?,?,?,?,?)
[INFO] [Bee] --> index:0 ,  [values]: 1004,client01,null,91,null,testOneTime,null,null,null
[INFO] [Bee] --> index:1 ,  [values]: 1005,client02,null,20,null,testOneTime,null,null,null
[ERROR] Please confirm whether it is Primary Key violation !!
[ERROR] Duplicate entry '1004' for key 'PRIMARY'
[INFO] 0
[INFO] test paging
[INFO] [Bee] select SQL(entity,size): select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? limit ? , ?   [values]: testOneTime,0,3
[INFO] [Bee]  | <--  select rows: 3
[INFO] [Bee] select(entity,start,size) SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where remark=? limit ? , ?   [values]: testOneTime,0,3
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 3
[INFO] Orders[id=1005,userid=client02,name=client02,total=20.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=2021-03-20 23:10:11.0]
[INFO] Orders[id=1006,userid=client03,name=client03,total=23.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=2021-03-20 23:10:11.0]
[INFO] Orders[id=1007,userid=client01,name=client01,total=91.00,createtime=null,remark=testOneTime,sequence=null,abc=null,updatetime=2021-03-20 23:10:11.0]
[INFO] [Bee] delete SQL: delete from orders where remark=?   [values]: testOneTime
[INFO] [Bee]  | <--  Affected rows: 19
[INFO] deleteNum2: 19
[INFO] [bee-exam] ====================LockWaitTimeout.test======end.

[INFO] [bee-exam] ====================SuidExamEN_SQLite.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders where id=? and name=?   [values]: 100001,Bee(ORM Framework)
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] update SQL: update orders set  name=? , updatetime=? where id=?   [values]: Bee(ORM Framework),2021-03-20 23:10:15,100001
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] update record:1
[INFO] [Bee] insert SQL: insert into orders(userid,name,total,createtime) values (?,?,?,?)   [values]: bee,Bee(ORM Framework),91.99,2021-03-20 23:10:15
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] insert record:1
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 6
[INFO] Orders[id=1004,userid=client01,name=client01,total=92.00,createtime=null,remark=updateById,sequence=null,abc=null,updatetime=2021-03-20 23:10:12.0]
[INFO] Orders[id=100001,userid=Bee,name=Bee(ORM Framework),total=95.01,createtime=2020-03-02 11:29:28.0,remark=test,sequence=12345601,abc=test1,updatetime=2021-03-20 23:10:15.0]
[INFO] Orders[id=100002,userid=bee,name=bee,total=100.00,createtime=null,remark=new2,sequence=,abc=null,updatetime=2021-03-20 23:10:11.0]
[INFO] Orders[id=100003,userid=bee,name=bee,total=100.00,createtime=null,remark=new2,sequence=,abc=null,updatetime=2021-03-20 23:10:11.0]
[INFO] Orders[id=100024,userid=bee,name=bee,total=91.99,createtime=2021-03-20 23:10:10.0,remark=test transaction,sequence=null,abc=null,updatetime=2021-03-20 23:10:11.0]
[INFO] Orders[id=100034,userid=bee,name=Bee(ORM Framework),total=91.99,createtime=2021-03-20 23:10:15.0,remark=null,sequence=null,abc=null,updatetime=2021-03-20 23:10:15.0]
[INFO] [bee-exam] ====================SuidExamEN_SQLite.test======end.

[INFO] [bee-exam] ====================UpdateSetExam_SQLite.test======start:
[INFO] [Bee] update SQL(whereFields) :update leaf_alloc set max_id=max_id+step where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] test setAdd , update num: 1
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: test
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] update SQL(condition) :update leaf_alloc set max_id=max_id+step,version=version+? where id=? and biz_tag=? and max_id=? and version=?   [values]: 1,456537470402562,test,10003,3
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] test setMultiply , update num: 1
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: test
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] update SQL(condition) :update leaf_alloc set max_id=?,version=version+? where id=? and biz_tag=? and max_id=? and version=?   [values]: 10003,1,456537470402562,test,10103,4
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] test setMultiply , update num: 1
[INFO] [bee-exam] ====================UpdateSetExam_SQLite.test======end.

[INFO] [bee-exam] ====================SelectById.test======start:
[INFO] [Bee] selectByIds SQL: select id,email,last_name,name,password,username,createtime from test_user where id=? or id=?   [values]: 800001,800002
[INFO] [Bee]  | <--  select rows: 2
[INFO] TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=null]
[INFO] =============================================
[INFO] TestUser[id=800002,email=honey@163.com,lastName=cn,name=Honey,password=honey,username=honey,createtime=null]
[INFO] =============================================
[INFO] [Bee] selectById SQL: select id,email,last_name,name,password,username,createtime from test_user where id=?   [values]: 800001
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=null]
[INFO] [Bee] selectById SQL: select id,email,last_name,name,password,username,createtime from test_user where id=?   [values]: 800001
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] selectById SQL: select id,email,last_name,name,password,username,createtime from test_user where id=?   [values]: 800001
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 1
[INFO] TestUser[id=800001,email=beeUser@163.com,lastName=null,name=Bee,password=bee,username=bee,createtime=null]
[INFO] [Bee] deleteById SQL: delete from test_user where id=?   [values]: 800001
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] deleteNum3: 1
[INFO] [Bee] insert SQL: insert into test_user(id,email,name,password,username) values (?,?,?,?,?)   [values]: 800001,beeUser@163.com,Bee,bee,bee
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] selectJson SQL: select id,email,last_name,name,password,username,createtime from test_user
[INFO] selectJson(new User()):
[INFO] [{"id":800001,"email":"beeUser@163.com","name":"Bee","password":"bee","username":"bee","createtime":1616253015000},{"id":800002,"email":"honey@163.com","lastName":"cn","name":"Honey","password":"honey","username":"honey"},{"id":800003,"password":"bee-user","username":"testuser","createtime":1616253010000}]
[INFO] [bee-exam] ====================SelectById.test======end.

[INFO] [bee-exam] ====================ObjSQLServiceExam.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee]  | <--  select rows: 6
[INFO] [Bee] select(entity,start,size) SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders limit ? , ?   [values]: 0,10
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 6
[INFO] [bee-exam] ====================ObjSQLServiceExam.test======end.

[INFO] [bee-exam] ====================NamingTest.test======start:
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders
[INFO] [Bee] ==========get from Cache.
[INFO] [Bee]  | <--  select rows: 6
[INFO] [Bee] select SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from Orders
[INFO] [Bee]  | <--  select rows: 6
[INFO] [Bee] select SQL: select ID,USERID,NAME,TOTAL,CREATETIME,REMARK,SEQUENCE,ABC,UPDATETIME from ORDERS
[INFO] [Bee]  | <--  select rows: 6
[INFO] [bee-exam] ====================NamingTest.test======end.

[INFO] [bee-exam] ====================IdTest.test======start:
[INFO] [bee-exam] ====================IdTest.test======end.

[INFO] [bee-exam] ====================ChainUpdateExam.test======start:
[INFO] update orders set name='Bee' , userid='Bee' , total=98.8 where (id>=100005 or id in (100004)) and name is not null  and createtime is null  and id not in (100001) and id in (100002,100003) and id between 100002 and 100004 and id not between 100005 and 100006 and name not in ('Bee')
[INFO] Getting this sql twice is same!
[INFO] [Bee] PreparedSqlLib modify SQL: update orders set name='Bee' , userid='Bee' , total=98.8 where (id>=100005 or id in (100004)) and name is not null  and createtime is null  and id not in (100001) and id in (100002,100003) and id between 100002 and 100004 and id not between 100005 and 100006 and name not in ('Bee')
[INFO] [Bee]  | <--  Affected rows: 0
[INFO] updateNum: 0
[INFO] update team_id set total=11 , remark='test' where 1=1 and price=99 and price>=99 and name like 'Bee%' and remark='test2' and orderid in ('111','112')
[INFO] The field: '-- total' is invalid!
[INFO] [bee-exam] ====================ChainUpdateExam.test======end.

[INFO] [bee-exam] ====================ChainSelectExam.test======start:
[INFO] [Bee] PreparedSqlLib select SQL: select name,max(total) from orders where name not like 'Bee%' and total between 10 and 100 and createtime is not null  group by name order by name asc
[INFO] [Bee]  | <--  select rows: 1
[INFO] bee   91.99   
[INFO] [Bee] PreparedSqlLib select SQL: select name,max(total) from orders where name='client' or name='bee' group by name having avg(total)>80
[INFO] [Bee]  | <--  select rows: 1
[INFO] bee   100.00   
[INFO] [Bee] PreparedSqlLib select SQL: select orders.id,total,orders.name,test_user.name from orders,test_user where orders.name=test_user.name and (total between 0 and 100) and orders.name='Bee'
[INFO] [Bee]  | <--  select rows: 0
[INFO] select distinct(team_id) from teams where price=99 group by team_id,name having count(*)=sum(case when status='aaa' then 1 else 0 end)
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders o join test_user t on o.name=t.name
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] PreparedSqlLib select SQL: select id,examno,classno,name,teacherno,createtime,updatetime from scores where classno in ('201') limit 0,10
[INFO] [Bee]  | <--  select rows: 10
[INFO] 6002396   2020年秋八年级期末   201   同学1   60001   2021-01-16 19:06:02.0   2021-01-17 11:08:06.0   
[INFO] 6002397   2020年秋八年级期末   201   同学2   60001   2021-01-16 19:06:02.0   2021-01-17 11:09:49.0   
[INFO] 6002398   2020年秋八年级期末   201   同学3   60001   2021-01-16 19:06:02.0   2021-01-19 22:32:29.0   
[INFO] 6002399   2020年秋八年级期末   201   同学4   60001   2021-01-16 19:06:02.0   2021-01-19 22:39:04.0   
[INFO] 6002400   2020年秋八年级期末   201   同学5   60001   2021-01-16 19:06:02.0   2021-01-16 19:06:02.0   
[INFO] 6002401   2020年秋八年级期末   201   同学6   60001   2021-01-16 19:06:02.0   2021-01-16 19:06:02.0   
[INFO] 6002402   2020年秋八年级期末   201   同学7   60001   2021-01-16 19:06:02.0   2021-01-16 19:06:02.0   
[INFO] 6002403   2020年秋八年级期末   201   同学8   60001   2021-01-16 19:06:02.0   2021-01-16 19:06:02.0   
[INFO] 6002404   2020年秋八年级期末   201   同学9   60001   2021-01-16 19:06:02.0   2021-01-16 19:06:02.0   
[INFO] 6002405   2020年秋八年级期末   201   同学10   60001   2021-01-16 19:06:02.0   2021-01-16 19:06:02.0   
[INFO] [Bee] PreparedSqlLib select SQL: select count(*) from scores where classno in ('201')
[INFO] [Bee]  | <--  select rows: 1
[INFO] 90   
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders where (id>=100005 or id in (100004)) and name is not null  and createtime is null  and id not in (100001) and id in (100002,100003) and id between 100002 and 100004 and id not between 100005 and 100006 and name not in ('testBee') and name='Bee' order by id
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders o left join test_user t on o.name=t.name
[INFO] [Bee]  | <--  select rows: 6
[INFO] 1004   client01   client01   92.00   null   updateById   null   null   2021-03-20 23:10:12.0   null   null   null   null   null   null   null   
[INFO] 100001   Bee   Bee(ORM Framework)   95.01   2020-03-02 11:29:28.0   test   12345601   test1   2021-03-20 23:10:15.0   null   null   null   null   null   null   null   
[INFO] 100002   bee   bee   100.00   null   new2      null   2021-03-20 23:10:11.0   null   null   null   null   null   null   null   
[INFO] 100003   bee   bee   100.00   null   new2      null   2021-03-20 23:10:11.0   null   null   null   null   null   null   null   
[INFO] 100024   bee   bee   91.99   2021-03-20 23:10:10.0   test transaction   null   null   2021-03-20 23:10:11.0   null   null   null   null   null   null   null   
[INFO] 100034   bee   Bee(ORM Framework)   91.99   2021-03-20 23:10:15.0   null   null   null   2021-03-20 23:10:15.0   null   null   null   null   null   null   null   
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders o right join test_user t on o.name=t.name
[INFO] [Bee]  | <--  select rows: 3
[INFO] null   null   null   null   null   null   null   null   null   800001   beeUser@163.com   null   Bee   bee   bee   2021-03-20 23:10:15.0   
[INFO] null   null   null   null   null   null   null   null   null   800002   honey@163.com   cn   Honey   honey   honey   null   
[INFO] null   null   null   null   null   null   null   null   null   800003   null   null   null   bee-user   testuser   2021-03-20 23:10:10.0   
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders o inner join test_user t on o.name=t.name
[INFO] [Bee]  | <--  select rows: 0
[INFO] (total between 0 and 100) and orders.name='Bee'
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders where exists (select id from orders)
[INFO] [Bee]  | <--  select rows: 6
[INFO] 1004   client01   client01   92.00   null   updateById   null   null   2021-03-20 23:10:12.0   
[INFO] 100001   Bee   Bee(ORM Framework)   95.01   2020-03-02 11:29:28.0   test   12345601   test1   2021-03-20 23:10:15.0   
[INFO] 100002   bee   bee   100.00   null   new2      null   2021-03-20 23:10:11.0   
[INFO] 100003   bee   bee   100.00   null   new2      null   2021-03-20 23:10:11.0   
[INFO] 100024   bee   bee   91.99   2021-03-20 23:10:10.0   test transaction   null   null   2021-03-20 23:10:11.0   
[INFO] 100034   bee   Bee(ORM Framework)   91.99   2021-03-20 23:10:15.0   null   null   null   2021-03-20 23:10:15.0   
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders where not exists (select id from orders)
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders where id in (select id from orders)
[INFO] [Bee]  | <--  select rows: 6
[INFO] 1004   client01   client01   92.00   null   updateById   null   null   2021-03-20 23:10:12.0   
[INFO] 100001   Bee   Bee(ORM Framework)   95.01   2020-03-02 11:29:28.0   test   12345601   test1   2021-03-20 23:10:15.0   
[INFO] 100002   bee   bee   100.00   null   new2      null   2021-03-20 23:10:11.0   
[INFO] 100003   bee   bee   100.00   null   new2      null   2021-03-20 23:10:11.0   
[INFO] 100024   bee   bee   91.99   2021-03-20 23:10:10.0   test transaction   null   null   2021-03-20 23:10:11.0   
[INFO] 100034   bee   Bee(ORM Framework)   91.99   2021-03-20 23:10:15.0   null   null   null   2021-03-20 23:10:15.0   
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders where id not in (select id from orders)
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] PreparedSqlLib select SQL: select count(total),max(total),min(total),avg(total),sum(total) from orders
[INFO] [Bee]  | <--  select rows: 1
[INFO] 6   100.00   91.99   95.165000   570.99   
[INFO] The field: '-- price' is invalid!
[INFO] The expression: ' --count(*)=sum(case when status='aaa' then 1 else 0 end)' is invalid!
[INFO] ChainSelectExam finished....
[INFO] [bee-exam] ====================ChainSelectExam.test======end.

[INFO] [bee-exam] ====================UnionSelectExam.test======start:
[INFO] select * from orders,test_user where orders.name=test_user.name limit 0,10
[INFO] Getting this sql twice is same!
[INFO] [Bee] PreparedSqlLib select SQL: select * from orders,test_user where orders.name=test_user.name limit 0,10
[INFO] [Bee]  | <--  select rows: 0
[INFO] [Bee] PreparedSqlLib select SQL: (select * from orders where userid='client01') union (select * from orders where userid='bee')
[INFO] [Bee]  | <--  select rows: 5
[INFO] 1004   client01   client01   92.00   null   updateById   null   null   2021-03-20 23:10:12.0   
[INFO] 100002   bee   bee   100.00   null   new2      null   2021-03-20 23:10:11.0   
[INFO] 100003   bee   bee   100.00   null   new2      null   2021-03-20 23:10:11.0   
[INFO] 100024   bee   bee   91.99   2021-03-20 23:10:10.0   test transaction   null   null   2021-03-20 23:10:11.0   
[INFO] 100034   bee   Bee(ORM Framework)   91.99   2021-03-20 23:10:15.0   null   null   null   2021-03-20 23:10:15.0   
[INFO] [Bee] PreparedSqlLib select SQL: (select * from orders where userid='client01') union all (select * from orders where userid='bee')
[INFO] [Bee]  | <--  select rows: 5
[INFO] 1004   client01   client01   92.00   null   updateById   null   null   2021-03-20 23:10:12.0   
[INFO] 100002   bee   bee   100.00   null   new2      null   2021-03-20 23:10:11.0   
[INFO] 100003   bee   bee   100.00   null   new2      null   2021-03-20 23:10:11.0   
[INFO] 100024   bee   bee   91.99   2021-03-20 23:10:10.0   test transaction   null   null   2021-03-20 23:10:11.0   
[INFO] 100034   bee   Bee(ORM Framework)   91.99   2021-03-20 23:10:15.0   null   null   null   2021-03-20 23:10:15.0   
[INFO] [bee-exam] ====================UnionSelectExam.test======end.

[INFO] [bee-exam] ====================OrdinaryTest.test======start:
[INFO] [bee-exam] ====================OrdinaryTest.test======end.

[INFO] [bee-exam] ====================ExceptionTest.test======start:
[ERROR] The sql statement string get by sqlId:osql.donot.exist, is Null !
[ERROR] ObjSQLException:updateFieldList at least include one field.
[INFO] [Bee] insert SQL: insert into test_user(username) values (?)   [values]: testuser
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] insert SQL: insert into orders(userid,total) values (?,?)   [values]: bee,91.99
[INFO] [Bee]  | <--  Affected rows: 1
[ERROR] The Transaction did not to begin!
[ERROR] ErrorField: testWrongField
[ERROR] BeeIllegalEntityException: Illegal Entity, java.lang.String
[ERROR] Parameter 'size' need great than 0!
[ERROR] The 'having' must be after 'group by' !
[INFO] [Bee] delete SQL: delete from orders
[ERROR] BeeIllegalBusinessException: It is not allowed delete whole records in one table.
[ERROR]  workerid is wrong. need in [0,1023]
[INFO] [Bee] select(entity,start,size) SQL: select id,userid,name,total,createtime,remark,sequence,abc,updatetime from orders limit ? , ?   [values]: 1,10
[INFO] [Bee]  | <--  select rows: 6
[ERROR]  test NoConfigException!
[ERROR]  test JoinTableException!
[ERROR]  test JoinTableParameterException!
[ERROR]  test ObjSQLIllegalSQLStringException!
[ERROR] null
[ERROR] null
[ERROR] null
[INFO] [bee-exam] ====================ExceptionTest.test======end.

[INFO] [bee-exam] ====================RwDsExam.test======start:
[INFO] [Bee] update SQL(updateFields) :update leaf_alloc set max_id=max_id+step where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] ---------------------------------update num is :1
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=400,step=100,description=order segment,updateTime=2021-03-20 23:10:16.0,version=1]
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=400,step=100,description=order segment,updateTime=2021-03-20 23:10:16.0,version=1]
[INFO] [Bee] select(entity,start,size) SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ? , ?   [values]: bee,0,10
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] update SQL(condition) :update leaf_alloc set max_id=max_id+step where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  Affected rows: 1
[INFO] [Bee] select SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=?   [values]: bee
[INFO] [Bee]  | <--  select rows: 1
[INFO] LeafAlloc[id=456537470402564,bizTag=bee,maxId=500,step=100,description=order segment,updateTime=2021-03-20 23:10:16.0,version=1]
[INFO] [Bee] select(entity,start,size) SQL: select id,biz_tag,max_id,step,description,update_time,version from leaf_alloc where biz_tag=? limit ? , ?   [values]: bee,0,10
[WARN] [Bee] ==========Cache would be full!
[WARN] [Bee] ==========Cache already used more than 90% !
[INFO] [Bee]  | <--  select rows: 1
[INFO] [Bee] ========= reset the dbName in HoneyConfig is :MySQL
[INFO] [bee-exam] ====================RwDsExam.test======end.

